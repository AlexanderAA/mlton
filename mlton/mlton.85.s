/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:18:25 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl loop_3949
.hidden loop_3949
loop_3949:
L_251647:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_251648
L_251655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_251656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251656
.p2align 0x4
.long 0x460
L_251656:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_251648:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_483042
L_251649:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_251650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3949
.p2align 0x4
L_483042:
L_251654:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_251650:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251651
L_251652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_251653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251653
.p2align 0x4
.long 0x4E8
L_251653:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_251651:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkScheme_0
.hidden checkScheme_0
checkScheme_0:
L_251657:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_251726
L_251658:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483059
L_251659:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x38(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x48(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_483058
	cmpq $0x1052,%r15
	je L_483051
L_251660:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_483050
L_251662:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movslq %r15d,%r14
	movq %r14,0x48(%rbp)
	testq %r14,%r14
	jz L_483049
L_251663:
	cmpq $0x7FFFFFFF,%r14
	ja L_483048
L_251664:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251665
L_251690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_251691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251691
.p2align 0x4
.long 0xF2C
L_251691:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_251665:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_251666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251666
.p2align 0x4
.long 0xF2C
L_251666:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_251667:
	movq $0x0,0x58(%rbp)
loop_2917:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_483046
L_251668:
	movq 0x50(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_483045
L_251671:
	movq $0x3EC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	movl %r13d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_251672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_483045:
L_251670:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483046:
L_251680:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xD330)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_251681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_483048:
L_251693:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483049:
L_251694:
	movq (globalObjptr+0x4DD0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_251667
.p2align 0x4
L_483050:
L_251661:
	movq (globalObjptr+0x4DC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483051:
L_251696:
	movq 0x8(%r11),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_251661
L_251697:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movslq %r15d,%r14
	movq %r14,0x48(%rbp)
	testq %r14,%r14
	jz L_483056
L_251698:
	cmpq $0x7FFFFFFF,%r14
	ja L_251693
L_251699:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251700
L_251722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_251723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251723
.p2align 0x4
.long 0xF2C
L_251723:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_251700:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_251701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251701
.p2align 0x4
.long 0xF2C
L_251701:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_251702:
	movq $0x0,0x58(%rbp)
loop_2918:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_483053
L_251703:
	movq 0x50(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251670
L_251705:
	movq $0x3EC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	movl %r13d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_251706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_483053:
L_251713:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xD330)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_251714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_483056:
L_251725:
	movq (globalObjptr+0x4DD0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_251702
.p2align 0x4
L_483058:
L_251695:
	movq 0x0(%r11),%r15
L_251676:
	movq $0x2A61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA448)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA440)(%rip),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%rbp)
	jmp equalSchemes_0
.p2align 0x4
L_483059:
L_251726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_251727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251727
.p2align 0x4
.long 0x460
L_251727:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_251659
.p2align 0x4
.long 0x3EA8
L_251672:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_251673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3EAB
L_251681:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x528)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_483061
L_251683:
	movl %r14d,0x0(%r15)
	movl %r13d,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_251684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_483061:
L_251682:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3EA8
L_251706:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_251707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3EAB
L_251714:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x528)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_251682
L_251715:
	movl %r14d,0x0(%r15)
	movl %r13d,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_251716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3EA9
L_251673:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251674
L_251678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_251679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251679
.p2align 0x4
.long 0x3EAA
L_251679:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_251674:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_483063
L_251675:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
	jmp L_251676
.p2align 0x4
L_483063:
L_251677:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_251676
.p2align 0x4
.long 0x3EAC
L_251684:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_251685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3EA9
L_251707:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251708
L_251711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_251712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251712
.p2align 0x4
.long 0x3EAA
L_251712:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_251708:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_483065
L_251709:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
	jmp L_251676
.p2align 0x4
L_483065:
L_251710:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_251676
.p2align 0x4
.long 0x3EAC
L_251716:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_251717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3EAD
L_251685:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_251686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3EAD
L_251717:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_251718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3EAE
L_251686:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251687
L_251688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251689
.p2align 0x4
.long 0x3EAF
L_251689:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251687:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x68(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2917
.p2align 0x4
.long 0x3EAE
L_251718:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251719
L_251720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251721
.p2align 0x4
.long 0x3EAF
L_251721:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251719:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x68(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2918
.text
.p2align 0x4
.globl equalSchemes_0
.hidden equalSchemes_0
equalSchemes_0:
L_251728:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_251893
L_251729:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483073
L_251730:
	movq 0x30(%rbp),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_483072
L_251883:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23DF,%r15
	je L_483071
L_251892:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_251887:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_483070
L_251889:
	movq %r15,0x30(%rbp)
	movq 0x18(%r14),%r14
	movq %r14,0x20(%rbp)
L_251732:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x70(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_483069
L_251733:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483069:
L_251734:
	movq $0x3EA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_251735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_483070:
L_251888:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_251732
.p2align 0x4
L_483071:
L_251884:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_251885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_483072:
L_251731:
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
	jmp L_251732
.p2align 0x4
L_483073:
L_251893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_251894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251894
.p2align 0x4
.long 0x647
L_251894:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_251730
.p2align 0x4
.long 0x3EB0
L_251735:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251736
L_251881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_251882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251882
.p2align 0x4
.long 0x3EC5
L_251882:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_251736:
	movq $0x3ED3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_251737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
.long 0x3EC6
L_251885:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251886
L_251890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251891
.p2align 0x4
.long 0x678
L_251891:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251886:
	movq 0x30(%rbp),%r15
	jmp L_251887
.p2align 0x4
.long 0x3EB1
L_251737:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251738
L_251879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_251880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251880
.p2align 0x4
.long 0x3EC4
L_251880:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_251738:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_483077
L_251739:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
L_251740:
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_251741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_483077:
L_251878:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_251740
.p2align 0x4
.long 0x3EB2
L_251741:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251742
L_251876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251877
.p2align 0x4
.long 0x3EC3
L_251877:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251742:
	movq $0x3049,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_251743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3EB3
L_251743:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251744
L_251874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251875
.p2align 0x4
.long 0x3EC2
L_251875:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251744:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_483080
L_251745:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10730)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483080:
L_251873:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3EB4
L_251746:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB4
L_251747:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251748
L_251871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251872
.p2align 0x4
.long 0x3EC1
L_251872:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251748:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251749:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_483085
L_251751:
	cmpq $0x1,%r14
	je L_483082
L_251752:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251749
.p2align 0x4
L_483082:
L_251753:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251754
L_251869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251870
.p2align 0x4
.long 0x3EC0
L_251870:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251754:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483083
L_251755:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_251756:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483083:
L_251868:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251756
.p2align 0x4
L_483085:
L_251750:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3EB5
L_251757:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB5
L_251758:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x152F,%r14
	je L_483087
L_251839:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483087:
L_251759:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB6
L_251840:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251841
L_251866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251867
.p2align 0x4
.long 0x3EBE
L_251867:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251841:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_483088
L_251842:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
L_251843:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483088:
L_251865:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x8(%rbp)
L_251848:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB6
L_251760:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251761
L_251837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251838
.p2align 0x4
.long 0x3EBE
L_251838:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251761:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_483090
L_251762:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
L_251763:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483090:
L_251836:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x8(%rbp)
L_251768:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB7
L_251844:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251845
L_251863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251864
.p2align 0x4
.long 0x3EBF
L_251864:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251845:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_483092
L_251846:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_251843
.p2align 0x4
L_483092:
L_251847:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_251848
.p2align 0x4
.long 0x3EB7
L_251849:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_251850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3EB7
L_251764:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251765
L_251834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251835
.p2align 0x4
.long 0x3EBF
L_251835:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251765:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_483094
L_251766:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_251763
.p2align 0x4
L_483094:
L_251767:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_251768
.p2align 0x4
.long 0x3EB7
L_251769:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_251770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3EB6
L_251850:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251851
L_251861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251862
.p2align 0x4
.long 0x3EBE
L_251862:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251851:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251852:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_251750
L_251853:
	cmpq $0x1,%r14
	je L_483096
L_251854:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251852
.p2align 0x4
L_483096:
L_251855:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251856
L_251859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251860
.p2align 0x4
.long 0x3EBD
L_251860:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251856:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483101
L_251857:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_251778:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251779:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_251750
L_251780:
	cmpq $0x1,%r15
	je L_483097
L_251781:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251779
.p2align 0x4
L_483097:
L_251782:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251783
L_251827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251828
.p2align 0x4
.long 0x18CB
L_251828:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251783:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483098
L_251784:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
L_251785:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106E8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483098:
L_251826:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251785
.p2align 0x4
L_483101:
L_251858:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251778
.p2align 0x4
.long 0x3EB6
L_251770:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251771
L_251832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251833
.p2align 0x4
.long 0x3EBE
L_251833:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251771:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251772:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_251750
L_251773:
	cmpq $0x1,%r14
	je L_483105
L_251774:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251772
.p2align 0x4
L_483105:
L_251775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251776
L_251830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251831
.p2align 0x4
.long 0x3EBD
L_251831:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251776:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483106
L_251777:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_251778
.p2align 0x4
L_483106:
L_251829:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251778
.p2align 0x4
.long 0x3EB8
L_251786:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251787
L_251824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251825
.p2align 0x4
.long 0x3EBC
L_251825:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251787:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251788:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_251750
L_251789:
	cmpq $0x1,%r14
	je L_483110
L_251790:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251788
.p2align 0x4
L_483110:
L_251791:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251792
L_251822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251823
.p2align 0x4
.long 0x18CB
L_251823:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251792:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483111
L_251793:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_251794:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106F0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483111:
L_251821:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251794
.p2align 0x4
.long 0x3EB9
L_251795:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251796
L_251819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251820
.p2align 0x4
.long 0x3EBC
L_251820:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251796:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251797:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_251750
L_251798:
	cmpq $0x1,%r14
	je L_483115
L_251799:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251797
.p2align 0x4
L_483115:
L_251800:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251801
L_251817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251818
.p2align 0x4
.long 0x3EBB
L_251818:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251801:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483116
L_251802:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_251803:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_251804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_483116:
L_251816:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251803
.p2align 0x4
.long 0x18D9
L_251804:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251805
L_251814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_251815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251815
.p2align 0x4
.long 0x3EBA
L_251815:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_251805:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483122
L_251806:
	decl %ecx
	jo L_251750
L_251807:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
L_251808:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251750
L_251809:
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_251810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483122:
L_251813:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251808
.p2align 0x4
.long 0x1
L_251810:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_483124
L_251811:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483124:
L_251812:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3938
.hidden loop_3938
loop_3938:
L_251895:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_251896
L_251992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_251993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251993
.p2align 0x4
.long 0x45C
L_251993:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_251896:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_251898
L_251899:
	cmpl $0x0,%r13d
	jl L_251976
L_251900:
	movl $0x0,0x3C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2919:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_483159
L_251901:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251898
L_251903:
	cmpl $0x0,%r13d
	jl L_483157
L_251904:
	xorl %ecx,%ecx
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_2920:
	movl 0x24(%rbp),%r14d
	cmpl 0x20(%rbp),%r14d
	jnl L_483156
L_251906:
	movl %ecx,0x38(%rbp)
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
loop_2921:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_483155
L_251908:
	movl 0x38(%rbp),%r10d
	cmpl %r11d,%r10d
	je L_483154
L_251909:
	movslq %r10d,%r11
	cmpq %r13,%r11
	jnb L_483153
L_251912:
	movq 0x0(%r14,%r11,8),%r13
	movq 0x10(%r13),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r15),%r9
	movq 0x18(%r13),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_483126
L_251913:
	incl %r10d
	jo L_483125
L_251915:
	movl %r10d,0x38(%rbp)
	jmp loop_2921
.p2align 0x4
L_483125:
L_251914:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483126:
L_251916:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483152
.p2align 0x4,,0x7
L_251917:
	movl 0x38(%rbp),%r13d
	incl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_251914
L_251918:
	movq 0x10(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1536,%r15
	je L_483138
L_251948:
	movq 0x0(%r13),%r15
	movq $0x1CF9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_483137
L_251949:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_483136
L_251950:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_251952:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_251953
L_251965:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD0,%r13
	je L_483132
L_251953:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_251914
L_251954:
	cmpq $0x1,%r15
	je L_483127
L_251955:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251952
.p2align 0x4
L_483127:
L_251956:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483130
.p2align 0x4,,0x7
L_251957:
	movl 0x30(%rbp),%ecx
L_251958:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_483129
L_251959:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_251961
L_251962:
	movl %ecx,0x0(%r15)
L_251961:
	movq $0x13F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x19A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_251935:
	incl 0x24(%rbp)
	movl 0x3C(%rbp),%ecx
	jmp loop_2920
.p2align 0x4
L_483129:
L_251931:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483130:
L_251963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_251964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251964
.p2align 0x4
.long 0x3EC7
L_251964:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_251957
.p2align 0x4
L_483132:
L_251966:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_251931
L_251967:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_483133
L_251970:
	movl %ecx,0x0(%r13)
	movq %r15,%r14
L_251969:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_251935
.p2align 0x4
L_483133:
	movq %r15,%r14
	jmp L_251969
.p2align 0x4
L_483136:
L_251971:
	xorl %ecx,%ecx
	jmp L_251958
.p2align 0x4
L_483137:
L_251920:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483138:
L_251919:
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_251920
L_251921:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_483149
L_251922:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_251924:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_483148
L_251939:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8B,%r11
	jne L_483147
L_251940:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_483144
L_251925:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_251914
L_251926:
	cmpq $0x1,%r15
	je L_483139
L_251927:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_251924
.p2align 0x4
L_483139:
L_251928:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483142
.p2align 0x4,,0x7
L_251929:
	movl 0x30(%rbp),%ecx
L_251930:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251931
L_251932:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_251934
L_251936:
	movl %ecx,0x0(%r15)
L_251934:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_251935
.p2align 0x4
L_483142:
L_251937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_251938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251938
.p2align 0x4
.long 0x27C5
L_251938:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_251929
.p2align 0x4
L_483144:
L_251942:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251931
L_251943:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_483145
L_251946:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_251945:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_251935
.p2align 0x4
L_483145:
L_251944:
	movq %r11,%r15
	jmp L_251945
.p2align 0x4
L_483147:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_251925
.p2align 0x4
L_483148:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_251925
.p2align 0x4
L_483149:
L_251947:
	xorl %ecx,%ecx
	jmp L_251930
.p2align 0x4
L_483152:
L_251972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_251973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251973
.p2align 0x4
.long 0x86E
L_251973:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_251917
.p2align 0x4
L_483153:
L_251911:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483154:
L_251974:
	movq (globalObjptr+0x4D98)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483155:
L_251898:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483156:
L_251905:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483157:
L_251976:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483159:
L_251977:
	movslq 0x40(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r10
	movl 0x3C(%rbp),%ecx
	movq %r10,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
loop_2922:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_251898
L_251979:
	cmpl %ecx,%r10d
	je L_483164
L_251980:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_251911
L_251982:
	movq 0x0(%r13,%r10,8),%r11
	movq 0x10(%r11),%r9
	movq 0x8(%r15),%r8
	movq 0x18(%r11),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%r8)
	je L_483161
L_251983:
	incl %ecx
	jo L_251914
L_251984:
	jmp loop_2922
.p2align 0x4
L_483161:
L_251985:
	incl %ecx
	movl %ecx,0x3C(%rbp)
	jo L_251914
L_251986:
	movq %r9,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_251987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3938
.p2align 0x4
L_483164:
L_251989:
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_251990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_2
.p2align 0x4
.long 0x3EC8
L_251987:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x3C(%rbp),%ecx
L_251988:
	movl %ecx,0x3C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2919
.p2align 0x4
.long 0x3EC8
L_251990:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x3C(%rbp),%ecx
	jmp L_251988
.text
.p2align 0x4
.globl allNone_2
.hidden allNone_2
allNone_2:
L_251994:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_251995
L_252011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_252012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252012
.p2align 0x4
.long 0x452
L_252012:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_251995:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_251997
L_251998:
	cmpl $0x0,%r13d
	jl L_252007
L_251999:
	movl $0x0,0x1C(%rbp)
loop_2923:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_483172
L_252000:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_483171
L_252002:
	cmpl $0x0,%r13d
	jl L_483170
L_252003:
	cmpl $0x0,%r13d
	jg L_483169
L_252004:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483169:
L_252005:
	movq (globalObjptr+0x4D98)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483170:
L_252007:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483171:
L_251997:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483172:
L_252008:
	movslq 0x1C(%rbp),%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_252009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_2
.p2align 0x4
.long 0x4F5
L_252009:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_2923
.text
.p2align 0x4
.globl replace_4
.hidden replace_4
replace_4:
L_252013:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_252130
L_252014:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483222
L_252015:
	movq 0x8(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_483221
L_252017:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_483220
L_252018:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_252020:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_252021
L_252122:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD63,%r13
	jne L_252021
L_252123:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x20(%rbp)
	je L_483215
L_252021:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_252022
L_252023:
	cmpq $0x1,%r15
	je L_483176
L_252024:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252020
.p2align 0x4
L_483176:
L_252025:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252026
L_252120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_252121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252121
.p2align 0x4
.long 0x5F7
L_252121:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_252026:
	movl 0x30(%rbp),%ecx
L_252027:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_483212
L_252029:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_252031
L_252119:
	movl %ecx,0x0(%r15)
L_252031:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1357,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1AC7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r14)
	movq %r15,0x28(%rbp)
L_252032:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_252038
L_252033:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_252034:
	movq 0x0(%rbp),%r13
	movq 0x8(%r14),%r11
	movq 0x18(%r11),%r10
	cmpq %r10,0x18(%r13)
	je L_483209
L_252035:
	cmpq $0x1,%r15
	je L_483177
L_252036:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_252034
.p2align 0x4
L_483177:
L_252038:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x40(%rbp)
	jne L_252040
L_252041:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	cmpq %r10,%r15
	jne L_252040
L_252043:
	cmpl %r11d,%r14d
	jne L_252045
L_252046:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252074
L_252047:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_252048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252048
.p2align 0x4
.long 0x3EC9
L_252048:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x8(%rbp)
	movq $0x0,0x68(%rbp)
loop_2924:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_483204
L_252049:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_252040
L_252051:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_252040
L_252053:
	cmpl %r11d,%r13d
	jne L_252045
L_252055:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252074
L_252056:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_252057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252057
.p2align 0x4
.long 0xE88
L_252057:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x20(%rbp)
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2925:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483199
.p2align 0x4,,0x7
L_252058:
	movq 0x40(%rbp),%r14
	cmpq 0x18(%rbp),%r14
	jnl L_483192
L_252075:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq 0x18(%r13),%r10
	movq %r10,0x68(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r10
	movq 0x8(%r10),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_483191
	cmpq $0x1052,%r15
	je L_483178
L_252076:
	movq %r10,%r15
L_252077:
	movq $0x111B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movl 0x60(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_2925
.p2align 0x4
L_483178:
L_252079:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1052,%r13
	jne L_483190
L_252081:
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r10),%r14
	movq %r14,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x90(%rbp)
	cmpq %r14,%r11
	jne L_252040
L_252083:
	testq %r11,%r11
	jnz L_483187
L_252107:
	movq (globalObjptr+0x4E18)(%rip),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_252087:
	movq $0x0,0xA0(%rbp)
loop_2927:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483186
.p2align 0x4,,0x7
L_252088:
	movq 0x90(%rbp),%r14
	cmpq %r14,0xA0(%rbp)
	jl L_483179
L_252089:
	movq 0x98(%rbp),%r14
	movq $0xAEF,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x20A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_252077
.p2align 0x4
L_483179:
L_252090:
	movq 0xA0(%rbp),%r14
	movl %r14d,%ebx
	movslq %ebx,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x78(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0xA8(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0xB0(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_483185
L_252092:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2928:
	cmpl %ecx,%ebx
	je L_483183
L_252093:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_483182
L_252095:
	movq %r14,%r13
	movq %r14,%r11
	salq $0x5,%r13
	movq 0x80(%rbp),%r10
	movq 0x0(%r10,%r13,1),%r9
	salq $0x5,%r11
	salq $0x5,%r14
	movq 0x18(%r10,%r14,1),%r13
	movq 0x10(%r10,%r11,1),%r14
	movq 0x8(%r14),%r8
	movq 0xB0(%rbp),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%r8)
	je L_483181
L_252096:
	incl %ebx
	jo L_483180
L_252097:
	jmp loop_2928
.p2align 0x4
L_483180:
L_252022:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483181:
L_252098:
	movq %r9,%r15
	movq %r13,%r14
L_252099:
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xA0(%rbp),%r11
	movq %r11,%r9
	salq $0x5,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x5,%r15
	movq 0xA8(%rbp),%r9
	movq %r9,0x8(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x5,%r15
	movq 0xB0(%rbp),%r9
	movq %r9,0x10(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x5,%r15
	movq %r14,0x18(%r13,%r15,1)
	incq %r11
	movq %r11,0xA0(%rbp)
	jmp loop_2927
.p2align 0x4
L_483182:
L_252094:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483183:
L_252100:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483184
.p2align 0x4,,0x7
L_252101:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x5CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r13,%r15
	jmp L_252099
.p2align 0x4
L_483184:
L_252102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_252103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252103
.p2align 0x4
.long 0x3ECB
L_252103:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_252101
.p2align 0x4
L_483185:
L_252040:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483186:
L_252104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_252105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252105
.p2align 0x4
.long 0x3ECC
L_252105:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_252088
.p2align 0x4
L_483187:
L_252084:
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_483188
L_252085:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_252086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252086
.p2align 0x4
.long 0x3ECA
L_252086:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
	jmp L_252087
.p2align 0x4
L_483188:
L_252074:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483190:
L_252080:
	xchgq %r10,%r15
	jmp L_252077
.p2align 0x4
L_483191:
L_252078:
	movq %r10,%r15
	jmp L_252077
.p2align 0x4
L_483192:
L_252059:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x10(%rbp)
	cmpq %rdx,%r13
	jne L_252040
L_252061:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_252040
L_252063:
	cmpl %r11d,%r10d
	jne L_483196
L_252065:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252074
L_252066:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_252067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252067
.p2align 0x4
.long 0xFB1
L_252067:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2926:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483194
.p2align 0x4,,0x7
L_252068:
	movq 0x38(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_483193
L_252070:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movl 0x0(%r11),%r9d
	movq 0x18(%r11),%r8
	movq 0x10(%r11),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x10(%r11),%rsp
	movq 0x0(%rsp),%rdi
	movq $0x5C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	addq $0x18,%r12
	movq $0x1111,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r8,0x18(%r13)
	addq $0x28,%r12
	movl $0x0,0x4(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	movq %r15,0x38(%rbp)
	jmp loop_2926
.p2align 0x4
L_483193:
L_252069:
	movq 0x0(%rbp),%r14
	movq 0x20(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6D1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x18(%r10)
	movq %r13,0x20(%r10)
	addq $0x30,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r10)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r10)
	movq 0x8(%rbp),%r13
	movq %r13,0x10(%r10)
	movq $0x1123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r10,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x268F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483194:
L_252071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_252072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252072
.p2align 0x4
.long 0x596
L_252072:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_252068
.p2align 0x4
L_483196:
L_252045:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483199:
L_252108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_252109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252109
.p2align 0x4
.long 0x3ECD
L_252109:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_252058
.p2align 0x4
L_483204:
L_252111:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_252112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replace_4
.p2align 0x4
L_483209:
L_252117:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483212:
L_252028:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483215:
L_252125:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252028
L_252126:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_483216
L_252128:
	movl %ecx,0x0(%r15)
	movq %r13,0x28(%rbp)
	jmp L_252032
.p2align 0x4
L_483216:
L_252127:
	movq %r13,0x28(%rbp)
	jmp L_252032
.p2align 0x4
L_483220:
L_252129:
	xorl %ecx,%ecx
	jmp L_252027
.p2align 0x4
L_483221:
L_252016:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483222:
L_252130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_252131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252131
.p2align 0x4
.long 0x63D
L_252131:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_252015
.p2align 0x4
.long 0x3ECE
L_252112:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252113
L_252114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_252115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252115
.p2align 0x4
.long 0x3ECF
L_252115:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_252113:
	movq $0x1115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2924
.text
.p2align 0x4
.globl x_2006
.hidden x_2006
x_2006:
L_252132:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_252148
L_252133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483227
L_252134:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_483226
L_252135:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x223E,%r15
	je L_483225
L_252142:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	movq $0x475,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_252143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2006
.p2align 0x4
L_483225:
L_252136:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	movq $0x477,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_252137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2016
.p2align 0x4
L_483226:
L_252147:
	movq $0x1,%r15
L_252139:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl %r13d,0x8(%rbp)
	movq %r14,0x0(%rbp)
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483227:
L_252148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_252149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252149
.p2align 0x4
.long 0x452
L_252149:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_252134
.p2align 0x4
.long 0x2B
L_252143:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252144
L_252145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_252146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252146
.p2align 0x4
.long 0x4B2
L_252146:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_252144:
	movq $0x3163,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_252139
.p2align 0x4
.long 0x2B
L_252137:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb 0x28(%rbp),%r15b
	movb %r15b,0xC(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252138
L_252140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_252141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252141
.p2align 0x4
.long 0x4B2
L_252141:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_252138:
	movq $0x3161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_252139
.text
.p2align 0x4
.globl x_2016
.hidden x_2016
x_2016:
L_252150:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_252169
L_252151:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483233
L_252152:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2241,%r14
	je L_483232
	cmpq $0x2242,%r14
	je L_483231
L_252153:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x9(%rbp)
	addq $0x28,%rbp
	leaq (L_252154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2016
.p2align 0x4
L_483231:
L_252164:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
	movq $0x477,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_252165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2016
.p2align 0x4
L_483232:
L_252159:
	movq 0x28(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x4(%r15),%r14b
	movb %r14b,0x9(%rbp)
	addq $0x40,%rbp
	leaq (L_252160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2006
.p2align 0x4
L_483233:
L_252169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_252170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252170
.p2align 0x4
.long 0x452
L_252170:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_252152
.p2align 0x4
.long 0x491
L_252154:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0xA(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252155
L_252157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_252158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252158
.p2align 0x4
.long 0x520
L_252158:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_252155:
	movq $0xDDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movb 0x0(%r14),%r13b
	movb 0x9(%rbp),%r11b
	movb %r11b,0x0(%r14)
	movq $0x3165,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x10(%r11)
	movq %r11,%r15
L_252156:
	movq 0x10(%rbp),%r14
	movb 0x0(%r14),%r13b
	movb 0x8(%rbp),%r11b
	movb %r11b,0x0(%r14)
	movb %r13b,0x8(%rbp)
	movq %r14,0x0(%rbp)
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_252165:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb 0x28(%rbp),%r15b
	movb %r15b,0x9(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252166
L_252167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_252168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252168
.p2align 0x4
.long 0x4B2
L_252168:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_252166:
	movq $0x3169,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x9(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_252156
.p2align 0x4
.long 0x4A8
L_252160:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252161
L_252162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_252163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252163
.p2align 0x4
.long 0x1577
L_252163:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_252161:
	movq $0xDDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl 0xC(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r11)
	movq 0x30(%rbp),%r9
	movb 0x0(%r9),%r8b
	movb 0x9(%rbp),%spl
	movb %spl,0x0(%r9)
	movq $0x3167,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r13d,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r10,0x18(%rsp)
	addq $0x38,%r12
	movzbl %r8b,%r13d
	movl %r13d,0x4(%rsp)
	movq %r14,0x10(%rsp)
	movq %r11,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %rsp,%r15
	jmp L_252156
.text
.p2align 0x4
.globl loop_3899
.hidden loop_3899
loop_3899:
L_252171:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_252172
L_252194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_252195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252195
.p2align 0x4
.long 0x452
L_252195:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_252172:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_252174
L_252175:
	cmpl $0x0,%r13d
	jl L_252188
L_252176:
	movl $0x0,0x14(%rbp)
loop_2929:
	movl 0x10(%rbp),%r14d
	cmpl %r14d,0x14(%rbp)
	jl L_483244
L_252177:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_252174
L_252179:
	cmpl $0x0,%ecx
	jl L_252188
L_252180:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2930:
	cmpl %ecx,%ebx
	jnl L_483238
L_252189:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movl $0x1,0x0(%r10)
	incl %ebx
	jmp loop_2930
.p2align 0x4
L_483238:
L_252181:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_483241
L_252183:
	cmpl $0x0,%ecx
	jl L_483240
L_252184:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2931:
	cmpl %ecx,%ebx
	jnl L_483239
L_252186:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movl $0x1,0x0(%r10)
	incl %ebx
	jmp loop_2931
.p2align 0x4
L_483239:
L_252185:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483240:
L_252188:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483241:
L_252174:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483244:
L_252191:
	movslq 0x14(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movl $0x1,0x0(%r10)
	addq $0x20,%rbp
	leaq (L_252192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3899
.p2align 0x4
.long 0x524
L_252192:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	incl 0x14(%rbp)
	jmp loop_2929
.text
.p2align 0x4
.globl get_124
.hidden get_124
get_124:
L_252196:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_252347
L_252197:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483309
L_252198:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_252199
L_252200:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_483307
L_252201:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_252203:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_252204
L_252339:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB7,%r13
	jne L_252204
L_252340:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_483302
L_252204:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_252205
L_252206:
	cmpq $0x1,%r15
	je L_483248
L_252207:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252203
.p2align 0x4
L_483248:
L_252208:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252209
L_252337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_252338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252338
.p2align 0x4
.long 0x5F7
L_252338:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_252209:
	movl 0x30(%rbp),%ecx
L_252210:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252211
L_252212:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_252214
L_252336:
	movl %ecx,0x0(%r15)
L_252214:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x48(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x40(%rbp)
	jne L_252216
L_252217:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252244
L_252218:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_252219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252219
.p2align 0x4
.long 0x1038
L_252219:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	movq $0x0,0x68(%rbp)
loop_2932:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_483295
L_252220:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_252216
L_252222:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252244
L_252223:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_252224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252224
.p2align 0x4
.long 0x3ED0
L_252224:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x40(%rbp)
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_2933:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483292
.p2align 0x4,,0x7
L_252225:
	movq 0x58(%rbp),%r11
	cmpq 0x20(%rbp),%r11
	jnl L_483285
L_252245:
	movl %r11d,%ecx
	movslq %ecx,%r15
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x68(%rbp)
	movl 0x0(%r10),%r9d
	movl %r9d,0x70(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x78(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x80(%rbp)
	movq 0x0(%r9),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_483284
	cmpq $0x1052,%r14
	je L_483263
L_252246:
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x88(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x0(%r11),%r14
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x98(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_483262
L_252247:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_483261
L_252248:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_252250:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_483260
L_252270:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8B,%r11
	jne L_483259
L_252271:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_483256
L_252251:
	incl %ecx
	movl %ecx,0x74(%rbp)
	jo L_483255
L_252252:
	cmpq $0x1,%r15
	je L_483249
L_252253:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_252250
.p2align 0x4
L_483249:
L_252254:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483254
.p2align 0x4,,0x7
L_252255:
	movl 0x74(%rbp),%ecx
L_252256:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_483253
L_252257:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_252259
L_252267:
	movl %ecx,0x0(%r15)
L_252259:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r11),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
L_252260:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252262
L_252261:
	movq %r14,0x78(%rbp)
.p2align 0x4,,0x7
L_252262:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483250
.p2align 0x4,,0x7
L_252263:
	movq $0x111B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x70(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2933
.p2align 0x4
L_483250:
L_252264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_252265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252265
.p2align 0x4
.long 0x3ED5
L_252265:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_252263
.p2align 0x4
L_483253:
L_252211:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483254:
L_252268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_252269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252269
.p2align 0x4
.long 0x3ED6
L_252269:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_252255
.p2align 0x4
L_483255:
L_252205:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483256:
L_252273:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252211
L_252274:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_483257
L_252276:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_252260
.p2align 0x4
L_483257:
L_252275:
	movq %r11,%r15
	jmp L_252260
.p2align 0x4
L_483259:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_252251
.p2align 0x4
L_483260:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_252251
.p2align 0x4
L_483261:
L_252277:
	xorl %ecx,%ecx
	jmp L_252256
.p2align 0x4
L_483262:
L_252199:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483263:
L_252281:
	movq 0x8(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%rbp),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x0(%r10),%r14
	movq 0x10(%r11),%r10
	movq %r10,0xA8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_252199
L_252282:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_483282
L_252283:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_252285:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_483281
L_252319:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8B,%r11
	jne L_483280
L_252320:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_483277
L_252286:
	incl %ecx
	movl %ecx,0x74(%rbp)
	jo L_252205
L_252287:
	cmpq $0x1,%r15
	je L_483264
L_252288:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_252285
.p2align 0x4
L_483264:
L_252289:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483275
.p2align 0x4,,0x7
L_252290:
	movl 0x74(%rbp),%ecx
L_252291:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252211
L_252292:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_252294
L_252316:
	movl %ecx,0x0(%r15)
L_252294:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r11),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
L_252295:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252298
L_252296:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_483271
	cmpq $0x1052,%r14
	je L_483270
L_252297:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
L_252298:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r11,%r14
	jne L_483269
L_252300:
	testq %r11,%r11
	jnz L_483267
L_252312:
	movq (globalObjptr+0x6F30)(%rip),%r15
	movq %r15,0xA0(%rbp)
.p2align 0x4,,0x7
L_252304:
	movq $0x0,0xA8(%rbp)
.p2align 0x4,,0x7
loop_2935:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483266
.p2align 0x4,,0x7
L_252305:
	movq 0x98(%rbp),%r15
	cmpq %r15,0xA8(%rbp)
	jl L_483265
L_252306:
	movq 0xA0(%rbp),%r15
	movq $0xAEF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x20A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	jmp L_252262
.p2align 0x4
L_483265:
L_252307:
	movq 0xA8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	salq $0x5,%r14
	movq 0x90(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0xB0(%rbp)
	salq $0x5,%r13
	movq 0x8(%r10,%r13,1),%r14
	movq %r14,0xD0(%rbp)
	salq $0x5,%r11
	movq 0x10(%r10,%r11,1),%r14
	movq %r14,0xB8(%rbp)
	salq $0x5,%r15
	movq 0x18(%r10,%r15,1),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_252308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceScheme_0
.p2align 0x4
L_483266:
L_252309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_252310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252310
.p2align 0x4
.long 0x3EDB
L_252310:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_252305
.p2align 0x4
L_483267:
L_252301:
	movq 0x98(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_483268
L_252302:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_252303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252303
.p2align 0x4
.long 0x3ED9
L_252303:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
	jmp L_252304
.p2align 0x4
L_483268:
L_252244:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483269:
L_252216:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483270:
L_252314:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	jmp L_252298
.p2align 0x4
L_483271:
L_252313:
	movq (globalObjptr+0x6F28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483275:
L_252317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_252318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252318
.p2align 0x4
.long 0x3EDC
L_252318:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_252290
.p2align 0x4
L_483277:
L_252322:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252211
L_252323:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_483278
L_252325:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_252295
.p2align 0x4
L_483278:
L_252324:
	movq %r11,%r15
	jmp L_252295
.p2align 0x4
L_483280:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_252286
.p2align 0x4
L_483281:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_252286
.p2align 0x4
L_483282:
L_252326:
	xorl %ecx,%ecx
	jmp L_252291
.p2align 0x4
L_483284:
L_252278:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_252279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceScheme_0
.p2align 0x4
L_483285:
L_252226:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_252216
L_252228:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252244
L_252229:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_252230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252230
.p2align 0x4
.long 0x3ED1
L_252230:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x20(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2934:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483289
.p2align 0x4,,0x7
L_252231:
	movq 0x38(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_483288
L_252233:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x68(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq %r9,0x78(%rbp)
	cmpq $0x1,%r10
	jne L_483287
L_252240:
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_252236:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483286
.p2align 0x4,,0x7
L_252237:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1111,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movl 0x68(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2934
.p2align 0x4
L_483286:
L_252238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_252239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252239
.p2align 0x4
.long 0x3ED3
L_252239:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_252237
.p2align 0x4
L_483287:
L_252234:
	movq %r10,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_252235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceScheme_0
.p2align 0x4
L_483288:
L_252232:
	movq $0x6D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x20(%r14)
	movq $0x196F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483289:
L_252241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_252242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252242
.p2align 0x4
.long 0x3ED4
L_252242:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_252231
.p2align 0x4
L_483292:
L_252327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_252328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252328
.p2align 0x4
.long 0x3EDD
L_252328:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_252225
.p2align 0x4
L_483295:
L_252330:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_252331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_124
.p2align 0x4
L_483302:
L_252342:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252211
L_252343:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_483303
L_252345:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483303:
L_252344:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483307:
L_252346:
	xorl %ecx,%ecx
	jmp L_252210
.p2align 0x4
L_483309:
L_252347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_252348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252348
.p2align 0x4
.long 0x63D
L_252348:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_252198
.p2align 0x4
.long 0x3EDA
L_252308:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA8(%rbp),%r13
	movq %r13,%r10
	salq $0x5,%r10
	movq 0xB0(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	salq $0x5,%r10
	movq %r15,0x8(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x5,%r15
	movq 0xB8(%rbp),%r10
	movq %r10,0x10(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x5,%r15
	movq 0xC0(%rbp),%r11
	movq %r11,0x18(%r14,%r15,1)
	incq %r13
	movq %r13,0xA8(%rbp)
	jmp loop_2935
.p2align 0x4
.long 0x3ED7
L_252279:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_252280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp def_0
.p2align 0x4
.long 0x3ED2
L_252235:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_252236
.p2align 0x4
.long 0x3EDE
L_252331:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252332
L_252333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_252334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252334
.p2align 0x4
.long 0x3EDF
L_252334:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_252332:
	movq $0x1115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2932
.p2align 0x4
.long 0x3ED8
L_252280:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	jmp L_252262
.text
.p2align 0x4
.globl replaceScheme_0
.hidden replaceScheme_0
replaceScheme_0:
L_252349:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_252397
L_252350:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483315
L_252351:
	movq 0x8(%rbp),%r14
	movq 0x28(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_483314
L_252387:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23DF,%r15
	je L_483313
L_252396:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_252391:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_483312
L_252393:
	movq %r15,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x40(%rbp)
L_252353:
	movq $0x3ED7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x50(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x98(%rbp)
	movq $0x9D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_252354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_483312:
L_252392:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_252353
.p2align 0x4
L_483313:
L_252388:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_252389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_483314:
L_252352:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x48(%rbp)
	jmp L_252353
.p2align 0x4
L_483315:
L_252397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_252398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252398
.p2align 0x4
.long 0x460
L_252398:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_252351
.p2align 0x4
.long 0x3EE0
L_252354:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_252355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1265
.p2align 0x4
.long 0x1008
L_252389:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252390
L_252394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_252395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252395
.p2align 0x4
.long 0x658
L_252395:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_252390:
	movq 0x8(%rbp),%r15
	jmp L_252391
.p2align 0x4
.long 0x3EE1
L_252355:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252356
L_252385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_252386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252386
.p2align 0x4
.long 0x3EE8
L_252386:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_252356:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0xB,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x9D7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x70(%r11)
	addq $0x90,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x90(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x88(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%r11)
	movq 0x78(%rbp),%r13
	movq %r13,0x28(%r11)
	movq 0x70(%rbp),%r13
	movq %r13,0x30(%r11)
	movq 0x68(%rbp),%r13
	movq %r13,0x38(%r11)
	movq 0x38(%rbp),%r13
	movq %r13,0x40(%r11)
	movq 0xA0(%rbp),%r13
	movq %r13,0x48(%r11)
	movq %r13,0x50(%r11)
	movq 0x30(%rbp),%r13
	movq %r13,0x58(%r11)
	movq 0x60(%rbp),%r13
	movq %r13,0x60(%r11)
	movq 0x50(%rbp),%r13
	movq %r13,0x68(%r11)
	movq %r15,0x78(%r11)
	movq %r14,0x80(%r11)
	movq %r11,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_252357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_24
.p2align 0x4
.long 0x3EE2
L_252357:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252358
L_252383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_252384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252384
.p2align 0x4
.long 0x3EE7
L_252384:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_252358:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483319
L_252359:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
L_252360:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_252361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_483319:
L_252365:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483320
L_252366:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_252367:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq $0x3DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_252368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_483320:
L_252372:
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_483322
L_252374:
	testl %r13d,%r13d
	jz L_483321
L_252375:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483321:
L_252376:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483322:
L_252373:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3EE3
L_252361:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252362
L_252380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_252381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252381
.p2align 0x4
.long 0x3EE6
L_252381:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_252362:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_252365
L_252363:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_252360
.p2align 0x4
.long 0x3EE4
L_252368:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252369
L_252377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_252378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252378
.p2align 0x4
.long 0x3EE5
L_252378:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_252369:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_252372
L_252370:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_252367
.text
.p2align 0x4
.globl x_1993
.hidden x_1993
x_1993:
L_252399:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_252400
L_252469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_252470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252470
.p2align 0x4
.long 0x4AF
L_252470:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_252400:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_252401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x72A
L_252401:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252402
L_252467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_252468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252468
.p2align 0x4
.long 0x72D
L_252468:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_252402:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_252409
L_252403:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_252404:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_483342
L_252405:
	cmpq $0x1,%r15
	je L_483329
L_252406:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_252404
.p2align 0x4
L_483329:
L_252407:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252409
L_252460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_252461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252461
.p2align 0x4
.long 0x72D
L_252461:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_252409:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_252410:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_483337
L_252411:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r9
	movq 0x58(%rbp),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	jne L_483333
L_252426:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_483332
	cmpq $0x2,%r15
	je L_483330
L_252427:
L_252428:
	movq $0x11C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483330:
L_252430:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_252432:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
L_252434:
	movq $0x5CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jnz L_483331
L_252435:
	movl $0x1,0x0(%r11)
	xchgq %r10,%r15
	jmp L_252428
.p2align 0x4
L_483331:
	xchgq %r10,%r15
	jmp L_252428
.p2align 0x4
L_483332:
L_252429:
	xchgq %r10,%r15
	jmp L_252428
.p2align 0x4
L_483333:
L_252412:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x268B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_483336
	cmpq $0x2,%r14
	je L_483334
L_252413:
	movq %r11,%r15
L_252414:
	movq $0x11C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483334:
L_252417:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_252419:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
L_252421:
	movq $0x5CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq 0x20(%rbp),%r9
	movq 0x10(%r9),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jnz L_483335
L_252422:
	movl $0x1,0x0(%r13)
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_252414
.p2align 0x4
L_483335:
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_252414
.p2align 0x4
L_483336:
L_252416:
	movq (globalObjptr+0x4DA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483337:
L_252439:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_49
L_252453:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_252454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_49:
new_15:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x268B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_252416
	cmpq $0x2,%r15
	je L_483338
L_252441:
L_252442:
	movq $0x11C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483338:
L_252444:
	movq 0x30(%rbp),%r14
	cmpq $0x1,0x0(%r14)
L_252446:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
L_252448:
	movq $0x5CD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_483339
L_252449:
	movl $0x1,0x0(%r13)
	xchgq %r11,%r15
	jmp L_252442
.p2align 0x4
L_483339:
	xchgq %r11,%r15
	jmp L_252442
.p2align 0x4
L_483342:
L_252462:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252463
L_252464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_252465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252465
.p2align 0x4
.long 0x72E
L_252465:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_252463:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_252410
.p2align 0x4
.long 0x72B
L_252454:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252455
L_252458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_252459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252459
.p2align 0x4
.long 0x72C
L_252459:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_252455:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_15
L_252457:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_15
.text
.p2align 0x4
.globl elabDec_0
.hidden elabDec_0
elabDec_0:
L_252471:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_255028
L_252472:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483654
L_252473:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq $0x1F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x4E0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x40DB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x28(%rbp),%r10
	movq %r10,0x8(%r11)
	movq $0x1EF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x4E8(%rbp)
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r9
	movq 0x0(%r9),%r11
	movl 0x0(%r11),%r8d
	incl %r8d
	jo L_252474
L_252475:
	movq $0x47CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x4F0(%rbp)
	addq $0x40,%r12
	movq %r10,0x0(%r11)
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x40(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x48(%rbp),%r10
	movq %r10,0x18(%r11)
	movq %r13,0x20(%r11)
	movq %r14,0x28(%r11)
	movq 0x30(%rbp),%r14
	movq %r14,0x30(%r11)
	movq $0x1F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r8d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r11,0x8(%r14)
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r9)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE0E,%rax
	cmpq $0x9,%rax
	ja L_483347
	jmp *jumpTable_739(,%rax,8)
.data
.p2align 0x4
jumpTable_739:
.quad L_483643,L_483639,L_483615,L_483594,L_483593,L_483490,L_483486,L_483480,L_483478,L_483477
.text
.p2align 0x4
L_483347:
L_252476:
	movq 0x10(%r14),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x500(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x508(%rbp)
	movq 0x128(%rbp),%r14
	movq 0x88(%r14),%r13
	movq 0x78(%r14),%r11
	movq %r11,0x510(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x518(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x520(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x528(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x530(%rbp)
	movq 0x80(%r14),%r11
	movq 0x10(%r11),%r10
	movq 0x0(%r10),%r14
	movl 0x0(%r14),%r11d
	incl %r11d
	jo L_252474
L_252477:
	movq $0x1F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x4F0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r10,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r10)
	movq 0x0(%r13),%r14
	movq %r14,0x538(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_252479
L_252480:
	cmpl $0x0,%r13d
	jl L_252774
L_252481:
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2936:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483473
.p2align 0x4,,0x7
L_252482:
	movl 0x184(%rbp),%r13d
	cmpl 0x4(%rbp),%r13d
	jnl L_483358
L_253209:
	movslq %r13d,%r15
	movq 0x510(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x4F0(%rbp)
	movq 0x500(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x540(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_483357
L_253210:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_483356
L_253211:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_253213:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_253214
L_253226:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCF,%r13
	je L_483352
L_253214:
	incl %ecx
	movl %ecx,0x548(%rbp)
	jo L_483351
L_253215:
	cmpq $0x1,%r15
	je L_483348
L_253216:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_253213
.p2align 0x4
L_483348:
L_253217:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483350
.p2align 0x4,,0x7
L_253218:
	movl 0x548(%rbp),%ecx
L_253219:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_483349
L_253220:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl now_4
L_253223:
	movl %ecx,0x0(%r15)
now_4:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x199F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x540(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_253222:
	incl 0x184(%rbp)
	jmp loop_2936
.p2align 0x4
L_483349:
L_252909:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483350:
L_253224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253225
.p2align 0x4
.long 0x3F52
L_253225:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_253218
.p2align 0x4
L_483351:
L_252474:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483352:
L_253227:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252909
L_253228:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_253222
L_253230:
	movl %ecx,0x0(%r15)
	jmp L_253222
.p2align 0x4
L_483356:
L_253231:
	xorl %ecx,%ecx
	jmp L_253219
.p2align 0x4
L_483357:
L_252898:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483358:
L_252483:
	movq 0x518(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq $0x1,0x0(%r15)
	movq $0x182B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x38(%r11)
	addq $0x48,%r12
	movq 0x530(%rbp),%r14
	movq %r14,0x0(%r11)
	movq 0x528(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x538(%rbp),%r14
	movq %r14,0x10(%r11)
	movq 0x510(%rbp),%r14
	movq %r14,0x18(%r11)
	movq 0x500(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq 0x520(%rbp),%r15
	movq %r15,0x30(%r11)
	movq %r11,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	movq %r10,0x540(%rbp)
	cmpq %r10,%r14
	jne L_252479
L_252485:
	testq %r10,%r10
	jz L_483471
L_252486:
	cmpq $0x7FFFFFFF,%r10
	ja L_252681
L_252487:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252488
L_253205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253206
.p2align 0x4
.long 0x3EE9
L_253206:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252488:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x162F,%rcx
	movq 0x540(%rbp),%rdx
	movq $0x58,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252489
.p2align 0x4
.long 0x3EE9
L_252489:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq %rax,0x500(%rbp)
L_252490:
	movq $0x0,0x510(%rbp)
loop_2937:
	movq 0x540(%rbp),%r15
	cmpq %r15,0x510(%rbp)
	jl L_483460
L_252491:
	movq 0x500(%rbp),%r15
	movq $0x1831,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x291F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x130(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x4F8(%rbp)
	movq $0x249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	addq $0x10,%r12
	movq 0x178(%rbp),%r15
	movq 0x1E0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x558(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x568(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x570(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x578(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x580(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x588(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x590(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x598(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x5C8(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x5D0(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x5D8(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x5E0(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x5E8(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x5F0(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x5F8(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x600(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x608(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x610(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x618(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x620(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x628(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x630(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x638(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x640(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x648(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x650(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x658(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x660(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x668(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x670(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x678(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x680(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x688(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x690(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x698(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x6A0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x6A8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x6B0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x6B8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x6C0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x6C8(%rbp)
	movq $0xB51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x6D0(%rbp)
	movq 0x508(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x6D8(%rbp)
	cmpq %r11,%r14
	jne L_252479
L_252493:
	testq %r11,%r11
	jz L_483458
L_252494:
	cmpq $0x7FFFFFFF,%r11
	ja L_252681
L_252495:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252496
L_253126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E8,%rbp
	leaq (L_253127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253127
.p2align 0x4
.long 0x3EEA
L_253127:
	addq $0xFFFFFFFFFFFFF918,%rbp
L_252496:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1631,%rcx
	movq 0x6D8(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E8,%rbp
	leaq (L_252497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252497
.p2align 0x4
.long 0x3EEA
L_252497:
	addq $0xFFFFFFFFFFFFF918,%rbp
	movq %rax,0x6E0(%rbp)
L_252498:
	movq $0x0,0x6E8(%rbp)
loop_2938:
	movq 0x6D8(%rbp),%r15
	cmpq %r15,0x6E8(%rbp)
	jl L_483455
L_252499:
	movq 0x6E0(%rbp),%r15
	movq $0x1833,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x508(%rbp)
	cmpq %r14,%r11
	jne L_252479
L_252501:
	testq %r11,%r11
	jz L_483453
L_252502:
	cmpq $0x7FFFFFFF,%r11
	ja L_252681
L_252503:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252504
L_253056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6F0,%rbp
	leaq (L_253057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253057
.p2align 0x4
.long 0x3EEB
L_253057:
	addq $0xFFFFFFFFFFFFF910,%rbp
L_252504:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1633,%rcx
	movq 0x508(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6F0,%rbp
	leaq (L_252505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252505
.p2align 0x4
.long 0x3EEB
L_252505:
	addq $0xFFFFFFFFFFFFF910,%rbp
	movq %rax,0x510(%rbp)
L_252506:
	movq $0x0,0x6D8(%rbp)
loop_2939:
	movq 0x508(%rbp),%r15
	cmpq %r15,0x6D8(%rbp)
	jl L_483450
L_252507:
	movq 0x510(%rbp),%r15
	movq $0x1835,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %rdx,%r14
	jne L_252479
L_252509:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x4(%rbp)
	je L_483448
L_252510:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252511:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1635,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252512
.p2align 0x4
.long 0x3EEC
L_252512:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x38(%rbp)
L_252513:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2940:
	cmpq 0x28(%rbp),%r15
	jnl L_483359
L_252949:
	movl %r15d,%r14d
	movslq %r14d,%r13
	imulq $0x18,%r13
	movq 0x510(%rbp),%r14
	movq 0x10(%r14,%r13,1),%r11
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2940
.p2align 0x4
L_483359:
L_252514:
	movq 0x38(%rbp),%r15
	movq $0x1837,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_252479
L_252516:
	testl %r15d,%r15d
	jz L_483445
L_252517:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_252774
L_252518:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2941:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_483362
L_252943:
	movslq %ebx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_483361
L_252945:
	addl %ecx,%r10d
	jo L_252474
L_252946:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2941
.p2align 0x4
L_483361:
L_252479:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483362:
L_252519:
	cmpq $0x0,0x40(%rbp)
	jna L_252521
L_252522:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_483442
L_252523:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252524:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252525
.p2align 0x4
.long 0x3EED
L_252525:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,%r15
L_252526:
	xorl %ecx,%ecx
	movq 0x48(%rbp),%r13
	xorl %ebx,%ebx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2942:
	cmpq 0x50(%rbp),%r14
	jnl L_483368
.p2align 0x4,,0x7
loop_2959:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_252479
L_252933:
	cmpl %r10d,%ecx
	jl L_483365
L_252934:
	incl %ebx
	jo L_252474
L_252935:
	movslq %ebx,%r11
	cmpq 0x40(%rbp),%r11
	jnb L_483363
L_252937:
	movq 0x38(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r13
	xorl %ecx,%ecx
	jmp loop_2959
.p2align 0x4
L_483363:
L_252521:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483365:
L_252938:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_252521
L_252940:
	movq 0x0(%r13,%r10,8),%r11
	incl %ecx
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2942
.p2align 0x4
L_483368:
L_252527:
	movq $0x1139,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x38(%rbp)
L_252528:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %r14,%rdx
	jne L_252479
L_252530:
	testq %rdx,%rdx
	jz L_483439
L_252531:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252532:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252533
.p2align 0x4
.long 0x3EEE
L_252533:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x48(%rbp)
L_252534:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2943:
	cmpq 0x40(%rbp),%r15
	jnl L_483369
L_252928:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x48(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	salq $0x4,%r13
	movq (globalObjptr+0xB50)(%rip),%r10
	movq %r10,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2943
.p2align 0x4
L_483369:
L_252535:
	movq 0x48(%rbp),%r15
	movq $0x97D,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_483437
L_252536:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252537:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252538
.p2align 0x4
.long 0x3EEF
L_252538:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x38(%rbp)
L_252539:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2944:
	movq 0x40(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	jnl L_483385
L_252891:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x510(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x50(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x78(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_252479
L_252893:
	cmpl $0x0,%r13d
	jl L_483383
L_252894:
	movl $0x0,0x88(%rbp)
loop_2958:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483382
.p2align 0x4,,0x7
L_252895:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x88(%rbp)
	jl L_483370
L_252896:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x40(%rbp)
	jmp loop_2944
.p2align 0x4
L_483370:
L_252897:
	movslq 0x88(%rbp),%r15
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_252898
L_252899:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_483380
L_252900:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_252902:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_252903
L_252917:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_483376
L_252903:
	incl %ecx
	movl %ecx,0x8C(%rbp)
	jo L_252474
L_252904:
	cmpq $0x1,%r15
	je L_483371
L_252905:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252902
.p2align 0x4
L_483371:
L_252906:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483374
.p2align 0x4,,0x7
L_252907:
	movl 0x8C(%rbp),%ecx
L_252908:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252909
L_252910:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_252912
L_252914:
	movl %ecx,0x0(%r15)
L_252912:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x90(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_252913:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	incl 0x88(%rbp)
	jmp loop_2958
.p2align 0x4
L_483374:
L_252915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252916
.p2align 0x4
.long 0x3F2A
L_252916:
	addq $0xFFFFFFFFFFFFF920,%rbp
	jmp L_252907
.p2align 0x4
L_483376:
L_252918:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_252909
L_252919:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_252913
L_252921:
	movl %ecx,0x0(%r14)
	jmp L_252913
.p2align 0x4
L_483380:
L_252922:
	xorl %ecx,%ecx
	jmp L_252908
.p2align 0x4
L_483382:
L_252923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252924
.p2align 0x4
.long 0x3F2B
L_252924:
	addq $0xFFFFFFFFFFFFF920,%rbp
	jmp L_252895
.p2align 0x4
L_483383:
L_252774:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483385:
L_252540:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252541
L_252889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252890
.p2align 0x4
.long 0x3EF0
L_252890:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252541:
	movq 0x38(%rbp),%r15
	movq $0xB33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x500(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r11,%r14
	jne L_252479
L_252543:
	testq %r11,%r11
	jz L_483433
L_252544:
	cmpq $0x7FFFFFFF,%r11
	ja L_252681
L_252545:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252546
L_252885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252886
.p2align 0x4
.long 0x3EF0
L_252886:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252546:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1639,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252547
.p2align 0x4
.long 0x3EF0
L_252547:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x40(%rbp)
L_252548:
	movq $0x0,0x50(%rbp)
loop_2945:
	movq 0x28(%rbp),%rdx
	cmpq %rdx,0x50(%rbp)
	jl L_483430
L_252549:
	movq 0x40(%rbp),%r15
	movq $0x1839,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %r14,%rdx
	jne L_252479
L_252551:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x4(%rbp)
	je L_483428
L_252552:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252553:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252554
.p2align 0x4
.long 0x3EF1
L_252554:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x50(%rbp)
L_252555:
	movq $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_2946:
	movq 0x78(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	jnl L_483390
L_252778:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r13
	movq 0x18(%r13,%r14,1),%r11
	movq %r11,0x80(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r13,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x90(%rbp)
	cmpq %r11,%r15
	jne L_252479
L_252780:
	testq %r11,%r11
	jnz L_483387
L_252792:
	movq (globalObjptr+0x6E08)(%rip),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_252784:
	movq $0x0,0xA0(%rbp)
.p2align 0x4,,0x7
loop_2957:
	movq 0x90(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_483386
L_252785:
	movq 0x98(%rbp),%r15
	movq $0x97D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_2946
.p2align 0x4
L_483386:
L_252786:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_252787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isExpansive_0
.p2align 0x4
L_483387:
L_252781:
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_483388
L_252782:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252783
.p2align 0x4
.long 0x3F11
L_252783:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x98(%rbp)
	jmp L_252784
.p2align 0x4
L_483388:
L_252681:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483390:
L_252556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252557
L_252776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252777
.p2align 0x4
.long 0x3F10
L_252777:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252557:
	movq 0x50(%rbp),%r15
	movq $0x183B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_252479
L_252559:
	testl %r15d,%r15d
	jz L_483424
L_252560:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_252774
L_252561:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2947:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_483393
L_252769:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_252479
L_252771:
	addl %ecx,%r10d
	jo L_252474
L_252772:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2947
.p2align 0x4
L_483393:
L_252562:
	cmpq $0x0,0x78(%rbp)
	jna L_252521
L_252564:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x88(%rbp)
	testq %rdx,%rdx
	jz L_483421
L_252565:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252566:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252567
.p2align 0x4
.long 0x3EF2
L_252567:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x90(%rbp)
L_252568:
	xorl %ecx,%ecx
	movq 0x80(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2948:
	cmpq 0x88(%rbp),%r15
	jnl L_483399
.p2align 0x4,,0x7
loop_2956:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_252479
L_252759:
	cmpl %r11d,%ecx
	jl L_483396
L_252760:
	incl %ebx
	jo L_252474
L_252761:
	movslq %ebx,%r13
	cmpq 0x78(%rbp),%r13
	jnb L_252521
L_252763:
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_2956
.p2align 0x4
L_483396:
L_252764:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_252521
L_252766:
	movq %r11,%r13
	movq %r15,%r10
	movq %r15,%r9
	salq $0x4,%r13
	movq 0x0(%r14,%r13,1),%r8
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r13
	incl %ecx
	movq 0x90(%rbp),%r11
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r10
	movq %r8,0x0(%r11,%r10,1)
	movq %r11,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%rsi,%r10,1)
	salq $0x4,%r9
	movq %r13,0x8(%r11,%r9,1)
	incq %r15
	jmp loop_2948
.p2align 0x4
L_483399:
L_252569:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252570
L_252755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252756
.p2align 0x4
.long 0x3F0F
L_252756:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252570:
	movq 0x90(%rbp),%r15
	movq $0x97D,0xFFFFFFFFFFFFFFF8(%r15)
L_252571:
	movq $0x2539,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_252572:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483418
.p2align 0x4,,0x7
L_252573:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF37,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x29A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_483400
L_252574:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_252572
.p2align 0x4
L_483400:
L_252575:
	movq %r13,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_252576:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483417
.p2align 0x4,,0x7
L_252577:
	movq $0x29A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_483401
L_252578:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_252576
.p2align 0x4
L_483401:
L_252579:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_483412
L_252580:
	movq 0x50(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_252581:
	addq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r13
	je L_483402
L_252582:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_252581
.p2align 0x4
L_483402:
L_252583:
	testq %r15,%r15
	jz L_483411
L_252584:
	cmpq $0x7FFFFFFF,%r15
	ja L_252681
L_252585:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252586
.p2align 0x4
.long 0x3EF3
L_252586:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,%r15
L_252587:
	movq 0x78(%rbp),%r10
	movq 0x50(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2949:
	cmpq 0x48(%rbp),%r14
	jnl L_483405
.p2align 0x4,,0x7
loop_2954:
	cmpq 0x0(%r11),%r13
	jl L_483404
L_252734:
	cmpq $0x1,%r10
	je L_483403
L_252735:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2954
.p2align 0x4
L_483403:
L_252736:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483404:
L_252737:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_2949
.p2align 0x4
L_483405:
L_252588:
	movq $0x97D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x48(%rbp)
L_252589:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	movl %r13d,0x50(%rbp)
	cmpq %r14,%rdx
	jne L_252479
L_252591:
	testq %rdx,%rdx
	jz L_483408
L_252592:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252593:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1509,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252594
.p2align 0x4
.long 0x3EF4
L_252594:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,%r15
L_252595:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2950:
	cmpq 0x78(%rbp),%r14
	jnl L_483406
L_252730:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq %r9,%r13
	salq $0x4,%r13
	salq $0x4,%r9
	movq 0x48(%rbp),%r8
	movq 0x8(%r8,%r9,1),%rsp
	movq 0x0(%rsp),%rsi
	movq 0x0(%r8,%r13,1),%r9
	movl 0x4(%r9),%esp
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsi,0x8(%r15,%r11,1)
	salq $0x4,%r10
	movl %esp,0x0(%r15,%r10,1)
	incq %r14
	jmp loop_2950
.p2align 0x4
L_483406:
L_252596:
	movq $0x9DB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x508(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_252597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2017
.p2align 0x4
L_483408:
L_252732:
	movq (globalObjptr+0x6DF8)(%rip),%r15
	jmp L_252595
.p2align 0x4
L_483411:
L_252739:
	movq (globalObjptr+0x6DE8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_252587
.p2align 0x4
L_483412:
L_252740:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x48(%rbp)
	je L_252589
L_252741:
	testq %r13,%r13
	jz L_483415
L_252742:
	cmpq $0x7FFFFFFF,%r13
	ja L_252681
L_252743:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252744
.p2align 0x4
.long 0x3EF4
L_252744:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,%r15
L_252745:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2955:
	cmpq 0x78(%rbp),%r14
	jnl L_483413
L_252747:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x48(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_2955
.p2align 0x4
L_483413:
L_252746:
	movq $0x97D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x48(%rbp)
	jmp L_252589
.p2align 0x4
L_483415:
L_252749:
	movq (globalObjptr+0x6DF0)(%rip),%r15
	jmp L_252745
.p2align 0x4
L_483417:
L_252751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252752
.p2align 0x4
.long 0x3F0E
L_252752:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_252577
.p2align 0x4
L_483418:
L_252753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252754
.p2align 0x4
.long 0x3F0E
L_252754:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_252573
.p2align 0x4
L_483421:
L_252768:
	movq (globalObjptr+0x6DD8)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_252568
.p2align 0x4
L_483424:
L_252775:
	movq (globalObjptr+0x6DE0)(%rip),%r15
	movq $0x97D,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_252571
.p2align 0x4
L_483428:
L_252794:
	movq (globalObjptr+0x6DD0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_252555
.p2align 0x4
L_483430:
L_252795:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	salq $0x5,%r14
	movq 0x500(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x78(%rbp)
	salq $0x5,%r13
	movq 0x8(%r10,%r13,1),%r14
	movq %r14,0x6F8(%rbp)
	salq $0x5,%r11
	movq 0x10(%r10,%r11,1),%r14
	movq %r14,0x80(%rbp)
	salq $0x5,%r15
	movq 0x18(%r10,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movq $0x3B03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x6E0(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x538(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x6D0(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x560(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x580(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x588(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x590(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x598(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x5A8(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x5B0(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x5B8(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x5C0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x5C8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x5D8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x5E0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x5F0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x5F8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x600(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x608(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x610(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x618(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x620(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x628(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x630(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x638(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x640(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x648(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x650(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x658(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x660(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x668(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x670(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x678(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x680(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x688(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x690(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x698(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x6A0(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x6A8(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x6B0(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x6B8(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x6C0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x6C8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2018
.p2align 0x4
L_483433:
L_252888:
	movq (globalObjptr+0x6DC8)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_252548
.p2align 0x4
L_483437:
L_252927:
	movq (globalObjptr+0x6DC0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_252539
.p2align 0x4
L_483439:
L_252930:
	movq (globalObjptr+0x6DB8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_252534
.p2align 0x4
L_483442:
L_252942:
	movq (globalObjptr+0x6DA8)(%rip),%r15
	jmp L_252526
.p2align 0x4
L_483445:
L_252948:
	movq (globalObjptr+0x6DB0)(%rip),%r15
	movq $0x1139,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x38(%rbp)
	jmp L_252528
.p2align 0x4
L_483448:
L_252951:
	movq (globalObjptr+0x6DA0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_252513
.p2align 0x4
L_483450:
L_252952:
	movq 0x6D8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x28,%r14
	movq 0x6E0(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	movq %r8,0x6E8(%rbp)
	imulq $0x28,%r13
	movq 0x8(%r9,%r13,1),%r14
	movq %r14,0x6F0(%rbp)
	imulq $0x28,%r11
	movq 0x10(%r9,%r11,1),%r14
	movq %r14,0x6F8(%rbp)
	imulq $0x28,%r10
	movq 0x18(%r9,%r10,1),%r13
	movq %r13,0x720(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r9,%r15,1),%r13
	movq %r13,0x700(%rbp)
	movq $0x3B03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x718(%rbp)
	movq %r14,0x710(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x888(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x890(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xA20(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0xA28(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0xA30(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xA38(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0xA40(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0xA48(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0xA50(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0xA58(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0xA60(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0xA68(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0xA70(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0xA78(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xA80(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0xA88(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0xA90(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0xA98(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0xAA0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0xAA8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0xAB0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xAB8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0xAC0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0xAC8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0xAD0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0xAD8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0xAE0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0xAE8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0xAF0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0xAF8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0xB00(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0xB08(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0xB10(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0xB18(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0xB20(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0xB28(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0xB30(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0xB38(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0xB40(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0xB48(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0xB50(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0xB58(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0xB60(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0xB68(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0xB70(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0xB78(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0xB80(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0xB88(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0xB90(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0xB98(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0xBA0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0xBA8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0xBB0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0xBB8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xBC0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xBC8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xBD0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xBD8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xBE0(%rbp)
	addq $0x710,%rbp
	leaq (L_252953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabMatch_0
.p2align 0x4
L_483453:
L_253059:
	movq (globalObjptr+0x6D98)(%rip),%r15
	movq %r15,0x510(%rbp)
	jmp L_252506
.p2align 0x4
L_483455:
L_253060:
	movq 0x6E8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x508(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x718(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x6F0(%rbp)
	movq $0x3B03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x700(%rbp)
	movq (globalObjptr+0xB50)(%rip),%r15
	movq %r15,0x708(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x538(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x6D0(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x560(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x580(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x588(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x590(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x598(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x5A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x5B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x5B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x5C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x5C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x5D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x5E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x5F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x5F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x600(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x608(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x610(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x618(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x620(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x628(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x630(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x638(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x640(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x648(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x650(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x658(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x660(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x668(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x670(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x678(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x680(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x688(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x690(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x698(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x6A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x6A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x6B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x6B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x6C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x6C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	addq $0x700,%rbp
	leaq (L_253061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2018
.p2align 0x4
L_483458:
L_253129:
	movq (globalObjptr+0x6D90)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	jmp L_252498
.p2align 0x4
L_483460:
L_253130:
	movq 0x510(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x4F8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x518(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x520(%rbp)
	movq $0x15B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x528(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r13)
	movq 0x110(%rbp),%r10
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq 0x120(%rbp),%r10
	movq %r10,0x18(%r13)
	movq 0x0(%r11),%r13
	movq %r13,0x530(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x538(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
loop_2961:
	movq 0x8(%r15),%r14
L_253131:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_253132
L_253181:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDF1,%r15
	je L_483467
	cmpq $0xDF5,%r15
	je L_483466
	cmpq $0xDF6,%r15
	je L_483462
	cmpq $0xDF7,%r15
	je L_483461
L_253132:
	movq $0x1,%r15
L_253133:
	movq %r15,0x550(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA20(%rbp)
	addq $0x550,%rbp
	leaq (L_253134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_483461:
L_253204:
	movq 0x0(%r14),%r15
	jmp loop_2961
.p2align 0x4
L_483462:
L_253197:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_252479
L_253199:
	cmpl $0x1,%r14d
	jne L_253132
L_253201:
	cmpq $0x0,%r15
	jna L_252521
L_253203:
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp loop_2961
.p2align 0x4
L_483466:
L_253196:
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	jmp L_253133
.p2align 0x4
L_483467:
L_253182:
	movq 0x8(%r14),%r15
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (toString_356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_483471:
L_253208:
	movq (globalObjptr+0x6D88)(%rip),%r15
	movq %r15,0x500(%rbp)
	jmp L_252490
.p2align 0x4
L_483473:
L_253232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253233
.p2align 0x4
.long 0x3F53
L_253233:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	jmp L_252482
.p2align 0x4
L_483477:
L_254872:
	movq 0x8(%r14),%r15
	movq %r15,0x530(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x4E0(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x4E8(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0x90(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x4F0(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x4F8(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0xA0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x500(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x508(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0xB0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x510(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x518(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x44D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_254873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDatBind_0
.p2align 0x4
L_483478:
L_254859:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_483479
L_254870:
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_254871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDatBind_0
.p2align 0x4
L_483479:
L_254860:
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_254861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1224
.p2align 0x4
L_483480:
L_254716:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_252479
L_254718:
	cmpl $0x0,%r13d
	jl L_252774
L_254719:
	movq $0x1,0x38(%rbp)
	movl $0x0,0x34(%rbp)
loop_2996:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483482
L_254720:
	movq 0x38(%rbp),%r15
	movq %r15,0x268(%rbp)
L_252672:
	movq 0x250(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpb $0x3,0x0(%r14)
	je L_483481
L_252673:
	movq 0x268(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483481:
L_252674:
	movq 0x258(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_252675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reportUnresolvedFlexRecords_0
.p2align 0x4
L_483482:
L_254721:
	movslq 0x34(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1297,%r15
	je L_483483
L_254752:
	movq 0x8(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r10),%r14
	movq %r14,0x50(%rbp)
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x270(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_254753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2019
.p2align 0x4
L_483483:
L_254722:
	movq 0x0(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483486:
L_254704:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_252479
L_254706:
	cmpl $0x0,%r13d
	jl L_252774
L_254707:
	movl $0x0,0x3C(%rbp)
loop_2995:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_483487
L_254709:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483487:
L_253250:
	movq $0x1,0x268(%rbp)
	jmp L_252672
.p2align 0x4
L_483490:
L_253707:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x500(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x508(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x4F8(%rbp)
	jne L_252479
L_253709:
	testq %rdx,%rdx
	jz L_483591
L_253710:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253711:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1641,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_253712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253712
.p2align 0x4
.long 0x3FA3
L_253712:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq %rax,0x510(%rbp)
L_253713:
	movq $0x0,0x518(%rbp)
.p2align 0x4,,0x7
loop_2978:
	movq 0x518(%rbp),%r15
	cmpq 0x508(%rbp),%r15
	jnl L_483517
L_254554:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x4F8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x520(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x528(%rbp)
	cmpq %r15,%r11
	jne L_252479
L_254556:
	testq %r11,%r11
	jnz L_483514
L_254701:
	movq (globalObjptr+0x6E68)(%rip),%r15
	movq %r15,0x530(%rbp)
.p2align 0x4,,0x7
L_254560:
	movq $0x0,0x538(%rbp)
.p2align 0x4,,0x7
loop_2993:
	movq 0x528(%rbp),%r15
	cmpq %r15,0x538(%rbp)
	jl L_483491
L_254561:
	movq 0x530(%rbp),%r15
	movq $0x157,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x518(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x518(%rbp)
	jmp loop_2978
.p2align 0x4
L_483491:
L_254562:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254563
L_254698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_254699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254699
.p2align 0x4
.long 0x402A
L_254699:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_254563:
	movq 0x538(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x520(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x540(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x548(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r13
	movq %r13,0x550(%rbp)
	movq $0x441,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x558(%rbp)
	addq $0x38,%r12
	movq %r13,0x0(%r15)
	movq 0x110(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x108(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x100(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_252479
L_254565:
	decl %r13d
	jo L_252474
L_254566:
	movl %r13d,0x4(%rbp)
	movq $0x1,0x560(%rbp)
.p2align 0x4,,0x7
loop_2994:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483510
.p2align 0x4,,0x7
L_254567:
	movl 0x4(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_483492
L_254568:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x4(%rbp)
	movq 0x548(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2535,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x560(%rbp)
	jmp loop_2994
.p2align 0x4
L_483492:
L_254569:
	movq 0x560(%rbp),%r14
	cmpq $0x1,%r14
	je L_483509
L_254570:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x548(%rbp)
L_254571:
	movq %r13,%r14
	andq $0x3,%r14
	jz L_483502
L_254572:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
L_254573:
	movq 0x8(%r15),%r14
L_254574:
	movq %r14,%r13
	andq $0x3,%r13
	jnz continue_6
L_254613:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDF6,%r13
	jne continue_6
L_254614:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_252479
L_254616:
	cmpl $0x3,%r11d
	jne continue_24
L_254618:
	cmpq $0x1,%r14
	jna L_252521
L_254620:
	movq 0x8(%r13),%r11
	movq %r11,0x560(%rbp)
	cmpq $0x0,%r14
	jna L_252521
L_254622:
	movq 0x0(%r13),%r15
	cmpq $0x2,%r14
	jna L_252521
L_254624:
	movq 0x10(%r13),%r14
	movq $0x3AEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movl $0x2,0x578(%rbp)
	addq $0x570,%rbp
	leaq (tuple_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
continue_24:
continue_6:
	movq 0x548(%rbp),%r14
	cmpq $0x1,%r14
	je L_483500
L_254575:
	movq %r15,0x548(%rbp)
	movq %r14,%r15
done_18:
	movq 0x548(%rbp),%r14
	movq 0x8(%r14),%r13
L_254576:
	movq %r13,%r14
	andq $0x3,%r14
	jnz illegal_0
L_254598:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xDF1,%r14
	jne illegal_0
L_254599:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x560(%rbp)
	cmpq $0x1,0x0(%r11)
	jne illegal_1
L_254600:
	movq $0xB61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x548(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_483499
L_254601:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254602:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_254603:
	cmpq $0x1,%r15
	je L_483496
L_254604:
	movq 0x8(%r15),%r15
	jmp L_254602
.p2align 0x4
L_483496:
L_254605:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254606
L_254609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_254610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254610
.p2align 0x4
.long 0x4022
L_254610:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_254606:
	movl 0x4(%rbp),%ecx
L_254607:
	movl %ecx,0x578(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x548(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_254608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_483499:
L_254611:
	xorl %ecx,%ecx
	jmp L_254607
.p2align 0x4
illegal_1:
illegal_0:
	movq (globalObjptr+0x10810)(%rip),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_254577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483500:
L_254612:
	movq (globalObjptr+0x10818)(%rip),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (error_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483502:
L_254635:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq %r10,0x568(%rbp)
L_254636:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_483508
L_254638:
	movq 0x0(%r14),%r10
	movq %r10,0x570(%rbp)
	cmpq $0x1,0x8(%r14)
	je L_483503
L_254639:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_254573
.p2align 0x4
L_483503:
L_254640:
	movq 0x568(%rbp),%r14
	movq 0x8(%r14),%r10
L_254641:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_483507
L_254643:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xDF1,%r14
	jne L_483506
L_254644:
	movq 0x8(%r10),%r14
	movq 0x8(%r14),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %rsp,0x578(%rbp)
	movb 0x0(%r10),%r14b
	testb %r14b,%r14b
	jnz L_483505
L_254646:
	cmpq $0x1,%r8
	je L_483504
L_254647:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_254573
.p2align 0x4
L_483504:
L_254648:
	movq 0x20(%rbp),%r14
	movq 0x40(%r14),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x590(%rbp)
	movq 0x578(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x588(%rbp)
	addq $0x588,%rbp
	leaq (L_254649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_483505:
L_254645:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_254573
.p2align 0x4
L_483506:
	movq %r13,%r15
L_254642:
	movq 0x548(%rbp),%r14
	movq %r15,0x548(%rbp)
	movq %r14,%r15
	jmp L_254573
.p2align 0x4
L_483507:
	movq %r13,%r15
	jmp L_254642
.p2align 0x4
L_483508:
L_254637:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_254573
.p2align 0x4
L_483509:
L_254683:
	movq (globalObjptr+0x6E70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483510:
L_254696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_254697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254697
.p2align 0x4
.long 0x4022
L_254697:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	jmp L_254567
.p2align 0x4
L_483514:
L_254557:
	movq 0x528(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_254558:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x164B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_254559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254559
.p2align 0x4
.long 0x401D
L_254559:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	movq %rax,0x530(%rbp)
	jmp L_254560
.p2align 0x4
L_483517:
L_253714:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253715
L_254552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_254553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254553
.p2align 0x4
.long 0x401C
L_254553:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_253715:
	movq 0x510(%rbp),%r15
	movq $0x1829,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x128(%rbp),%r15
	movq 0x88(%r15),%r14
	movq 0x78(%r15),%r13
	movq %r13,0x4F8(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x508(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x518(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x520(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x528(%rbp)
	movq 0x80(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_253716:
	movq $0x1F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x4F0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11)
	movq 0x0(%r14),%r15
	movq %r15,0x530(%rbp)
	movq 0x500(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_252479
L_253718:
	cmpl $0x0,%r13d
	jl L_252774
L_253719:
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2979:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483585
.p2align 0x4,,0x7
L_253720:
	movl 0x184(%rbp),%r13d
	cmpl 0x4(%rbp),%r13d
	jnl L_483528
L_254526:
	movslq %r13d,%r15
	movq 0x4F8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x4F0(%rbp)
	movq 0x500(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x538(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_252898
L_254527:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_483526
L_254528:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_254530:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_254531
L_254543:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCF,%r13
	je L_483522
L_254531:
	incl %ecx
	movl %ecx,0x540(%rbp)
	jo L_252474
L_254532:
	cmpq $0x1,%r15
	je L_483518
L_254533:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_254530
.p2align 0x4
L_483518:
L_254534:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483520
.p2align 0x4,,0x7
L_254535:
	movl 0x540(%rbp),%ecx
L_254536:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252909
L_254537:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl now_5
L_254540:
	movl %ecx,0x0(%r15)
now_5:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x199F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x538(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_254539:
	incl 0x184(%rbp)
	jmp loop_2979
.p2align 0x4
L_483520:
L_254541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_254542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254542
.p2align 0x4
.long 0x401A
L_254542:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_254535
.p2align 0x4
L_483522:
L_254544:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252909
L_254545:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_254539
L_254547:
	movl %ecx,0x0(%r15)
	jmp L_254539
.p2align 0x4
L_483526:
L_254548:
	xorl %ecx,%ecx
	jmp L_254536
.p2align 0x4
L_483528:
L_253721:
	movq 0x508(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq $0x1,0x0(%r15)
	movq $0x182B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x38(%r11)
	addq $0x48,%r12
	movq 0x528(%rbp),%r14
	movq %r14,0x0(%r11)
	movq 0x520(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x530(%rbp),%r14
	movq %r14,0x10(%r11)
	movq 0x4F8(%rbp),%r14
	movq %r14,0x18(%r11)
	movq 0x500(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq 0x518(%rbp),%r15
	movq %r15,0x30(%r11)
	movq %r11,0x4F0(%rbp)
	movq $0xF83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x291F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x130(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x538(%rbp)
	movq $0x249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x540(%rbp)
	addq $0x10,%r12
	movq 0x510(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x548(%rbp)
	cmpq %rdx,%r14
	jne L_252479
L_253723:
	testq %rdx,%rdx
	jz L_483583
L_253724:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253725:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1643,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253726
.p2align 0x4
.long 0x3FA4
L_253726:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq %rax,0x4F8(%rbp)
L_253727:
	movq $0x0,0x500(%rbp)
loop_2980:
	movq 0x548(%rbp),%r15
	cmpq %r15,0x500(%rbp)
	jl L_483563
L_253728:
	movq 0x4F8(%rbp),%r15
	movq $0x182D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x500(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x4(%rbp)
	movslq %r15d,%r13
	movq %r13,0x508(%rbp)
	cmpq %r13,%r14
	jne L_252479
L_253730:
	cmpl $0x0,%r15d
	jl L_252774
L_253731:
	movq $0x1,0x510(%rbp)
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2981:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483560
.p2align 0x4,,0x7
L_253732:
	movl 0x184(%rbp),%r13d
	cmpl 0x4(%rbp),%r13d
	jnl L_483533
L_254272:
	movslq %r13d,%r15
	imulq $0x28,%r15
	movq 0x4F8(%rbp),%r13
	movq 0x18(%r13,%r15,1),%r11
	movq %r11,0x518(%rbp)
	movq 0x510(%rbp),%r13
	cmpq $0x1,%r13
	je L_254279
L_254273:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_254274:
	movq 0x518(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x520(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	je L_483531
L_254275:
	cmpq $0x1,%r14
	je L_483529
L_254276:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254274
.p2align 0x4
L_483529:
L_254277:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483530
.p2align 0x4,,0x7
L_254279:
	movq $0x2533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,0x8(%r15)
.p2align 0x4,,0x7
L_254280:
	movq %r15,0x510(%rbp)
	incl 0x184(%rbp)
	jmp loop_2981
.p2align 0x4
L_483530:
L_254281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_254282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254282
.p2align 0x4
.long 0x3FFC
L_254282:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	jmp L_254279
.p2align 0x4
L_483531:
L_254283:
	movq 0x518(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq (globalObjptr+0x103B8)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_254284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483533:
L_253733:
	movq 0x508(%rbp),%r15
	testq %r15,%r15
	jz L_483559
L_253734:
	cmpq $0x7FFFFFFF,%r15
	ja L_252681
L_253735:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253736
L_254268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_254269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254269
.p2align 0x4
.long 0x3FA5
L_254269:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253736:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1645,%rcx
	movq 0x508(%rbp),%rdx
	movq $0x60,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253737
.p2align 0x4
.long 0x3FA5
L_253737:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq %rax,0x510(%rbp)
L_253738:
	movq $0x0,0x518(%rbp)
loop_2982:
	movq 0x508(%rbp),%r15
	cmpq %r15,0x518(%rbp)
	jl L_483538
L_253739:
	movq 0x510(%rbp),%r15
	movq $0x951,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x38(%rbp)
	movl %r15d,0x28(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x8(%rbp)
	jne L_252479
L_253741:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x2C(%rbp)
	je L_483536
L_253742:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253743:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1509,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253744
.p2align 0x4
.long 0x3FA6
L_253744:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq %rax,%r15
L_253745:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2983:
	cmpq 0x38(%rbp),%r14
	jnl L_483534
L_253902:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	imulq $0x18,%r9
	movq 0x510(%rbp),%r13
	movq 0x8(%r13,%r9,1),%r8
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r15,%r11,1)
	salq $0x4,%r10
	movl $0x0,0x0(%r15,%r10,1)
	incq %r14
	jmp loop_2983
.p2align 0x4
L_483534:
L_253746:
	movq $0x9DB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x548(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_253747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2017
.p2align 0x4
L_483536:
L_253904:
	movq (globalObjptr+0x6E38)(%rip),%r15
	jmp L_253745
.p2align 0x4
L_483538:
L_253905:
	movq 0x518(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x28,%r14
	movq 0x4F8(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	movq %r8,0x520(%rbp)
	imulq $0x28,%r13
	movq 0x8(%r9,%r13,1),%r14
	movq %r14,0x528(%rbp)
	imulq $0x28,%r11
	movq 0x10(%r9,%r11,1),%r14
	movq %r14,0x530(%rbp)
	imulq $0x28,%r10
	movq 0x18(%r9,%r10,1),%r14
	imulq $0x28,%r15
	movq 0x20(%r9,%r15,1),%r13
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r11
	movq %r14,0x540(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x550(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x558(%rbp)
	cmpq %r11,%r15
	movq %r13,0x548(%rbp)
	jne L_252479
L_253907:
	testq %r11,%r11
	jz L_483555
L_253908:
	cmpq $0x7FFFFFFF,%r11
	ja L_252681
L_253909:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253910
L_254264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_254265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254265
.p2align 0x4
.long 0x3FBF
L_254265:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_253910:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1647,%rcx
	movq 0x558(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_253911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253911
.p2align 0x4
.long 0x3FBF
L_253911:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq %rax,0x560(%rbp)
L_253912:
	movq $0x0,0x568(%rbp)
loop_2987:
	movq 0x558(%rbp),%r15
	cmpq %r15,0x568(%rbp)
	jl L_483547
L_253913:
	movq 0x560(%rbp),%r15
	movq $0x9E1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_252521
L_253915:
	movq 0x18(%r15),%r13
	movq %r13,0x548(%rbp)
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ecx
	movslq %ecx,%r10
	cmpq %r10,%r11
	jne L_252479
L_253917:
	movl %r14d,%r15d
	movl %r15d,0x184(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_252479
L_253919:
	cmpl $0x0,%r15d
	jl L_252774
L_253920:
	movl %ecx,0x558(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2988:
	cmpl 0x184(%rbp),%ecx
	jnl L_483541
L_254055:
	movslq %ecx,%r15
	salq $0x5,%r15
	movq 0x560(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_252479
L_254057:
	movl 0x558(%rbp),%ebx
	cmpl %ebx,%r10d
	jnl L_483539
L_254060:
L_254059:
	movl %ebx,0x558(%rbp)
	incl %ecx
	jmp loop_2988
.p2align 0x4
L_483539:
	xchgl %r10d,%ebx
	jmp L_254059
.p2align 0x4
L_483541:
L_253921:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253922
L_254053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_254054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254054
.p2align 0x4
.long 0x3FE1
L_254054:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_253922:
	movq $0x3E99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x4E8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x560(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x570(%rbp)
	movl 0x558(%rbp),%r15d
	movl %r15d,0x578(%rbp)
	addq $0x570,%rbp
	leaq (L_253923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_483547:
L_254062:
	movq 0x568(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	imulq $0x28,%r14
	movq 0x548(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x570(%rbp)
	imulq $0x28,%r13
	movq 0x8(%r10,%r13,1),%r14
	movq %r14,0x578(%rbp)
	imulq $0x28,%r11
	movq 0x18(%r10,%r11,1),%r14
	movq %r14,0x580(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r10,%r15,1),%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x590(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x44D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq 0x158(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x598(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x160(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x5A0(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x5A8(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x170(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x5B0(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x178(%rbp),%r15
	movq 0x1E0(%r15),%r13
	movq %r13,0x5B8(%rbp)
	movq 0x1D8(%r15),%r13
	movq %r13,0x5C0(%rbp)
	movq 0x1D0(%r15),%r13
	movq %r13,0x5C8(%rbp)
	movq 0x1C8(%r15),%r13
	movq %r13,0x5D0(%rbp)
	movq 0x1C0(%r15),%r13
	movq %r13,0x5D8(%rbp)
	movq 0x1B8(%r15),%r13
	movq %r13,0x5E0(%rbp)
	movq 0x1B0(%r15),%r13
	movq %r13,0x5E8(%rbp)
	movq 0x1A8(%r15),%r13
	movq %r13,0x5F0(%rbp)
	movq 0x1A0(%r15),%r13
	movq %r13,0x5F8(%rbp)
	movq 0x198(%r15),%r13
	movq %r13,0x600(%rbp)
	movq 0x190(%r15),%r13
	movq %r13,0x608(%rbp)
	movq 0x188(%r15),%r13
	movq %r13,0x610(%rbp)
	movq 0x180(%r15),%r13
	movq %r13,0x618(%rbp)
	movq 0x178(%r15),%r13
	movq %r13,0x620(%rbp)
	movq 0x170(%r15),%r13
	movq %r13,0x628(%rbp)
	movq 0x168(%r15),%r13
	movq %r13,0x630(%rbp)
	movq 0x160(%r15),%r13
	movq %r13,0x638(%rbp)
	movq 0x158(%r15),%r13
	movq %r13,0x640(%rbp)
	movq 0x150(%r15),%r13
	movq %r13,0x648(%rbp)
	movq 0x148(%r15),%r13
	movq %r13,0x650(%rbp)
	movq 0x140(%r15),%r13
	movq %r13,0x658(%rbp)
	movq 0x138(%r15),%r13
	movq %r13,0x660(%rbp)
	movq 0x130(%r15),%r13
	movq %r13,0x668(%rbp)
	movq 0x128(%r15),%r13
	movq %r13,0x670(%rbp)
	movq 0x120(%r15),%r13
	movq %r13,0x678(%rbp)
	movq 0x118(%r15),%r13
	movq %r13,0x680(%rbp)
	movq 0x110(%r15),%r13
	movq %r13,0x688(%rbp)
	movq 0x108(%r15),%r13
	movq %r13,0x690(%rbp)
	movq 0x100(%r15),%r13
	movq %r13,0x698(%rbp)
	movq 0xF8(%r15),%r13
	movq %r13,0x6A0(%rbp)
	movq 0xF0(%r15),%r13
	movq %r13,0x6A8(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x6B0(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x6B8(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x6C0(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0x6C8(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x6D0(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0x6D8(%rbp)
	movq 0xA0(%r15),%r13
	movq %r13,0x6E0(%rbp)
	movq 0x98(%r15),%r13
	movq %r13,0x6E8(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0x6F0(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0x6F8(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0x700(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0x708(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x710(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x718(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x720(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x728(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x730(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x738(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x740(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x748(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x750(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x758(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x760(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x768(%rbp)
	movq $0xB51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x770(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x778(%rbp)
	movl %r13d,0x184(%rbp)
	cmpq %r11,%r15
	movq %r14,0x588(%rbp)
	jne L_252479
L_254064:
	testq %r11,%r11
	jz L_483551
L_254065:
	cmpq $0x7FFFFFFF,%r11
	ja L_252681
L_254066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254067
L_254260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x788,%rbp
	leaq (L_254261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254261
.p2align 0x4
.long 0x3FE2
L_254261:
	addq $0xFFFFFFFFFFFFF878,%rbp
L_254067:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1649,%rcx
	movq 0x778(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x788,%rbp
	leaq (L_254068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254068
.p2align 0x4
.long 0x3FE2
L_254068:
	addq $0xFFFFFFFFFFFFF878,%rbp
	movq %rax,0x780(%rbp)
L_254069:
	movq $0x0,0x788(%rbp)
loop_2990:
	movq 0x778(%rbp),%r15
	cmpq %r15,0x788(%rbp)
	jl L_483548
L_254070:
	movq 0x780(%rbp),%r15
	movq $0xB4D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x580(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x5B8(%rbp)
	movq $0x1,0x790(%rbp)
	movq 0x550(%rbp),%r14
	movq %r14,0x798(%rbp)
	movq %r15,0x7A0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x908(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x910(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0xA20(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0xA28(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0xA30(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0xA38(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0xA40(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0xA48(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0xA50(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0xA58(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0xA60(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0xA68(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0xA70(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0xA78(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0xA80(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0xA88(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0xA90(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0xA98(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xAA0(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0xAA8(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0xAB0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xAB8(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0xAC0(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0xAC8(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0xAD0(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0xAD8(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0xAE0(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0xAE8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0xAF0(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0xAF8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xB00(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0xB08(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0xB10(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0xB18(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0xB20(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0xB28(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0xB30(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xB38(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0xB40(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0xB48(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0xB50(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB58(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0xB60(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0xB68(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0xB70(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0xB78(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0xB80(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0xB88(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0xB90(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0xB98(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0xBA0(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0xBA8(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0xBB0(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0xBB8(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0xBC0(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0xBC8(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0xBD0(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0xBD8(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0xBE0(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0xBE8(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0xBF0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0xBF8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0xC00(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0xC08(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0xC10(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0xC18(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0xC20(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0xC28(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0xC30(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0xC38(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xC40(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xC48(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xC50(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xC58(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xC60(%rbp)
	addq $0x790,%rbp
	leaq (L_254071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_483548:
L_254255:
	movq 0x788(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x588(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x790(%rbp)
	movq $0x3B03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x7A0(%rbp)
	movq (globalObjptr+0x1C00)(%rip),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq %r13,0x7B8(%rbp)
	movq 0x5B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x5C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x5C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x5D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x770(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x5E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x5F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x5F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x600(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x608(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x610(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x618(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x620(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x628(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x630(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x638(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x640(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x648(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x650(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x658(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x660(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x668(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x670(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x678(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x680(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x688(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x690(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x698(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x6A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x6A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x6B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x6B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x6C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x6C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x6D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x6D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x6E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x6E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x6F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x6F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x700(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x708(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x710(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x718(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x720(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x728(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x730(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x738(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x740(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x748(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x750(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x758(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x760(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x768(%rbp),%r15
	movq %r15,0x978(%rbp)
	addq $0x7A0,%rbp
	leaq (L_254256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2018
.p2align 0x4
L_483551:
L_254263:
	movq (globalObjptr+0x6E58)(%rip),%r15
	movq %r15,0x780(%rbp)
	jmp L_254069
.p2align 0x4
L_483555:
L_254267:
	movq (globalObjptr+0x6E50)(%rip),%r15
	movq %r15,0x560(%rbp)
	jmp L_253912
.p2align 0x4
L_483559:
L_254271:
	movq (globalObjptr+0x6E30)(%rip),%r14
	movq %r14,0x510(%rbp)
	jmp L_253738
.p2align 0x4
L_483560:
L_254324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_254325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254325
.p2align 0x4
.long 0x4005
L_254325:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	jmp L_253732
.p2align 0x4
L_483563:
L_254327:
	movq 0x500(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x510(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x508(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_252479
L_254329:
	testl %r14d,%r14d
	jz L_483580
L_254330:
	cmpq $0x0,%r15
	jna L_252521
L_254332:
	movq 0x8(%r13),%r15
	movq %r15,0x518(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movl %r10d,0x184(%rbp)
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_252479
L_254334:
	cmpl $0x0,%r14d
	jl L_252774
L_254335:
	movl $0x0,0x528(%rbp)
.p2align 0x4,,0x7
loop_2991:
	movl 0x528(%rbp),%r15d
	cmpl 0x4(%rbp),%r15d
	jnl L_483566
L_254454:
	movslq %r15d,%r14
	movq %r14,%r15
	imulq $0x28,%r15
	movq 0x508(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x530(%rbp)
	imulq $0x28,%r14
	movq 0x20(%r13,%r14,1),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_252479
L_254456:
	cmpl 0x184(%rbp),%r10d
	jne L_483564
.p2align 0x4,,0x7
L_254499:
	incl 0x528(%rbp)
	jmp loop_2991
.p2align 0x4
L_483564:
L_254457:
	movq (globalObjptr+0x10800)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_254458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483566:
L_254336:
	movq $0x1,0x518(%rbp)
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2992:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483576
.p2align 0x4,,0x7
L_254337:
	movl 0x184(%rbp),%r14d
	cmpl 0x4(%rbp),%r14d
	jnl L_483568
L_254448:
	movslq %r14d,%r15
	imulq $0x28,%r15
	movq 0x508(%rbp),%r14
	movq 0x10(%r14,%r15,1),%r13
	movq 0x520(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_483567
L_254449:
	movq $0x2533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x8(%r15)
L_254450:
	movq %r15,0x518(%rbp)
	incl 0x184(%rbp)
	jmp loop_2992
.p2align 0x4
L_483567:
L_254451:
	movq 0x518(%rbp),%r15
	jmp L_254450
.p2align 0x4
L_483568:
L_254338:
	cmpq $0x1,0x518(%rbp)
	je L_483575
L_254339:
	movq 0x520(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq $0x1,0x530(%rbp)
.p2align 0x4,,0x7
L_254340:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483574
.p2align 0x4,,0x7
L_254341:
	movq $0x2533,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x528(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x530(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x518(%rbp),%r11
	cmpq $0x1,%r11
	je L_483573
L_254342:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
.p2align 0x4,,0x7
L_254343:
	cmpq $0x1,%r14
	je L_254349
L_254344:
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r11
.p2align 0x4,,0x7
L_254345:
	movq 0x8(%r13),%r9
	movq 0x8(%r11),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	je L_483570
L_254346:
	cmpq $0x1,%r10
	je L_483569
L_254347:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	jmp L_254345
.p2align 0x4
L_483569:
L_254349:
	movq %r15,0x518(%rbp)
	movq %r13,0x528(%rbp)
	movq %r14,0x530(%rbp)
	jmp L_254340
.p2align 0x4
L_483570:
L_254350:
	cmpq $0x1,%r15
	je L_483571
L_254351:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_254343
.p2align 0x4
L_483571:
L_254352:
	movq %r14,0x518(%rbp)
L_254353:
	movq (globalObjptr+0x107F8)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_254354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483573:
L_254444:
	movq %r14,0x518(%rbp)
	jmp L_254353
.p2align 0x4
L_483574:
L_254445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254446
.p2align 0x4
.long 0x400C
L_254446:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_254341
.p2align 0x4
L_483575:
L_254388:
	movq 0x520(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x518(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_254389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483576:
L_254452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254453
.p2align 0x4
.long 0x400E
L_254453:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_254337
.p2align 0x4
L_483580:
L_254523:
	movq (globalObjptr+0x6E60)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483583:
L_254525:
	movq (globalObjptr+0x6E28)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	jmp L_253727
.p2align 0x4
L_483585:
L_254549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x540,%rbp
	leaq (L_254550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254550
.p2align 0x4
.long 0x401B
L_254550:
	addq $0xFFFFFFFFFFFFFAC0,%rbp
	jmp L_253720
.p2align 0x4
L_483591:
L_254703:
	movq (globalObjptr+0x6E20)(%rip),%r15
	movq %r15,0x510(%rbp)
	jmp L_253713
.p2align 0x4
L_483593:
L_253562:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x538(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x4E0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x4E8(%rbp)
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq $0x1,0x0(%r13)
	movq 0x90(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x4F0(%rbp)
	movq 0x0(%r11),%r9
	movq %r9,0x4F8(%rbp)
	movq %r11,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq $0x1,0x0(%r11)
	movq 0xA0(%rbp),%r11
	movq 0x10(%r11),%r9
	movq %r9,0x500(%rbp)
	movq 0x0(%r9),%r8
	movq %r8,0x508(%rbp)
	movq %r9,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r10,%r8,1)
	movq $0x1,0x0(%r9)
	movq 0xB0(%rbp),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x510(%rbp)
	movq 0x0(%r8),%rsp
	movq %rsp,0x518(%rbp)
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq %rsp,%rax
	movb $0x1,0x0(%r10,%rax,1)
	movq $0x1,0x0(%r8)
	movq $0x71,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x44D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movl $0x0,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r10,%r8,1)
	movq %rsp,0x0(%r15)
	movl $0x0,0x528(%rbp)
	movq 0x8(%rbp),%r10
	movq %r10,0x530(%rbp)
	movq 0x18(%rbp),%r10
	movq %r10,0x540(%rbp)
	movq 0x20(%rbp),%r10
	movq %r10,0x548(%rbp)
	movq 0x28(%rbp),%r10
	movq %r10,0x550(%rbp)
	movq 0x30(%rbp),%r10
	movq %r10,0x558(%rbp)
	movq 0x38(%rbp),%r10
	movq %r10,0x560(%rbp)
	movq 0x40(%rbp),%r10
	movq %r10,0x568(%rbp)
	movq 0x48(%rbp),%r10
	movq %r10,0x570(%rbp)
	movq 0x50(%rbp),%r10
	movq %r10,0x578(%rbp)
	movq 0x58(%rbp),%r10
	movq %r10,0x580(%rbp)
	movq 0x60(%rbp),%r10
	movq %r10,0x588(%rbp)
	movq 0x68(%rbp),%r10
	movq %r10,0x590(%rbp)
	movq 0x70(%rbp),%r10
	movq %r10,0x598(%rbp)
	movq %r15,0x5A0(%rbp)
	movq %r14,0x5A8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq %r13,0x5B8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq %r11,0x5C8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq %r9,0x5D8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	addq $0x528,%rbp
	leaq (L_253563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
L_483594:
L_253511:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x28(%rbp)
	jne L_252479
L_253513:
	testq %rdx,%rdx
	jz L_483613
L_253514:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253515:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253516
.p2align 0x4
.long 0x3F87
L_253516:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x38(%rbp)
L_253517:
	movq $0x0,0x40(%rbp)
loop_2973:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_483611
L_253518:
	movq 0x38(%rbp),%r15
	movq $0x182F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_252479
L_253520:
	cmpl $0x0,%r13d
	jl L_252774
L_253521:
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
loop_2974:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_253250
L_253523:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_253537
L_253524:
	movq 0x1F0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x50(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x88(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_252479
L_253526:
	cmpl $0x0,%r13d
	jl L_252774
L_253527:
	movl $0x0,0x8C(%rbp)
.p2align 0x4,,0x7
loop_2975:
	movl 0x88(%rbp),%r15d
	cmpl %r15d,0x8C(%rbp)
	jl L_483603
L_253528:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_252479
L_253530:
	cmpl $0x0,%r13d
	jl L_252774
L_253531:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_2976:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483599
L_253532:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_252479
L_253534:
	cmpl $0x0,%r13d
	jl L_252774
L_253535:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_2977:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483595
L_253537:
	incl 0x2C(%rbp)
	jmp loop_2974
.p2align 0x4
L_483595:
L_253538:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253539
L_253541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253542
.p2align 0x4
.long 0x3F89
L_253542:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253539:
	movslq 0x34(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_483599:
L_253544:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253545
L_253547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253548
.p2align 0x4
.long 0x3F8B
L_253548:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253545:
	movslq 0x34(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x270(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_483603:
L_253550:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253551
L_253553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253554
.p2align 0x4
.long 0x3F8D
L_253554:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253551:
	movslq 0x8C(%rbp),%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x270(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_483611:
L_253558:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x270(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_253559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2000
.p2align 0x4
L_483613:
L_253561:
	movq (globalObjptr+0x6E18)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_253517
.p2align 0x4
L_483615:
L_253290:
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x210(%rbp),%r14
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_483617
L_253291:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_483616
L_253292:
	movq 0x8(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5068)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10628)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10780)(%rip),%r14
	movq %r14,0x0(%r15)
L_253293:
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483616:
L_253509:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x10780)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5070)(%rip),%r14
	movq %r14,0x8(%r15)
	jmp L_253293
.p2align 0x4
L_483617:
L_253300:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r14,%r11
	jne L_252479
L_253302:
	testq %r11,%r11
	jz L_483637
L_253303:
	cmpq $0x7FFFFFFF,%r11
	ja L_252681
L_253304:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253305
L_253502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253503
.p2align 0x4
.long 0x3F5E
L_253503:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253305:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x162B,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253306
.p2align 0x4
.long 0x3F5E
L_253306:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x60(%rbp)
L_253307:
	movq $0x0,0x68(%rbp)
loop_2965:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_483634
L_253308:
	movq 0x60(%rbp),%r15
	movq $0x1841,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_252479
L_253310:
	testl %r15d,%r15d
	jz L_483632
L_253311:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_252774
L_253312:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2966:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_483620
L_253445:
	movslq %ebx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_252479
L_253447:
	addl %ecx,%r10d
	jo L_252474
L_253448:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2966
.p2align 0x4
L_483620:
L_253313:
	cmpq $0x0,0x28(%rbp)
	jna L_252521
L_253315:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_483629
L_253316:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253317:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253318
.p2align 0x4
.long 0x3F5F
L_253318:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x70(%rbp)
L_253319:
	xorl %ecx,%ecx
	movq 0x58(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2967:
	cmpq 0x68(%rbp),%r15
	jnl L_483626
.p2align 0x4,,0x7
loop_2970:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_252479
L_253435:
	cmpl %r11d,%ecx
	jl L_483623
L_253436:
	incl %ebx
	jo L_252474
L_253437:
	movslq %ebx,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_252521
L_253439:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_2970
.p2align 0x4
L_483623:
L_253440:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_252521
L_253442:
	movq %r11,%r13
	movq %r15,%r10
	movq %r15,%r9
	salq $0x4,%r13
	movq 0x0(%r14,%r13,1),%r8
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r13
	incl %ecx
	movq 0x70(%rbp),%r11
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r10
	movq %r8,0x0(%r11,%r10,1)
	movq %r11,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%rsi,%r10,1)
	salq $0x4,%r9
	movq %r13,0x8(%r11,%r9,1)
	incq %r15
	jmp loop_2967
.p2align 0x4
L_483626:
L_253320:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253321
L_253431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253432
.p2align 0x4
.long 0x3F79
L_253432:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253321:
	movq 0x70(%rbp),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x28(%rbp)
L_253322:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x500(%rbp)
	addq $0x58,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483629:
L_253444:
	movq (globalObjptr+0x6D70)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_253319
.p2align 0x4
L_483632:
L_253450:
	movq (globalObjptr+0xF10)(%rip),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x28(%rbp)
	jmp L_253322
.p2align 0x4
L_483634:
L_253451:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq %r13,0x4F8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_483637:
L_253505:
	movq (globalObjptr+0x6D68)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_253307
.p2align 0x4
L_483639:
L_253272:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_252479
L_253274:
	cmpl $0x0,%r13d
	jl L_252774
L_253275:
	movq $0x1,0x4D8(%rbp)
	movl $0x0,0x184(%rbp)
loop_2964:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x184(%rbp)
	jl L_483640
L_253276:
	movq 0x4D8(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp L_252672
.p2align 0x4
L_483640:
L_253277:
	movslq 0x184(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x4F8(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x4E8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x660(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x668(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	addq $0x4E8,%rbp
	leaq (L_253278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
L_483643:
L_253235:
	movq 0x208(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x210(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x218(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x220(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x238(%rbp)
	movl %r14d,0x230(%rbp)
	cmpq %r11,%r15
	movq %r13,0x228(%rbp)
	jne L_252479
L_253237:
	testq %r11,%r11
	jz L_483651
L_253238:
	cmpq $0x7FFFFFFF,%r11
	ja L_252681
L_253239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253240
L_253268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253269
.p2align 0x4
.long 0x3F54
L_253269:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253240:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161B,%rcx
	movq 0x238(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253241
.p2align 0x4
.long 0x3F54
L_253241:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x240(%rbp)
L_253242:
	movq $0x0,0x248(%rbp)
loop_2962:
	movq 0x238(%rbp),%r15
	cmpq %r15,0x248(%rbp)
	jl L_483648
L_253243:
	movq 0x240(%rbp),%r15
	movq $0x183D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_252479
L_253245:
	movl 0x230(%rbp),%r15d
	cmpl %ecx,%r15d
	jne L_252662
L_253247:
	cmpl $0x0,%r15d
	jl L_483645
L_253248:
	xorl %ecx,%ecx
loop_2963:
	cmpl 0x230(%rbp),%ecx
	jnl L_253250
L_253251:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x234(%rbp)
	movslq %ecx,%r15
	movq 0x240(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x278(%rbp)
	movq 0x228(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x270(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x270,%rbp
	leaq (L_253252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_483645:
L_252662:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483648:
L_253254:
	movq 0x248(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x228(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x268(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x278(%rbp)
	movq 0x210(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x280(%rbp)
	addq $0x58,%r12
	addq $0x278,%rbp
	leaq (L_253255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483651:
L_253271:
	movq (globalObjptr+0x6CF0)(%rip),%r15
	movq %r15,0x240(%rbp)
	jmp L_253242
.p2align 0x4
L_483654:
L_255028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4E0,%rbp
	leaq (L_255029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255029
.p2align 0x4
.long 0x405B
L_255029:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	jmp L_252473
.p2align 0x4
.long 0x3F12
L_252787:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252788
L_252789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252790
.p2align 0x4
.long 0x3F13
L_252790:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252788:
	movq $0x1451,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0xA8(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_2957
.p2align 0x4
.long 0x3EF5
L_252597:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252598
L_252728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252729
.p2align 0x4
.long 0x3F09
L_252729:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252598:
	movq 0x78(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x54(%rbp)
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_252479
L_252600:
	testl %r11d,%r11d
	jz L_483658
L_252601:
	cmpl $0x1,%r11d
	jg L_483657
L_252602:
	movq (globalObjptr+0xA058)(%rip),%r15
L_252603:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10738)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_252604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483657:
L_252726:
	movq (globalObjptr+0xE7E8)(%rip),%r15
	jmp L_252603
.p2align 0x4
L_483658:
L_252644:
	movq $0x3F87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_252645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x3F14
L_252796:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x6E8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252797
L_252883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252884
.p2align 0x4
.long 0x3F1F
L_252884:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252797:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x6F0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x6E8(%rbp)
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x6E0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3F2C
L_252953:
	addq $0xFFFFFFFFFFFFF8F0,%rbp
	movq 0x710(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x718(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x720(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x728(%rbp),%r15
	movq %r15,0x720(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252954
L_253054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x730,%rbp
	leaq (L_253055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253055
.p2align 0x4
.long 0x3F39
L_253055:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
L_252954:
	movq 0x6F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x728(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x730(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x738(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x720(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x748(%rbp)
	movl $0x2,0x750(%rbp)
	addq $0x748,%rbp
	leaq (L_252955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3F41
L_253061:
	addq $0xFFFFFFFFFFFFF900,%rbp
	movq 0x700(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x708(%rbp),%r15
	movq %r15,0x700(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253062
L_253124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x710,%rbp
	leaq (L_253125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253125
.p2align 0x4
.long 0x3F4A
L_253125:
	addq $0xFFFFFFFFFFFFF8F0,%rbp
L_253062:
	movq 0x6F8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x708(%rbp)
	cmpq %r11,%r14
	jne L_252479
L_253064:
	testl %r13d,%r13d
	jz L_483680
L_253065:
	cmpq $0x0,%r14
	jna L_252521
L_253067:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x710(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x718(%rbp)
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x720(%rbp)
L_253068:
	movq 0x718(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x728(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_252898
L_253069:
	movq %r15,0x0(%r14)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_483677
L_253070:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x730(%rbp)
	movl $0x0,0x4(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_253072:
	movq 0x730(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_253073
L_253109:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_483672
L_253073:
	movl 0x4(%rbp),%r14d
	incl %r14d
	movl %r14d,0x184(%rbp)
	jo L_252474
L_253074:
	cmpq $0x1,%r15
	je L_483663
L_253075:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,0x730(%rbp)
	movl %r14d,0x4(%rbp)
	jmp L_253072
.p2align 0x4
L_483663:
L_253076:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253077
L_253107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_253108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253108
.p2align 0x4
.long 0x3F42
L_253108:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_253077:
	movl 0x184(%rbp),%ecx
L_253078:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252909
L_253079:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_253081
L_253106:
	movl %ecx,0x0(%r15)
L_253081:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x728(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_253082:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x728(%rbp)
	movq 0x708(%rbp),%r15
	testq %r15,%r15
	jz L_483667
L_253083:
	cmpq $0x7FFFFFFF,%r15
	ja L_252681
L_253084:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253085
L_253102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_253103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253103
.p2align 0x4
.long 0x3F42
L_253103:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_253085:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E5,%rcx
	movq 0x708(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_253086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253086
.p2align 0x4
.long 0x3F42
L_253086:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq %rax,0x730(%rbp)
L_253087:
	movq $0x0,0x738(%rbp)
loop_2960:
	movq 0x708(%rbp),%r15
	cmpq %r15,0x738(%rbp)
	jl L_483664
L_253088:
	movq 0x730(%rbp),%r15
	movq $0x1139,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x6E0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x6E8(%rbp),%r13
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x718(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x700(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x720(%rbp),%r9
	movq %r9,0x10(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x6F0(%rbp),%r9
	movq %r9,0x18(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x28,%r11
	movq %r15,0x20(%r14,%r11,1)
	incq %r13
	movq %r13,0x6E8(%rbp)
	jmp loop_2938
.p2align 0x4
L_483664:
L_253089:
	movq 0x738(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x6F8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x740(%rbp)
	movq %r11,0x750(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x758(%rbp)
	addq $0x750,%rbp
	leaq (L_253090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2021
.p2align 0x4
L_483667:
L_253105:
	movq (globalObjptr+0x6E10)(%rip),%r14
	movq %r14,0x730(%rbp)
	jmp L_253087
.p2align 0x4
L_483672:
L_253110:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253111
L_253115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_253116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253116
.p2align 0x4
.long 0x3F47
L_253116:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_253111:
	movq 0x730(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x4(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_252909
L_253112:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_253082
L_253114:
	movl %r14d,0x0(%r13)
	jmp L_253082
.p2align 0x4
L_483677:
L_253117:
	xorl %ecx,%ecx
	jmp L_253078
.p2align 0x4
L_483680:
L_253118:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x710(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x10770)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x720(%rbp)
	addq $0x720,%rbp
	leaq (L_253119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3F4B
L_253134:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253135
L_253179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253180
.p2align 0x4
.long 0x3F51
L_253180:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253135:
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jz L_253137
L_253139:
	movq 0x1F8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_483683
L_253141:
	movq 0x520(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x550,%rbp
	leaq (not_58+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isExpansive_0
.p2align 0x4
L_483683:
L_253137:
	movq 0x520(%rbp),%r15
L_253138:
	movq 0x500(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x510(%rbp),%r13
	movq %r13,%r10
	salq $0x5,%r10
	movq 0x530(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	salq $0x5,%r10
	movq 0x518(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	salq $0x5,%r10
	movq 0x528(%rbp),%r9
	movq %r9,0x10(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x5,%r11
	movq %r15,0x18(%r14,%r11,1)
	incq %r13
	movq %r13,0x510(%rbp)
	jmp loop_2937
.p2align 0x4
.long 0x3F4C
toString_356:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movl 0x558(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253183
L_253194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253195
.p2align 0x4
.long 0x3F4F
L_253195:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253183:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x548(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x558(%rbp)
	movq $0x1,0x550(%rbp)
	addq $0x550,%rbp
	leaq (rev_354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x3F8F
L_254873:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x528(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254874
L_255026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_255027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255027
.p2align 0x4
.long 0x405A
L_255027:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_254874:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x530(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x44D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,0x0(%r15)
	movl 0x0(%rbp),%r14d
	movl %r14d,0x558(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x560(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x568(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x578(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x580(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x588(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x590(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x598(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x5C8(%rbp)
	movq %r15,0x5D0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA20(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA28(%rbp)
	addq $0x558,%rbp
	leaq (L_254875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
.long 0x3F63
L_254871:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x268(%rbp)
	jmp L_252672
.p2align 0x4
.long 0x4044
L_254861:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254862
L_254868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254869
.p2align 0x4
.long 0x4045
L_254869:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254862:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_253250
L_254863:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1052,%r13
	je L_483688
L_254864:
	xorl %ecx,%ecx
L_254865:
	movq $0x1451,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x4(%r15)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movq %r15,0x270(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x270,%rbp
	leaq (L_253341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_483688:
L_254866:
	movl $0x1,%ecx
	jmp L_254865
.p2align 0x4
.long 0x3EFE
L_252675:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_252676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolveOverloads_0
.p2align 0x4
.long 0x4030
L_254753:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254754
L_254856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254857
.p2align 0x4
.long 0x403E
L_254857:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254754:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_483694
L_254755:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1074,%r15
	je L_483691
L_254792:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_254735:
	movq $0x209D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x270,%rbp
	leaq (L_254736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483691:
L_254756:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_483692
L_254757:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x68(%rbp)
	movq %r14,%r15
L_254758:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483692:
L_254791:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_254775:
	testl %ecx,%ecx
	jz L_483693
L_254776:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_254777:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x270(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x278(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_254778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_483693:
L_254782:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_254777
.p2align 0x4
L_483694:
L_254793:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r11
	je L_483695
L_254794:
	movq 0x8(%r11),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r11),%r11
	movq $0x1,0x70(%rbp)
	movq %r11,%r15
L_254795:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483695:
L_254855:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_254822:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x402E
L_254723:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254724
L_254750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254751
.p2align 0x4
.long 0x4037
L_254751:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254724:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_483697
L_254725:
	movq 0xE8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq $0x9CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%r10),%r13
	movq 0x38(%r10),%r11
	movq 0x30(%r10),%r9
	movq 0x28(%r10),%r8
	movq 0x20(%r10),%rsp
	movq 0x18(%r10),%rsi
	movq 0x10(%r10),%rdi
	movq 0x8(%r10),%rdx
	movq 0x0(%r10),%rcx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %rcx,0x0(%r10)
	movq %rdx,0x8(%r10)
	movq %rdi,0x10(%r10)
	movq %rsi,0x18(%r10)
	movq %rsp,0x20(%r10)
	movq %r8,0x28(%r10)
	movq %r9,0x30(%r10)
	movq %r14,0x38(%r10)
	movq %r11,0x40(%r10)
	movq %r13,0x48(%r10)
	movq %r10,0x278(%rbp)
	addq $0x58,%r12
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483697:
L_254749:
	movq 0xE0(%rbp),%r13
	movq $0x1,%r14
	xchgq %r13,%r15
L_254731:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x20C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_483698
L_254732:
L_254733:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r11,%r15
	movq %r13,%r14
L_254734:
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	jmp L_254735
.p2align 0x4
L_483698:
L_254744:
	xchgq %r14,%r15
	xchgq %r13,%r14
	jmp L_254734
.p2align 0x4
.long 0x402B
L_254710:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254711
L_254713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254714
.p2align 0x4
.long 0x402D
L_254714:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254711:
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_254712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1993
.p2align 0x4
.long 0x4023
tuple_2:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x568(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254625
L_254633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_254634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254634
.p2align 0x4
.long 0x4024
L_254634:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_254625:
	movq 0x568(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_252479
L_254627:
	cmpl $0x1,%r13d
	jne L_483702
L_254630:
	cmpq $0x0,%r15
	jna L_252521
L_254632:
	movq 0x0(%r14),%r15
L_254629:
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x548(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x560(%rbp),%r13
	movq %r13,0x548(%rbp)
	movq %r14,%r15
	jmp done_18
.p2align 0x4
L_483702:
L_254628:
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,%r15
	jmp L_254629
.p2align 0x4
.long 0x401F
L_254608:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r14
	movq %r14,0x548(%rbp)
	movq 0x560(%rbp),%r15
L_254591:
	movq 0x530(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x538(%rbp),%r11
	movq %r11,%r9
	imulq $0x28,%r9
	movq 0x540(%rbp),%r8
	movq %r8,0x0(%r13,%r9,1)
	movq %r13,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,%r9
	imulq $0x28,%r9
	movq 0x558(%rbp),%r8
	movq %r8,0x8(%r13,%r9,1)
	movq %r13,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,%r9
	imulq $0x28,%r9
	movq %r15,0x10(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	imulq $0x28,%r15
	movq 0x550(%rbp),%r9
	movq %r9,0x18(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	imulq $0x28,%r15
	movq %r14,0x20(%r13,%r15,1)
	incq %r11
	movq %r11,0x538(%rbp)
	jmp loop_2993
.p2align 0x4
.long 0x401E
L_254577:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x570,%rbp
	leaq (L_254578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x4020
error_11:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x548(%rbp)
error_10:
	movq 0x558(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_254586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x4025
L_254649:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254650
L_254693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_254694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254694
.p2align 0x4
.long 0x4028
L_254694:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_254650:
	movq 0x580(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_254657
L_254651:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x588(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_254652:
	movq 0x588(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_483717
L_254653:
	cmpq $0x1,%r15
	je L_483705
L_254654:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x588(%rbp)
	jmp L_254652
.p2align 0x4
L_483705:
L_254655:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254657
L_254686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_254687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254687
.p2align 0x4
.long 0x4028
L_254687:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_254657:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x580(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_857:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_254682
L_254658:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x578(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r10)
	cmpq $0x1,%r13
	je L_483713
L_254659:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDEF,%r15
	je L_483709
L_254676:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_254662
L_254678:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_252474
L_254679:
	incl %r14d
	jo L_252474
L_254662:
	movq $0x3AEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x548(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x578(%rbp)
	movl $0x2,0x580(%rbp)
	addq $0x578,%rbp
	leaq (tuple_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_483709:
L_254660:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_254662
L_254673:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_252474
L_254674:
	incl %r14d
	jo L_252474
	jmp L_254662
.p2align 0x4
L_483713:
L_254682:
	movq 0x560(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_254683
L_254684:
	movq 0x8(%r14),%r13
	movq %r13,0x548(%rbp)
	movq 0x0(%r14),%r15
	jmp L_254573
.p2align 0x4
L_483717:
L_254688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254689
L_254690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_254691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254691
.p2align 0x4
.long 0x4029
L_254691:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_254689:
	movq 0x588(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_857
.p2align 0x4
.long 0x3FFD
L_254284:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x520(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_254285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FA7
L_253747:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253748
L_253900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253901
.p2align 0x4
.long 0x3FBA
L_253901:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253748:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x78(%rbp)
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_252479
L_253750:
	testl %r11d,%r11d
	jz L_483722
L_253751:
	cmpl $0x1,%r11d
	jg L_483721
L_253752:
	movq (globalObjptr+0xA058)(%rip),%r15
L_253753:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10738)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483721:
L_253898:
	movq (globalObjptr+0xE7E8)(%rip),%r15
	jmp L_253753
.p2align 0x4
L_483722:
L_253794:
	movq $0x403D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x548(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_253795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x3FC0
L_253923:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x568(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253924
L_254051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_254052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254052
.p2align 0x4
.long 0x3FE0
L_254052:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253924:
	movq 0x548(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x570(%rbp)
	movl $0x0,0x548(%rbp)
loop_2989:
	movl 0x184(%rbp),%r15d
	cmpl %r15d,0x548(%rbp)
	jl L_483725
L_253925:
	movq $0x3F89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x578(%rbp)
	movl 0x558(%rbp),%r15d
	movl %r15d,0x580(%rbp)
	addq $0x578,%rbp
	leaq (L_253926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_483725:
L_253992:
	movslq 0x548(%rbp),%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x560(%rbp),%r13
	movq 0x10(%r13,%r14,1),%r11
	movq %r11,0x578(%rbp)
	salq $0x5,%r15
	movq 0x18(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x590(%rbp)
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x588(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x588,%rbp
	leaq (L_253993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3FE3
L_254071:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254072
L_254253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254254
.p2align 0x4
.long 0x3FF7
L_254254:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254072:
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jz L_254074
L_254196:
	movq 0x188(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_483747
L_254198:
	movq 0x190(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_483745
L_254199:
	movq 0x198(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	je L_483744
L_254200:
	cmpq $0x1,0x570(%rbp)
	jne L_483743
L_254202:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
L_254122:
	movq 0x158(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_254129
L_254123:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_254124:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_253662
L_254125:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483727
L_254126:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_254124
.p2align 0x4
L_483727:
L_254127:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254129
L_254163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254164
.p2align 0x4
.long 0x3FEE
L_254164:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254129:
	movq 0x158(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x598(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_254136
L_254130:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_254131:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_253662
L_254132:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483728
L_254133:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_254131
.p2align 0x4
L_483728:
L_254134:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254136
L_254159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254160
.p2align 0x4
.long 0x3FED
L_254160:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254136:
	movq 0x160(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x5A0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x168(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_254143
L_254137:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_254138:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_253662
L_254139:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483729
L_254140:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_254138
.p2align 0x4
L_483729:
L_254141:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254143
L_254155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254156
.p2align 0x4
.long 0x3FEC
L_254156:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254143:
	movq 0x168(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x5A8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x170(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_254150
L_254144:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_254145:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_483732
L_254146:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483730
L_254147:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_254145
.p2align 0x4
L_483730:
L_254148:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254150
L_254151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254152
.p2align 0x4
.long 0x3FEB
L_254152:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254150:
	movq 0x170(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x5B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x560(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x568(%rbp),%r14
	movq %r14,%r11
	salq $0x5,%r11
	movq 0x780(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	salq $0x5,%r11
	movq 0x578(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	salq $0x5,%r11
	movq 0x5B8(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x5,%r13
	movq 0x570(%rbp),%r11
	movq %r11,0x18(%r15,%r13,1)
	incq %r14
	movq %r14,0x568(%rbp)
	jmp loop_2987
.p2align 0x4
L_483732:
L_253662:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483743:
L_254076:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x798(%rbp)
	addq $0x58,%r12
	movq 0x570(%rbp),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483744:
L_254203:
	movq $0x3CB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x790(%rbp)
	movl 0x184(%rbp),%r15d
	movl %r15d,0x798(%rbp)
	addq $0x790,%rbp
	leaq (L_254204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_483745:
L_254250:
	cmpq $0x1,0x570(%rbp)
	jne L_254076
L_254252:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
	jmp L_254122
.p2align 0x4
L_483747:
L_254074:
	cmpq $0x1,0x570(%rbp)
	jne L_254076
L_254195:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
	jmp L_254122
.p2align 0x4
.long 0x3FFA
L_254256:
	addq $0xFFFFFFFFFFFFF860,%rbp
	movq 0x7A0(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x7A8(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254257
L_254258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B0,%rbp
	leaq (L_254259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254259
.p2align 0x4
.long 0x3FFB
L_254259:
	addq $0xFFFFFFFFFFFFF850,%rbp
L_254257:
	movq 0x790(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x780(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x788(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r14,0x0(%r15,%r10,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x7A0(%rbp),%r11
	movq %r11,0x8(%r15,%r14,1)
	incq %r13
	movq %r13,0x788(%rbp)
	jmp loop_2990
.p2align 0x4
.long 0x400B
L_254458:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254459
L_254519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_254520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254520
.p2align 0x4
.long 0x4015
L_254520:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_254459:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x558(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254460:
	addl 0x0(%r15),%ecx
	movl %ecx,0x52C(%rbp)
	jo L_252474
L_254461:
	cmpq $0x1,%r14
	je L_483752
L_254462:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254460
.p2align 0x4
L_483752:
L_254463:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254464
L_254517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_254518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254518
.p2align 0x4
.long 0x4019
L_254518:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_254464:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483753
L_254465:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
L_254466:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x550(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10808)(%rip),%r15
	movq %r15,0x560(%rbp)
	addq $0x560,%rbp
	leaq (L_254467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483753:
L_254516:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254466
.p2align 0x4
.long 0x4006
L_254354:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r14
	movq %r14,0x528(%rbp)
	movq 0x518(%rbp),%r14
	cmpq $0x1,%r14
	je L_483757
L_254355:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x518(%rbp)
	movq $0x1,0x530(%rbp)
L_254356:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_254357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483757:
L_254442:
	movq $0x1,%r15
L_254365:
	movq %r15,0x560(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (seq_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x4006
L_254389:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movl 0x558(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254390
L_254424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254425
.p2align 0x4
.long 0x400E
L_254425:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254390:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x528(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x530(%rbp)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r9d
	incl %r9d
	jo L_252474
L_254391:
	movl %r9d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0x0(%r13),%r8
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r13,0x8(%r8)
	movq %r9,0x10(%r8)
	movq %r15,0x18(%r8)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x518(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r13,0x0(%r10)
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r14
	movq 0x10(%r14),%r13
	movq $0x2099,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r11,0x0(%r14)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x550(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x8(%r13),%r15
	movq %r15,0x578(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x568(%rbp)
	addq $0x578,%rbp
	leaq (L_254392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3F8F
L_253563:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253564
L_253705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_253706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253706
.p2align 0x4
.long 0x3FA2
L_253706:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
L_253564:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x530(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x44D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,0x0(%r15)
	movl 0x0(%rbp),%r14d
	movl %r14d,0x550(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x558(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x560(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x568(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x578(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x580(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x588(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x590(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x598(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x5C0(%rbp)
	movq %r15,0x5C8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA20(%rbp)
	addq $0x550,%rbp
	leaq (L_253565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
.long 0x3F88
L_253540:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x34(%rbp)
	jmp loop_2977
.p2align 0x4
.long 0x3F8A
L_253546:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x34(%rbp)
	jmp loop_2976
.p2align 0x4
.long 0x3F8C
L_253552:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x8C(%rbp)
	jmp loop_2975
.p2align 0x4
.long 0x3F8E
L_253559:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_2973
.p2align 0x4
.long 0x3F5C
L_253294:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F60
L_253323:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253324
L_253429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253430
.p2align 0x4
.long 0x3F78
L_253430:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253324:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_252479
L_253326:
	testl %r13d,%r13d
	jz L_483770
L_253327:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,0x38(%rbp)
L_253328:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r11,%r14
	jne L_252479
L_253330:
	cmpl $0x0,%r13d
	jl L_252774
L_253331:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_2968:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_483763
L_253349:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x68(%rbp)
	cmpq $0x1,%r11
	jne L_483761
.p2align 0x4,,0x7
L_253397:
	incl 0x44(%rbp)
	jmp loop_2968
.p2align 0x4
L_483761:
L_253350:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253351
L_253424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253425
.p2align 0x4
.long 0x3F77
L_253425:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253351:
	movq 0x228(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x70(%rbp)
	movq $0x3ED5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x4F8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq %r11,0x508(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_483763:
L_253332:
	movq 0x58(%rbp),%rdx
	testq %rdx,%rdx
	jz L_483767
L_253333:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253334:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x162D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253335
.p2align 0x4
.long 0x3F61
L_253335:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x30(%rbp)
L_253336:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2969:
	cmpq 0x58(%rbp),%r15
	jnl L_483764
L_253346:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2969
.p2align 0x4
L_483764:
L_253337:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253338
L_253344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253345
.p2align 0x4
.long 0x3F65
L_253345:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253338:
	movq 0x30(%rbp),%r15
	movq $0xF81,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x209B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x230(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x270,%rbp
	leaq (L_253339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483767:
L_253348:
	movq (globalObjptr+0x6D78)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_253336
.p2align 0x4
L_483770:
L_253428:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x38(%rbp)
	jmp L_253328
.p2align 0x4
.long 0x3F7A
L_253452:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x104C,%r15
	je L_483779
	cmpq $0x104D,%r15
	je L_483773
L_253453:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq (globalObjptr+0x107A0)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483773:
L_253488:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x80(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x78(%rbp)
	jne L_252479
L_253490:
	testq %rdx,%rdx
	jz L_483777
L_253491:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253492:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253493
.p2align 0x4
.long 0x3F85
L_253493:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x88(%rbp)
L_253494:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2972:
	cmpq 0x80(%rbp),%r15
	jnl L_483774
L_253499:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq 0x88(%rbp),%r14
	movq %r14,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r13
	movq %r9,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r10,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2972
.p2align 0x4
L_483774:
L_253495:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253496
L_253497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253498
.p2align 0x4
.long 0x3F86
L_253498:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253496:
	movq 0x88(%rbp),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
L_253469:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2965
.p2align 0x4
L_483777:
L_253501:
	movq (globalObjptr+0x6D80)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_253494
.p2align 0x4
L_483779:
L_253478:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253479
L_253486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253487
.p2align 0x4
.long 0x3F84
L_253487:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253479:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq $0x1713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C3,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253480
.p2align 0x4
.long 0x3F82
L_253480:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2971:
	cmpq $0x1,%r15
	jnl L_483780
L_253485:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x90(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2971
.p2align 0x4
L_483780:
L_253481:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253482
L_253483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253484
.p2align 0x4
.long 0x3F83
L_253484:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253482:
	movq 0x70(%rbp),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_253469
.p2align 0x4
.long 0x3F5A
L_253278:
	addq $0xFFFFFFFFFFFFFB18,%rbp
	movq 0x4E8(%rbp),%r15
	movq %r15,0x4E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253279
L_253287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_253288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253288
.p2align 0x4
.long 0x3F5B
L_253288:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_253279:
	movq 0x4D8(%rbp),%r14
	cmpq $0x1,%r14
	je L_483784
L_253280:
L_253281:
	movq 0x4E0(%rbp),%r13
	cmpq $0x1,%r13
	je L_483783
L_253282:
L_253283:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_253284:
	movq %r15,0x4D8(%rbp)
	incl 0x184(%rbp)
	jmp loop_2964
.p2align 0x4
L_483783:
L_253285:
	movq %r14,%r15
	jmp L_253284
.p2align 0x4
L_483784:
L_253286:
	movq 0x4E0(%rbp),%r15
	jmp L_253284
.p2align 0x4
.long 0x3F55
L_253252:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x234(%rbp),%ecx
	jmp loop_2963
.p2align 0x4
.long 0x3F56
L_253255:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253256
L_253266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_253267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253267
.p2align 0x4
.long 0x3F59
L_253267:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_253256:
	movq 0x268(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_252479
L_253258:
	testl %ecx,%ecx
	jz L_483786
L_253259:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x270(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_253260:
	movq %r15,0x278(%rbp)
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp def_0
.p2align 0x4
L_483786:
L_253265:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x270(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_253260
.p2align 0x4
.long 0x3EF6
L_252604:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_252605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EFB
L_252645:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x10(%rbp)
	jne L_252479
L_252647:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movl %r11d,0x30(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_252479
L_252649:
	cmpl %r13d,%r11d
	jne L_483802
L_252652:
	testq %rdx,%rdx
	jz L_483801
L_252653:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252654:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252655
.p2align 0x4
.long 0x3EFC
L_252655:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x78(%rbp)
L_252656:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2951:
	cmpq 0x18(%rbp),%r15
	jnl L_483789
L_252699:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x78(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2951
.p2align 0x4
L_483789:
L_252657:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252658
L_252697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252698
.p2align 0x4
.long 0x3F05
L_252698:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252658:
	movq 0x78(%rbp),%r15
	movq $0x1ED,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_252660
L_252696:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4985,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x40,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x4D8(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x4E0(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x60(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x68(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x4E8(%rbp),%r10
	movq %r10,0x28(%r11)
	movq %r15,0x30(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_252660:
	movq 0x4F8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x30(%rbp)
	jne L_252662
L_252663:
	cmpl $0x0,%r15d
	jl L_252662
L_252664:
	xorl %ecx,%ecx
loop_2952:
	cmpl 0x50(%rbp),%ecx
	jnl L_483791
L_252683:
	movl %ecx,%r14d
	incl %r14d
	movl %r14d,0x10(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x80(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x48(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x8(%r9),%r15
	movq 0x10(%r9),%r8
	movq %r8,0x18(%rbp)
	movq 0x0(%r11,%r14,1),%r13
	movl 0x0(%r13),%r9d
	movq 0x148(%rbp),%r14
	movq 0x10(%r14),%r13
	movq $0x2099,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	testl %r9d,%r9d
	jnz L_483790
L_252684:
	movq $0x2,0x58(%rbp)
	movq %r13,%r15
L_252685:
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x270,%rbp
	leaq (L_252686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483790:
L_252694:
	movq $0x1,0x58(%rbp)
	movq %r13,%r15
	jmp L_252685
.p2align 0x4
L_483791:
L_252665:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_483795
L_252666:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_252667:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252668
.p2align 0x4
.long 0x3EFD
L_252668:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x10(%rbp)
L_252669:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2953:
	cmpq 0x28(%rbp),%r15
	jnl L_483792
L_252679:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	movslq %r14d,%rsp
	movq %rsp,%r14
	movq %rsp,%rsi
	movq %rsp,%rdi
	imulq $0x28,%r14
	movq 0x40(%rbp),%rdx
	movq 0x0(%rdx,%r14,1),%rcx
	imulq $0x28,%rsi
	movq 0x8(%rdx,%rsi,1),%r14
	imulq $0x28,%rdi
	movq 0x10(%rdx,%rdi,1),%rsi
	imulq $0x28,%rsp
	movq %rsp,%rax
	movq 0x18(%rdx,%rax,1),%rsp
	movq 0x10(%rbp),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rbx
	movb $0x1,0x0(%rbx,%rdx,1)
	imulq $0x28,%r13
	movq %rcx,0x0(%rdi,%r13,1)
	movq %rdi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rbx,%r13,1)
	imulq $0x28,%r11
	movq %r14,0x8(%rdi,%r11,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rbx,%r14,1)
	imulq $0x28,%r10
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rdi,%r10,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rbx,%r14,1)
	imulq $0x28,%r9
	movq %rsi,0x18(%rdi,%r9,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rbx,%r14,1)
	imulq $0x28,%r8
	movq %rsp,0x20(%rdi,%r8,1)
	incq %r15
	jmp loop_2953
.p2align 0x4
L_483792:
L_252670:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252671
L_252677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252678
.p2align 0x4
.long 0x3F00
L_252678:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252671:
	movq 0x10(%rbp),%r15
	movq $0xB0B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x1B8(%rbp),%r14
	movq 0x10(%r14),%r13
	movb 0x0(%r13),%r11b
	movq 0x1C0(%rbp),%r14
	movq 0x10(%r14),%r13
	movb 0x0(%r13),%r10b
	movq $0x4489,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x20C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movzbl %r11b,%r14d
	movzbl %r10b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	movq %r15,0x18(%r13)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp L_252672
.p2align 0x4
L_483795:
L_252682:
	movq (globalObjptr+0x6E00)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_252669
.p2align 0x4
L_483801:
L_252701:
	movq (globalObjptr+0xF98)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_252656
.p2align 0x4
L_483802:
L_252651:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3F15
L_252798:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252799
L_252881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252882
.p2align 0x4
.long 0x3F29
L_252882:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252799:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_483805
L_252800:
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq (globalObjptr+0x10740)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483805:
L_252851:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x78(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x98(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x80(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x88(%rbp),%r10
	movq %r10,0x18(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x28,%r13
	movq 0x90(%rbp),%r11
	movq %r11,0x20(%r15,%r13,1)
	incq %r14
	movq %r14,0x50(%rbp)
	jmp loop_2945
.p2align 0x4
.long 0x3F2D
L_252955:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
	movq 0x748(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x738(%rbp),%r14
	movq %r14,0x740(%rbp)
	movq 0x730(%rbp),%r14
	movq %r14,0x748(%rbp)
	movq %r15,0x738(%rbp)
	addq $0x738,%rbp
	leaq (L_252956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3F43
L_253090:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253091
L_253100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x750,%rbp
	leaq (L_253101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253101
.p2align 0x4
.long 0x3F45
L_253101:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
L_253091:
	movq 0x148(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x718(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x748(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x728(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x8(%r14),%r15
	movq %r15,0x770(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x750(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x758(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x760(%rbp)
	addq $0x770,%rbp
	leaq (L_253092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3F48
L_253119:
	addq $0xFFFFFFFFFFFFF8E0,%rbp
	movl 0x720(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253120
L_253122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x720,%rbp
	leaq (L_253123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253123
.p2align 0x4
.long 0x3F49
L_253123:
	addq $0xFFFFFFFFFFFFF8E0,%rbp
L_253120:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r9d
	incl %r9d
	jo L_252474
L_253121:
	movq %r13,0x718(%rbp)
	movl %r9d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r11),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r10)
	movq 0x710(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq %r14,0x710(%rbp)
	jmp L_253068
.p2align 0x4
.long 0x3F4C
not_58:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movl 0x550(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253142
L_253177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253178
.p2align 0x4
.long 0x3F51
L_253178:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253142:
	movl 0x4(%rbp),%r14d
	testl %r14d,%r14d
	jz L_253137
L_253144:
	movq 0x190(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_483811
L_253145:
	movq 0x198(%rbp),%r14
	cmpb $0x2,0x0(%r14)
	je L_483810
L_253146:
	movq 0x520(%rbp),%r15
	jmp L_253138
.p2align 0x4
L_483810:
L_253147:
	movq 0x518(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x550,%rbp
	leaq (L_253148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
L_483811:
L_253176:
	movq 0x520(%rbp),%r15
	jmp L_253138
.p2align 0x4
.long 0x3F4C
rev_354:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq $0x1,%r15
	je L_483816
L_253184:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x548(%rbp)
	movq %r14,0x550(%rbp)
	movq $0x1,0x558(%rbp)
.p2align 0x4,,0x7
L_253185:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483815
.p2align 0x4,,0x7
L_253186:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x558(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x548(%rbp),%r14
	cmpq $0x1,%r14
	je L_483814
L_253187:
	movq %r15,0x558(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x548(%rbp)
	movq %r15,0x550(%rbp)
	jmp L_253185
.p2align 0x4
L_483814:
L_253189:
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_253190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483815:
L_253191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_253192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253192
.p2align 0x4
.long 0x3F50
L_253192:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	jmp L_253186
.p2align 0x4
L_483816:
L_253193:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_253189
.p2align 0x4
.long 0x4046
L_254875:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254876
L_255024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255025
.p2align 0x4
.long 0x4059
L_255025:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254876:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483858
L_254877:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_254878:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483857
.p2align 0x4,,0x7
L_254879:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_254880:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483817
L_254881:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_254878
.p2align 0x4
L_483817:
L_254882:
	movq %r15,0x30(%rbp)
L_254883:
	movq 0x530(%rbp),%r13
	cmpq $0x1,%r13
	je L_254890
L_254884:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_254885:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_254886:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483818
L_254887:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254885
.p2align 0x4
L_483818:
L_254888:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254890
L_255016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255017
.p2align 0x4
.long 0x4057
L_255017:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254890:
	movq 0x4E0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483819
L_254891:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_254892:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x558(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x558,%rbp
	leaq (L_254893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1993
.p2align 0x4
L_483819:
L_254897:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483852
L_254898:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_254899:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483851
.p2align 0x4,,0x7
L_254900:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_254901:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483820
L_254902:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_254899
.p2align 0x4
L_483820:
L_254903:
	movq %r15,0x30(%rbp)
L_254904:
	movq 0x538(%rbp),%r13
	cmpq $0x1,%r13
	je L_254911
L_254905:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_254906:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_254907:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483821
L_254908:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254906
.p2align 0x4
L_483821:
L_254909:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254911
L_255005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255006
.p2align 0x4
.long 0x4054
L_255006:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254911:
	movq 0x4F0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483822
L_254912:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_254913:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x558(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x558,%rbp
	leaq (L_254914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_483822:
L_254918:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483846
L_254919:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_254920:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483845
.p2align 0x4,,0x7
L_254921:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_254922:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483823
L_254923:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_254920
.p2align 0x4
L_483823:
L_254924:
	movq %r15,0x30(%rbp)
L_254925:
	movq 0x540(%rbp),%r13
	cmpq $0x1,%r13
	je L_254932
L_254926:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_254927:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_254928:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483824
L_254929:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254927
.p2align 0x4
L_483824:
L_254930:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254932
L_254994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254995
.p2align 0x4
.long 0x4051
L_254995:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254932:
	movq 0x500(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x508(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483825
L_254933:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_254934:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x558(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x558,%rbp
	leaq (L_254935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_483825:
L_254939:
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483840
L_254940:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_254941:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483839
.p2align 0x4,,0x7
L_254942:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_254943:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483826
L_254944:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_254941
.p2align 0x4
L_483826:
L_254945:
	movq %r15,0x30(%rbp)
L_254946:
	movq 0x548(%rbp),%r13
	cmpq $0x1,%r13
	je L_254953
L_254947:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_254948:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_254949:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483827
L_254950:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254948
.p2align 0x4
L_483827:
L_254951:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254953
L_254983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_254984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254984
.p2align 0x4
.long 0x404E
L_254984:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_254953:
	movq 0x510(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x518(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483828
L_254954:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_254955:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x538(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x538,%rbp
	leaq (L_254956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_483828:
L_254960:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x520(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_252479
L_254962:
	cmpl $0x0,%r13d
	jl L_252774
L_254963:
	movl $0x0,0x34(%rbp)
loop_2997:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483831
L_254964:
	movq 0x528(%rbp),%r15
	cmpq $0x1,%r15
	je L_483830
L_254965:
L_254966:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_483829
L_254967:
L_254968:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x268(%rbp)
	jmp L_252672
.p2align 0x4
L_483829:
L_254969:
	movq %r15,0x268(%rbp)
	jmp L_252672
.p2align 0x4
L_483830:
L_254970:
	movq 0x28(%rbp),%r14
	movq %r14,0x268(%rbp)
	jmp L_252672
.p2align 0x4
L_483831:
L_254971:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x520(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x8(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1052,%r13
	jne L_483832
L_254978:
	movq 0x8(%r15),%r13
	movq 0x0(%r11),%r15
	movq $0x20A1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x6D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_254973:
	movq %r15,0x540(%rbp)
	movq %r14,0x548(%rbp)
	movq (globalObjptr+0x1C00)(%rip),%r15
	movq %r15,0x538(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x538,%rbp
	leaq (L_254974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_483832:
	movq %r11,%r15
	jmp L_254973
.p2align 0x4
L_483839:
L_254988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254989
.p2align 0x4
.long 0x404F
L_254989:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_254942
.p2align 0x4
L_483840:
L_254990:
	movq $0x1,0x30(%rbp)
	jmp L_254946
.p2align 0x4
L_483845:
L_254999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255000
.p2align 0x4
.long 0x4052
L_255000:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_254921
.p2align 0x4
L_483846:
L_255001:
	movq $0x1,0x30(%rbp)
	jmp L_254925
.p2align 0x4
L_483851:
L_255010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255011
.p2align 0x4
.long 0x4055
L_255011:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_254900
.p2align 0x4
L_483852:
L_255012:
	movq $0x1,0x30(%rbp)
	jmp L_254904
.p2align 0x4
L_483857:
L_255021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255022
.p2align 0x4
.long 0x4058
L_255022:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_254879
.p2align 0x4
L_483858:
L_255023:
	movq $0x1,0x30(%rbp)
	jmp L_254883
.p2align 0x4
.long 0x3F63
L_253341:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_253250
.p2align 0x4
.long 0x3EFF
L_252676:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4030
L_254736:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254737
L_254742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254743
.p2align 0x4
.long 0x4034
L_254743:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254737:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_254738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x4038
L_254759:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254760
L_254789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254790
.p2align 0x4
.long 0x403F
L_254790:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254760:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483861
L_254761:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_254758
.p2align 0x4
L_483861:
L_254762:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_254763:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483863
.p2align 0x4,,0x7
L_254764:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483862
L_254765:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_254763
.p2align 0x4
L_483862:
L_254766:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483863:
L_254787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254788
.p2align 0x4
.long 0x403F
L_254788:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_254764
.p2align 0x4
.long 0x403B
L_254778:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254779
L_254780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254781
.p2align 0x4
.long 0x403C
L_254781:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254779:
	movq $0x1,%r14
	movq 0x58(%rbp),%r15
	jmp L_254735
.p2align 0x4
.long 0x4040
L_254796:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254797
L_254853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254854
.p2align 0x4
.long 0x4043
L_254854:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254797:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483866
L_254798:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_254795
.p2align 0x4
L_483866:
L_254799:
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_254800:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483868
.p2align 0x4,,0x7
L_254801:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483867
L_254802:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_254800
.p2align 0x4
L_483867:
L_254803:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483868:
L_254851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254852
.p2align 0x4
.long 0x4043
L_254852:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_254801
.p2align 0x4
.long 0x4030
L_254823:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254824
L_254839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254840
.p2align 0x4
.long 0x403E
L_254840:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254824:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254825:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_252474
L_254826:
	cmpq $0x1,%r14
	je L_483870
L_254827:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254825
.p2align 0x4
L_483870:
L_254828:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254829
L_254837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254838
.p2align 0x4
.long 0x403D
L_254838:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254829:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483871
L_254830:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_254831:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x270(%rbp)
	movq (globalObjptr+0xA450)(%rip),%r15
	movq %r15,0x278(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_254832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_483871:
L_254836:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254831
.p2align 0x4
.long 0x402F
L_254726:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254727
L_254747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254748
.p2align 0x4
.long 0x4036
L_254748:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254727:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x270(%rbp)
	movl $0x2,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_254728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x402C
L_254712:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x3C(%rbp)
	jmp loop_2995
.p2align 0x4
.long 0x401F
L_254578:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254579
L_254596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_254597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254597
.p2align 0x4
.long 0x4022
L_254597:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_254579:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x548(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x568(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254580:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_254581:
	cmpq $0x1,%r14
	je L_483876
L_254582:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254580
.p2align 0x4
L_483876:
L_254583:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254584
L_254594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_254595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254595
.p2align 0x4
.long 0x4021
L_254595:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_254584:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_483877
L_254585:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x568(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x548(%rbp)
	jmp error_10
.p2align 0x4
L_483877:
L_254593:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x548(%rbp)
	jmp error_10
.p2align 0x4
.long 0x401E
L_254586:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_252474
L_254587:
	movl %r13d,0x0(%r14)
	movq %r15,0x568(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x580(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x588(%rbp)
	addq $0x568,%rbp
	leaq (L_254588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x4026
tuple_3:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254663
L_254671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_254672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254672
.p2align 0x4
.long 0x4027
L_254672:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_254663:
	movq 0x548(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_252479
L_254665:
	cmpl $0x1,%r13d
	jne L_483883
L_254668:
	cmpq $0x0,%r15
	jna L_252521
L_254670:
	movq 0x0(%r14),%r15
L_254667:
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x568(%rbp),%r13
	movq %r13,0x548(%rbp)
	movq %r14,%r15
	jmp done_18
.p2align 0x4
L_483883:
L_254666:
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,%r15
	jmp L_254667
.p2align 0x4
.long 0x3FFE
L_254285:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0x107F0)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_254286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FA8
L_253754:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FAD
L_253795:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x10(%rbp)
	jne L_252479
L_253797:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movl %r15d,0x40(%rbp)
	movslq %r15d,%r11
	cmpq %r11,%r14
	movq %r14,0x30(%rbp)
	jne L_252479
L_253799:
	cmpl %r15d,%r13d
	jne L_252651
L_253801:
	testq %rdx,%rdx
	jz L_483900
L_253802:
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253803:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253804
.p2align 0x4
.long 0x3FAE
L_253804:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq %rax,0x78(%rbp)
L_253805:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2984:
	cmpq 0x18(%rbp),%r15
	jnl L_483886
L_253872:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x78(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2984
.p2align 0x4
L_483886:
L_253806:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253807
L_253870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253871
.p2align 0x4
.long 0x3FB6
L_253871:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253807:
	movq 0x78(%rbp),%r15
	movq $0x1ED,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_253809
L_253869:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4985,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x40,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x4D8(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x4E0(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x60(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x68(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x4E8(%rbp),%r10
	movq %r10,0x28(%r11)
	movq %r15,0x30(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_253809:
	movq 0x538(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x28(%rbp)
	jne L_253811
L_253812:
	cmpl 0x40(%rbp),%r15d
	jne L_483895
L_253814:
	movl $0x0,0x10(%rbp)
loop_2985:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x4(%rbp)
	je L_483890
L_253815:
	movslq %r15d,%r14
	cmpq 0x500(%rbp),%r14
	jnb L_252521
L_253817:
	movq %r14,%r15
	imulq $0x28,%r15
	movq 0x4F8(%rbp),%r13
	movq 0x18(%r13,%r15,1),%r11
	movq %r11,0x18(%rbp)
	cmpq 0x8(%rbp),%r14
	jnb L_252521
L_253819:
	movq %r14,%r15
	imulq $0x18,%r15
	movq 0x510(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x40(%rbp)
	cmpq 0x30(%rbp),%r14
	jnb L_252521
L_253821:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x148(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x58(%rbp)
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x8(%r14),%r15
	movq %r15,0x520(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x520,%rbp
	leaq (L_253822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483890:
L_253857:
	movl 0x2C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_483894
L_253858:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_252681
L_253859:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_253860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253860
.p2align 0x4
.long 0x3FB4
L_253860:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq %rax,0x40(%rbp)
L_253861:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2986:
	cmpq 0x38(%rbp),%r15
	jnl L_483891
L_253866:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq %r10,%r14
	imulq $0x18,%r14
	movq 0x510(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	imulq $0x18,%r10
	movq 0x10(%r9,%r10,1),%r14
	movq 0x40(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r13
	movq %r8,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r14,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2986
.p2align 0x4
L_483891:
L_253862:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253863
L_253864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253865
.p2align 0x4
.long 0x3FB5
L_253865:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253863:
	movq 0x40(%rbp),%r15
	movq $0xB33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x20C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp L_252672
.p2align 0x4
L_483894:
L_253868:
	movq (globalObjptr+0x6E48)(%rip),%r14
	movq %r14,0x40(%rbp)
	jmp L_253861
.p2align 0x4
L_483895:
L_253811:
	movq (globalObjptr+0x6E40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483900:
L_253874:
	movq (globalObjptr+0xF98)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_253805
.p2align 0x4
.long 0x3FC1
L_253926:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,0x558(%rbp)
	movq 0x198(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq 0x190(%rbp),%r14
	movq %r14,0x578(%rbp)
	movl 0x180(%rbp),%r14d
	movl %r14d,0x580(%rbp)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x588(%rbp)
	movq 0x550(%rbp),%r14
	movq %r14,0x590(%rbp)
	movq 0x530(%rbp),%r14
	movq %r14,0x598(%rbp)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x568(%rbp),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x560(%rbp),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x1C8(%rbp),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x5C8(%rbp)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x5D0(%rbp)
	movq %r15,0x5D8(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x560(%rbp)
	movl $0x0,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_253927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_1
.p2align 0x4
.long 0x3FD2
L_253993:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253994
L_254049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_254050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254050
.p2align 0x4
.long 0x3FDF
L_254050:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_253994:
	movq 0x580(%rbp),%r15
	cmpq $0x1,%r15
	je L_483904
L_253995:
	movq 0x8(%r15),%r14
	movq %r14,0x588(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x590(%rbp)
	movq (globalObjptr+0x107C0)(%rip),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_253996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483904:
L_254027:
	incl 0x548(%rbp)
	jmp loop_2989
.p2align 0x4
.long 0x3FE4
L_254077:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254078
L_254193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254194
.p2align 0x4
.long 0x3FF7
L_254194:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254078:
	movq 0x580(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x798(%rbp)
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x790(%rbp)
	movq 0x588(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	addq $0x790,%rbp
	leaq (L_254079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3FE4
L_254204:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x790(%rbp)
	movq %r15,0x798(%rbp)
	addq $0x790,%rbp
	leaq (seq_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x4011
L_254467:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_254468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x4007
L_254357:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254358
L_254440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_254441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254441
.p2align 0x4
.long 0x4010
L_254441:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_254358:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x518(%rbp),%r14
	cmpq $0x1,%r14
	je L_483907
L_254359:
	movq %r15,0x530(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x518(%rbp)
	jmp L_254356
.p2align 0x4
L_483907:
L_254360:
	movq 0x530(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq $0x1,0x550(%rbp)
.p2align 0x4,,0x7
L_254361:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483909
.p2align 0x4,,0x7
L_254362:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x530(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x518(%rbp),%r14
	cmpq $0x1,%r14
	je L_254365
L_254363:
	movq %r15,0x550(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x518(%rbp)
	movq %r15,0x530(%rbp)
	jmp L_254361
.p2align 0x4
L_483909:
L_254438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_254439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254439
.p2align 0x4
.long 0x4010
L_254439:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	jmp L_254362
.p2align 0x4
.long 0x4008
seq_2:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x518(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254366
L_254436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254437
.p2align 0x4
.long 0x400F
L_254437:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254366:
	movq 0x518(%rbp),%r13
	cmpq $0x1,%r13
	je L_483919
L_254367:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254368:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_254369:
	cmpq $0x1,%r14
	je L_483911
L_254370:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254368
.p2align 0x4
L_483911:
L_254371:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254372
L_254433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254434
.p2align 0x4
.long 0x400F
L_254434:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254372:
	movl 0x4(%rbp),%ecx
L_254373:
	testl %ecx,%ecx
	jz L_483916
L_254374:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
L_254375:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x518(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x528(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254376:
	addl 0x0(%r14),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_254377:
	cmpq $0x1,%r15
	je L_483912
L_254378:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_254376
.p2align 0x4
L_483912:
L_254379:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254380
L_254430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254431
.p2align 0x4
.long 0x400E
L_254431:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254380:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483913
L_254381:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
L_254382:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x518(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x508(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_254383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_483913:
L_254429:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254382
.p2align 0x4
L_483916:
L_254432:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_254375
.p2align 0x4
L_483919:
L_254435:
	xorl %ecx,%ecx
	jmp L_254373
.p2align 0x4
.long 0x400A
L_254392:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movl 0x578(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254393
L_254422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_254423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254423
.p2align 0x4
.long 0x400D
L_254423:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_254393:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x568(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x520(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x568(%rbp)
	movq 0x558(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_254394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3F90
L_253565:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253566
L_253703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253704
.p2align 0x4
.long 0x3FA1
L_253704:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253566:
	movq 0x520(%rbp),%r15
	cmpq $0x1,%r15
	je L_253571
L_253567:
L_253568:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_483958
L_253569:
L_253570:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x28(%rbp)
L_253571:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483957
L_253572:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253573:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483956
.p2align 0x4,,0x7
L_253574:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_253575:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483922
L_253576:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253573
.p2align 0x4
L_483922:
L_253577:
	movq %r15,0x30(%rbp)
L_253578:
	movq 0x528(%rbp),%r13
	cmpq $0x1,%r13
	je L_253585
L_253579:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253580:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_253581:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483923
L_253582:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253580
.p2align 0x4
L_483923:
L_253583:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253585
L_253693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253694
.p2align 0x4
.long 0x3F9F
L_253694:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253585:
	movq 0x4E0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483924
L_253586:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253587:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x550(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x550,%rbp
	leaq (L_253588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1993
.p2align 0x4
L_483924:
L_253592:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483951
L_253593:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253594:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483950
.p2align 0x4,,0x7
L_253595:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_253596:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483925
L_253597:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253594
.p2align 0x4
L_483925:
L_253598:
	movq %r15,0x30(%rbp)
L_253599:
	movq 0x530(%rbp),%r13
	cmpq $0x1,%r13
	je L_253606
L_253600:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253601:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_253602:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483926
L_253603:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253601
.p2align 0x4
L_483926:
L_253604:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253606
L_253682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253683
.p2align 0x4
.long 0x3F9C
L_253683:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253606:
	movq 0x4F0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483927
L_253607:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253608:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x550(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x550,%rbp
	leaq (L_253609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_483927:
L_253613:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483945
L_253614:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253615:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483944
.p2align 0x4,,0x7
L_253616:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_253617:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483928
L_253618:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253615
.p2align 0x4
L_483928:
L_253619:
	movq %r15,0x30(%rbp)
L_253620:
	movq 0x538(%rbp),%r13
	cmpq $0x1,%r13
	je L_253627
L_253621:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253622:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_253623:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483929
L_253624:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253622
.p2align 0x4
L_483929:
L_253625:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253627
L_253671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253672
.p2align 0x4
.long 0x3F99
L_253672:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253627:
	movq 0x500(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x508(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483930
L_253628:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253629:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x550(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x550,%rbp
	leaq (L_253630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_483930:
L_253634:
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483939
L_253635:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483938
.p2align 0x4,,0x7
L_253637:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253662
L_253638:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483931
L_253639:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253636
.p2align 0x4
L_483931:
L_253640:
	movq %r15,0x30(%rbp)
L_253641:
	movq 0x540(%rbp),%r13
	cmpq $0x1,%r13
	je L_253648
L_253642:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253643:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_253662
L_253644:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483932
L_253645:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253643
.p2align 0x4
L_483932:
L_253646:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253648
L_253659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_253660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253660
.p2align 0x4
.long 0x3F96
L_253660:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_253648:
	movq 0x510(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x518(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483933
L_253649:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253650:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x4E8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4E8,%rbp
	leaq (L_253651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_483933:
L_253655:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp L_252672
.p2align 0x4
L_483938:
L_253665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253666
.p2align 0x4
.long 0x3F97
L_253666:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_253637
.p2align 0x4
L_483939:
L_253667:
	movq $0x1,0x30(%rbp)
	jmp L_253641
.p2align 0x4
L_483944:
L_253676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253677
.p2align 0x4
.long 0x3F9A
L_253677:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_253616
.p2align 0x4
L_483945:
L_253678:
	movq $0x1,0x30(%rbp)
	jmp L_253620
.p2align 0x4
L_483950:
L_253687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253688
.p2align 0x4
.long 0x3F9D
L_253688:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_253595
.p2align 0x4
L_483951:
L_253689:
	movq $0x1,0x30(%rbp)
	jmp L_253599
.p2align 0x4
L_483956:
L_253698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253699
.p2align 0x4
.long 0x3FA0
L_253699:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_253574
.p2align 0x4
L_483957:
L_253700:
	movq $0x1,0x30(%rbp)
	jmp L_253578
.p2align 0x4
L_483958:
L_253701:
	movq %r15,0x28(%rbp)
	jmp L_253571
.p2align 0x4
.long 0x3F5C
L_253295:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_252474
L_253296:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x4F8(%rbp)
	movq %r15,0x500(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3F66
L_253352:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
.long 0x3F62
L_253339:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253340
L_253342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253343
.p2align 0x4
.long 0x3F64
L_253343:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253340:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3F7B
L_253454:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x107A8)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F57
L_253261:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253262
L_253263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_253264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253264
.p2align 0x4
.long 0x3F58
L_253264:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_253262:
	movq 0x240(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x248(%rbp),%r14
	movq 0x268(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x248(%rbp)
	jmp loop_2962
.p2align 0x4
.long 0x3EF6
L_252605:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252606
L_252724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252725
.p2align 0x4
.long 0x3F0D
L_252725:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252606:
	movq $0x3CB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_252607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3F01
L_252686:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252687
L_252692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252693
.p2align 0x4
.long 0x3F04
L_252693:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252687:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_252688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3F16
L_252801:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252802
L_252878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252879
.p2align 0x4
.long 0x3F28
L_252879:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252802:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10748)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F2E
L_252956:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq 0x738(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252957
L_253052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_253053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253053
.p2align 0x4
.long 0x3F40
L_253053:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_252957:
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x730(%rbp)
	movq 0x6F0(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x728(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x748(%rbp)
	addq $0x730,%rbp
	leaq (L_252958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3F44
L_253092:
	addq $0xFFFFFFFFFFFFF890,%rbp
	movl 0x770(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253093
L_253098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x770,%rbp
	leaq (L_253099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253099
.p2align 0x4
.long 0x3F46
L_253099:
	addq $0xFFFFFFFFFFFFF890,%rbp
L_253093:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x760(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x748(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x740(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x760(%rbp)
	movq 0x750(%rbp),%r14
	movq %r14,0x768(%rbp)
	movq %r15,0x750(%rbp)
	addq $0x750,%rbp
	leaq (L_253094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3F4C
L_253148:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (toString_355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximatePrefix_0
.p2align 0x4
.long 0x3F4C
L_253190:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	jmp L_253133
.p2align 0x4
.long 0x4047
L_254893:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254894
L_255013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255014
.p2align 0x4
.long 0x4056
L_255014:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254894:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_254897
L_254895:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_254892
.p2align 0x4
.long 0x4048
L_254914:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254915
L_255002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_255003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255003
.p2align 0x4
.long 0x4053
L_255003:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254915:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_254918
L_254916:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_254913
.p2align 0x4
.long 0x4049
L_254935:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254936
L_254991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254992
.p2align 0x4
.long 0x4050
L_254992:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254936:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_254939
L_254937:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_254934
.p2align 0x4
.long 0x404A
L_254956:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254957
L_254980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_254981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254981
.p2align 0x4
.long 0x404D
L_254981:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_254957:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_254960
L_254958:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_254955
.p2align 0x4
.long 0x404B
L_254974:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254975
L_254976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_254977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254977
.p2align 0x4
.long 0x404C
L_254977:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_254975:
	incl 0x34(%rbp)
	jmp loop_2997
.p2align 0x4
.long 0x4032
L_254738:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254739
L_254740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254741
.p2align 0x4
.long 0x4033
L_254741:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254739:
	incl 0x34(%rbp)
	jmp loop_2996
.p2align 0x4
.long 0x4039
L_254767:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_254768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x4041
L_254804:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_254805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x403B
L_254832:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254833
L_254834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254835
.p2align 0x4
.long 0x403C
L_254835:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254833:
	movq $0x1,%r14
	movq 0x58(%rbp),%r15
	jmp L_254735
.p2align 0x4
.long 0x4030
L_254728:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_254729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4020
L_254588:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_483980
L_254589:
	movq $0x1,0x568(%rbp)
	movl $0x0,0x570(%rbp)
	addq $0x568,%rbp
	leaq (L_254590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_483980:
L_252703:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3FFF
L_254286:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254287
L_254321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_254322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254322
.p2align 0x4
.long 0x4002
L_254322:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_254287:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x530(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x520(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x540(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254288:
	addl 0x0(%r15),%ecx
	movl %ecx,0x518(%rbp)
	jo L_252474
L_254289:
	cmpq $0x1,%r14
	je L_483981
L_254290:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254288
.p2align 0x4
L_483981:
L_254291:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254292
L_254319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_254320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254320
.p2align 0x4
.long 0x4004
L_254320:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_254292:
	movl 0x518(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483982
L_254293:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x540(%rbp),%r14
	movq %r14,0x0(%r15)
L_254294:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x518(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_254295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483982:
L_254318:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254294
.p2align 0x4
.long 0x3FA8
L_253755:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253756
L_253896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253897
.p2align 0x4
.long 0x3FBE
L_253897:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253756:
	movq $0x3CB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x548(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_253757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3FAF
L_253822:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movl 0x520(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253823
L_253855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_253856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253856
.p2align 0x4
.long 0x3FB3
L_253856:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_253823:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x520(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x520,%rbp
	leaq (L_253824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3FC2
L_253927:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253928
L_253990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253991
.p2align 0x4
.long 0x3FD1
L_253991:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_253928:
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x560(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x560,%rbp
	leaq (L_253929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3FD3
L_253996:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253997
L_254046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_254047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254047
.p2align 0x4
.long 0x3FDE
L_254047:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_253997:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x598(%rbp)
	addq $0x18,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107C8)(%rip),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_253998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FE4
L_254079:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254080
L_254191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254192
.p2align 0x4
.long 0x3FF7
L_254192:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254080:
	movq 0x588(%rbp),%r15
	cmpq $0x1,%r15
	je L_483990
L_254081:
	movq 0x8(%r15),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x5C8(%rbp)
	movq 0x570(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x5D0(%rbp)
	movq (globalObjptr+0x107D0)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483990:
L_254121:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
	jmp L_254122
.p2align 0x4
.long 0x3FE4
seq_1:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254205
L_254248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254249
.p2align 0x4
.long 0x3FF7
L_254249:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254205:
	movq 0x588(%rbp),%r13
	cmpq $0x1,%r13
	je L_483996
L_254206:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254207:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_252474
L_254208:
	cmpq $0x1,%r14
	je L_483992
L_254209:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254207
.p2align 0x4
L_483992:
L_254210:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254211
L_254245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254246
.p2align 0x4
.long 0x3FF7
L_254246:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254211:
	movl 0x184(%rbp),%ecx
L_254212:
	testl %ecx,%ecx
	jz L_483993
L_254213:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
L_254214:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x790(%rbp)
	addq $0x790,%rbp
	leaq (toString_357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximatePrefix_0
.p2align 0x4
L_483993:
L_254244:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_254214
.p2align 0x4
L_483996:
L_254247:
	xorl %ecx,%ecx
	jmp L_254212
.p2align 0x4
.long 0x4012
L_254468:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_254469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4006
L_254383:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x528(%rbp)
	movl 0x560(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254384
L_254427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254428
.p2align 0x4
.long 0x400F
L_254428:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254384:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x528(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_252474
L_254385:
	movl %r13d,0x0(%r14)
	movq %r15,0x558(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x570(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x558,%rbp
	leaq (L_254386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x4007
L_254394:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254395
L_254420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254421
.p2align 0x4
.long 0x400C
L_254421:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254395:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_252898
L_254396:
	movq %r15,0x0(%r13)
	movq 0x528(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_484009
L_254397:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_254399:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_254400
L_254414:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_484005
L_254400:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_254401:
	cmpq $0x1,%r15
	je L_484000
L_254402:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_254399
.p2align 0x4
L_484000:
L_254403:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254404
L_254412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_254413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254413
.p2align 0x4
.long 0x400C
L_254413:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_254404:
	movl 0x4(%rbp),%ecx
L_254405:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252909
L_254406:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_254408
L_254411:
	movl %ecx,0x0(%r15)
L_254408:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x528(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_254409:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x540(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x520(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x560(%rbp)
	addq $0x558,%rbp
	leaq (L_254410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2021
.p2align 0x4
L_484005:
L_254415:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_252909
L_254416:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_254409
L_254418:
	movl %ecx,0x0(%r14)
	jmp L_254409
.p2align 0x4
L_484009:
L_254419:
	xorl %ecx,%ecx
	jmp L_254405
.p2align 0x4
.long 0x3F91
L_253588:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253589
L_253690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253691
.p2align 0x4
.long 0x3F9E
L_253691:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253589:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253592
L_253590:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253587
.p2align 0x4
.long 0x3F92
L_253609:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253610
L_253679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253680
.p2align 0x4
.long 0x3F9B
L_253680:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253610:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253613
L_253611:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253608
.p2align 0x4
.long 0x3F93
L_253630:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253631
L_253668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253669
.p2align 0x4
.long 0x3F98
L_253669:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253631:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253634
L_253632:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253629
.p2align 0x4
.long 0x3F94
L_253651:
	addq $0xFFFFFFFFFFFFFB18,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253652
L_253656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4E8,%rbp
	leaq (L_253657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253657
.p2align 0x4
.long 0x3F95
L_253657:
	addq $0xFFFFFFFFFFFFFB18,%rbp
L_253652:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253655
L_253653:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253650
.p2align 0x4
.long 0x3F5D
L_253297:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253298
L_253507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253508
.p2align 0x4
.long 0x3F5E
L_253508:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253298:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_253300
.p2align 0x4
.long 0x3F67
L_253353:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253354
L_253422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253423
.p2align 0x4
.long 0x3F76
L_253423:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253354:
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3F7C
L_253455:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
.long 0x3EF7
L_252607:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_252608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F02
L_252688:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252689
L_252690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252691
.p2align 0x4
.long 0x3F03
L_252691:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252689:
	movl 0x10(%rbp),%ecx
	jmp loop_2952
.p2align 0x4
.long 0x3F17
L_252803:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252804
L_252876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252877
.p2align 0x4
.long 0x3F26
L_252877:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252804:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252805:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_252806:
	cmpq $0x1,%r14
	je L_484024
L_252807:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252805
.p2align 0x4
L_484024:
L_252808:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252809
L_252874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252875
.p2align 0x4
.long 0x3F27
L_252875:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252809:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484025
L_252810:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
L_252811:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF468)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484025:
L_252873:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252811
.p2align 0x4
.long 0x3F2F
L_252958:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movq 0x730(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	cmpq $0x1,%r15
	je L_484029
L_252959:
	movq 0x8(%r15),%r14
	movq %r14,0x710(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x728(%rbp)
	movq (globalObjptr+0x10750)(%rip),%r15
	movq %r15,0x738(%rbp)
	addq $0x738,%rbp
	leaq (L_252960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484029:
L_253000:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x730(%rbp)
	addq $0x730,%rbp
	leaq (L_253001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3F43
L_253094:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253095
L_253096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x750,%rbp
	leaq (L_253097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253097
.p2align 0x4
.long 0x3F45
L_253097:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
L_253095:
	movq $0x1137,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x718(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x740(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x730(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x738(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x738(%rbp)
	jmp loop_2960
.p2align 0x4
.long 0x3F4C
toString_355:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq $0x1,0x550(%rbp)
	movq %r15,0x558(%rbp)
	addq $0x550,%rbp
	leaq (rev_353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x403A
L_254768:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254769
L_254785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254786
.p2align 0x4
.long 0x403E
L_254786:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254769:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254770:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_252474
L_254771:
	cmpq $0x1,%r14
	je L_484031
L_254772:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254770
.p2align 0x4
L_484031:
L_254773:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254774
L_254783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254784
.p2align 0x4
.long 0x403D
L_254784:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254774:
	movq 0x70(%rbp),%r15
	movl 0x50(%rbp),%ecx
	jmp L_254775
.p2align 0x4
.long 0x4039
L_254805:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254806
L_254849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254850
.p2align 0x4
.long 0x403F
L_254850:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254806:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254807:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_252474
L_254808:
	cmpq $0x1,%r14
	je L_484035
L_254809:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254807
.p2align 0x4
L_484035:
L_254810:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254811
L_254847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254848
.p2align 0x4
.long 0x4042
L_254848:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254811:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484036
L_254812:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
L_254813:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_254814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484036:
L_254846:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254813
.p2align 0x4
.long 0x4031
L_254729:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254730
L_254745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254746
.p2align 0x4
.long 0x4035
L_254746:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254730:
	movq 0x50(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_254731
.p2align 0x4
.long 0x4020
L_254590:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r14
	movq %r14,0x548(%rbp)
	movq 0x118(%rbp),%r15
	jmp L_254591
.p2align 0x4
.long 0x3FFE
L_254295:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_254296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3FA9
L_253757:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FB0
L_253824:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253825
L_253853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_253854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253854
.p2align 0x4
.long 0x3FB2
L_253854:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_253825:
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_252898
L_253826:
	movq %r15,0x0(%r14)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_484052
L_253827:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x40(%rbp)
	movl $0x0,0x14(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_253829:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_253830
L_253844:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_484047
L_253830:
	movl 0x14(%rbp),%r14d
	incl %r14d
	movl %r14d,0x28(%rbp)
	jo L_252474
L_253831:
	cmpq $0x1,%r15
	je L_484041
L_253832:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,0x40(%rbp)
	movl %r14d,0x14(%rbp)
	jmp L_253829
.p2align 0x4
L_484041:
L_253833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253834
L_253842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_253843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253843
.p2align 0x4
.long 0x3FB1
L_253843:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_253834:
	movl 0x28(%rbp),%ecx
L_253835:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_252909
L_253836:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_253838
L_253841:
	movl %ecx,0x0(%r15)
L_253838:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_253839:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movl 0x10(%rbp),%r15d
	incl %r15d
	jo L_252474
L_253840:
	movl %r15d,0x10(%rbp)
	jmp loop_2985
.p2align 0x4
L_484047:
L_253845:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253846
L_253850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_253851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253851
.p2align 0x4
.long 0x3FB2
L_253851:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_253846:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_252909
L_253847:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_253839
L_253849:
	movl %r14d,0x0(%r13)
	jmp L_253839
.p2align 0x4
L_484052:
L_253852:
	xorl %ecx,%ecx
	jmp L_253835
.p2align 0x4
.long 0x3FC3
L_253929:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253930
L_253988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253989
.p2align 0x4
.long 0x3FD1
L_253989:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_253930:
	movq 0x548(%rbp),%r15
	cmpq $0x1,%r15
	je L_484055
L_253931:
	movq 0x8(%r15),%r14
	movq %r14,0x558(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x540(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x568(%rbp)
	movq (globalObjptr+0x107B0)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_253932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484055:
L_253963:
	movq 0x550(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE8F,%r15
	je L_484056
L_253964:
	movq 0x1E0(%rbp),%r15
L_253965:
	movq 0x510(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x518(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x520(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x528(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	incq %r13
	movq %r13,0x518(%rbp)
	jmp loop_2982
.p2align 0x4
L_484056:
L_253966:
	movq 0x550(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq $0x63B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_253965
.p2align 0x4
.long 0x3FD4
L_253998:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253999
L_254044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_254045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254045
.p2align 0x4
.long 0x3FDB
L_254045:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_253999:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5A0(%rbp)
	addq $0x18,%r12
	movq 0x588(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254000:
	addl 0x0(%r15),%ecx
	movl %ecx,0x54C(%rbp)
	jo L_252474
L_254001:
	cmpq $0x1,%r14
	je L_484058
L_254002:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254000
.p2align 0x4
L_484058:
L_254003:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254004
L_254042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_254043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254043
.p2align 0x4
.long 0x3FDD
L_254043:
	addq $0xFFFFFFFFFFFFFA50,%rbp
L_254004:
	movl 0x54C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484059
L_254005:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
L_254006:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x588(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x598(%rbp)
	addq $0x18,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE288)(%rip),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_254007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484059:
L_254041:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254006
.p2align 0x4
.long 0x3FE5
L_254082:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x570(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254083
L_254188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254189
.p2align 0x4
.long 0x3FF6
L_254189:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254083:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x588(%rbp)
	addq $0x18,%r12
	movq 0x5C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107D8)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FE4
toString_357:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq $0x1,0x790(%rbp)
	movq %r15,0x798(%rbp)
	addq $0x790,%rbp
	leaq (rev_355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4012
L_254469:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254470
L_254514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_254515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254515
.p2align 0x4
.long 0x4016
L_254515:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_254470:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x560(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x568(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254471:
	addl 0x0(%r15),%ecx
	movl %ecx,0x52C(%rbp)
	jo L_252474
L_254472:
	cmpq $0x1,%r14
	je L_484064
L_254473:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254471
.p2align 0x4
L_484064:
L_254474:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254475
L_254512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_254513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254513
.p2align 0x4
.long 0x4018
L_254513:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_254475:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484065
L_254476:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x568(%rbp),%r14
	movq %r14,0x0(%r15)
L_254477:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x558(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10808)(%rip),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_254478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484065:
L_254511:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254477
.p2align 0x4
.long 0x4009
L_254386:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_254388
.p2align 0x4
.long 0x400B
L_254410:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x500(%rbp),%r14
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x530(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x518(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x508(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x520(%rbp),%r9
	movq %r9,0x18(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x28,%r13
	movq %r10,0x20(%r15,%r13,1)
	incq %r14
	movq %r14,0x500(%rbp)
	jmp loop_2980
.p2align 0x4
.long 0x3F68
L_253355:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_253397
L_253356:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq (globalObjptr+0x10788)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F7D
L_253456:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x500(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253457
L_253476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253477
.p2align 0x4
.long 0x3F81
L_253477:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253457:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253458:
	addl 0x0(%r15),%ecx
	movl %ecx,0x70(%rbp)
	jo L_252474
L_253459:
	cmpq $0x1,%r14
	je L_484071
L_253460:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253458
.p2align 0x4
L_484071:
L_253461:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253462
L_253474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253475
.p2align 0x4
.long 0x3F80
L_253475:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253462:
	movl 0x70(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484073
L_253463:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_253464:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_253465:
	movl %r13d,0x0(%r15)
	movq %r14,0x4F8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484073:
L_253473:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253464
.p2align 0x4
.long 0x3EF8
L_252608:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252609
L_252722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252723
.p2align 0x4
.long 0x3F0C
L_252723:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252609:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_484077
L_252610:
	movq 0x8(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_252611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3949
.p2align 0x4
L_484077:
L_252721:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_252618:
	testl %ecx,%ecx
	jz L_484082
L_252619:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_252620:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252621:
	addl 0x0(%r14),%ecx
	movl %ecx,0x54(%rbp)
	jo L_252474
L_252622:
	cmpq $0x1,%r15
	je L_484078
L_252623:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252621
.p2align 0x4
L_484078:
L_252624:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252625
L_252714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252715
.p2align 0x4
.long 0x3F09
L_252715:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252625:
	movl 0x54(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484079
L_252626:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
L_252627:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_252628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484079:
L_252713:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252627
.p2align 0x4
L_484082:
L_252716:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_252620
.p2align 0x4
.long 0x3F18
L_252812:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252813
L_252871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252872
.p2align 0x4
.long 0x3F26
L_252872:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252813:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252814:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_252815:
	cmpq $0x1,%r14
	je L_484084
L_252816:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252814
.p2align 0x4
L_484084:
L_252817:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252818
L_252869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252870
.p2align 0x4
.long 0x3F25
L_252870:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252818:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484085
L_252819:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
L_252820:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484085:
L_252868:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252820
.p2align 0x4
.long 0x3F30
L_252960:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq 0x738(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252961
L_253049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_253050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253050
.p2align 0x4
.long 0x3F3F
L_253050:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_252961:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x730(%rbp)
	addq $0x18,%r12
	movq 0x728(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10758)(%rip),%r15
	movq %r15,0x740(%rbp)
	addq $0x740,%rbp
	leaq (L_252962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F2F
L_253001:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movl 0x730(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253002
L_253026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x730,%rbp
	leaq (L_253027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253027
.p2align 0x4
.long 0x3F38
L_253027:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
L_253002:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x6F0(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x1B8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r11b
	movq 0x1C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r10b
	movq 0x1C8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r9b
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x720(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x708(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r8d
	movslq %r8d,%rsp
	cmpq %r13,%rsp
	jne L_252479
L_253004:
	testl %r8d,%r8d
	jz L_484095
L_253005:
	movq $0x47AF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0x18(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x10(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq $0x1D29,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x10(%rsp)
	movq %r15,0x30(%rsp)
	addq $0x40,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esi
	movzbl %r11b,%r8d
	shll $0x8,%r8d
	orl %r8d,%esi
	movzbl %r10b,%r11d
	shll $0x10,%r11d
	orl %r11d,%esi
	movzbl %r9b,%r11d
	shll $0x18,%r11d
	orl %r11d,%esi
	movl %esi,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq (globalObjptr+0x10768)(%rip),%r11
	movq %r11,0x8(%rsp)
	movq 0x6F8(%rbp),%r11
	movq %r11,0x18(%rsp)
	movq 0x718(%rbp),%r11
	movq %r11,0x20(%rsp)
	movq %r14,0x28(%rsp)
	cmpq $0x0,%r13
	jna L_252521
L_253007:
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x710(%rbp)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x728(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %rsp,0x8(%r14)
	movl 0x180(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_484090
L_253008:
	movq %rsp,%r15
L_253009:
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x710(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x63B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x28,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x720(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x6F0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x6D8(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x6E8(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x18,%r10
	movq %r15,0x8(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0x700(%rbp),%r11
	movq %r11,0x10(%r14,%r15,1)
	incq %r13
	movq %r13,0x6D8(%rbp)
	jmp loop_2939
.p2align 0x4
L_484090:
L_253010:
	movq 0x190(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_484093
L_253011:
	movq 0x198(%rbp),%r14
	cmpb $0x2,0x0(%r14)
	je L_484091
L_253012:
	movq %rsp,%r15
	jmp L_253009
.p2align 0x4
L_484091:
L_253013:
	movq 0x718(%rbp),%r14
	cmpq $0x1,%r14
	je L_484092
L_253014:
	movq 0x0(%r14),%r15
L_253015:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x708(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x6F8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x740(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x718(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x730(%rbp)
	addq $0x740,%rbp
	leaq (L_253016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_484092:
L_253023:
	movq $0x1,%r15
	jmp L_253015
.p2align 0x4
L_484093:
L_253024:
	movq %rsp,%r15
	jmp L_253009
.p2align 0x4
L_484095:
L_253025:
	movq (globalObjptr+0x1C18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3F4C
rev_353:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq $0x1,%r15
	je L_484100
L_253149:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x548(%rbp)
	movq %r14,0x550(%rbp)
	movq $0x1,0x558(%rbp)
.p2align 0x4,,0x7
L_253150:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484099
.p2align 0x4,,0x7
L_253151:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x558(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x548(%rbp),%r14
	cmpq $0x1,%r14
	je L_484098
L_253152:
	movq %r15,0x558(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x548(%rbp)
	movq %r15,0x550(%rbp)
	jmp L_253150
.p2align 0x4
L_484098:
L_253154:
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_253155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_484099:
L_253173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_253174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253174
.p2align 0x4
.long 0x3F50
L_253174:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	jmp L_253151
.p2align 0x4
L_484100:
L_253175:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_253154
.p2align 0x4
.long 0x4038
L_254814:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254815
L_254844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254845
.p2align 0x4
.long 0x403F
L_254845:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254815:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254816:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_252474
L_254817:
	cmpq $0x1,%r14
	je L_484101
L_254818:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254816
.p2align 0x4
L_484101:
L_254819:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254820
L_254842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_254843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254843
.p2align 0x4
.long 0x4042
L_254843:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_254820:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484102
L_254821:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_254822
.p2align 0x4
L_484102:
L_254841:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254822
.p2align 0x4
.long 0x3FFF
L_254296:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x530(%rbp)
	movl 0x550(%rbp),%r15d
	movl %r15d,0x540(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254297
L_254316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_254317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254317
.p2align 0x4
.long 0x4003
L_254317:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_254297:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x540(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_254298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3FAA
L_253758:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253759
L_253894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253895
.p2align 0x4
.long 0x3FBD
L_253895:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253759:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_484107
L_253760:
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_253761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3949
.p2align 0x4
L_484107:
L_253893:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_253768:
	testl %ecx,%ecx
	jz L_484112
L_253769:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_253770:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253771:
	addl 0x0(%r14),%ecx
	movl %ecx,0x78(%rbp)
	jo L_252474
L_253772:
	cmpq $0x1,%r15
	je L_484108
L_253773:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_253771
.p2align 0x4
L_484108:
L_253774:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253775
L_253886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253887
.p2align 0x4
.long 0x3FBA
L_253887:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253775:
	movl 0x78(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484109
L_253776:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_253777:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484109:
L_253885:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253777
.p2align 0x4
L_484112:
L_253888:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_253770
.p2align 0x4
.long 0x3FC4
L_253932:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x540(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253933
L_253985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253986
.p2align 0x4
.long 0x3FD0
L_253986:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253933:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x548(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107B8)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_253934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FD5
L_254007:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x590(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254008
L_254039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_254040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254040
.p2align 0x4
.long 0x3FDB
L_254040:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_254008:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5A0(%rbp)
	addq $0x18,%r12
	movq 0x590(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254009:
	addl 0x0(%r15),%ecx
	movl %ecx,0x54C(%rbp)
	jo L_252474
L_254010:
	cmpq $0x1,%r14
	je L_484115
L_254011:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254009
.p2align 0x4
L_484115:
L_254012:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254013
L_254037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_254038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254038
.p2align 0x4
.long 0x3FDC
L_254038:
	addq $0xFFFFFFFFFFFFFA50,%rbp
L_254013:
	movl 0x54C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484116
L_254014:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
L_254015:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x590(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x530(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_254016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_484116:
L_254036:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254015
.p2align 0x4
.long 0x3FE6
L_254084:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254085
L_254186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254187
.p2align 0x4
.long 0x3FF4
L_254187:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254085:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5D8(%rbp)
	addq $0x18,%r12
	movq 0x5C8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254086:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_252474
L_254087:
	cmpq $0x1,%r14
	je L_484120
L_254088:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254086
.p2align 0x4
L_484120:
L_254089:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254090
L_254184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254185
.p2align 0x4
.long 0x3FF5
L_254185:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254090:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484121
L_254091:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5D8(%rbp),%r14
	movq %r14,0x0(%r15)
L_254092:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x588(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x5C8(%rbp)
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107E0)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484121:
L_254183:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254092
.p2align 0x4
.long 0x3FE4
rev_355:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq $0x1,%r15
	je L_484127
L_254215:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x588(%rbp)
	movq %r14,0x5C0(%rbp)
	movq $0x1,0x5C8(%rbp)
.p2align 0x4,,0x7
L_254216:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484126
.p2align 0x4,,0x7
L_254217:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x5C8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x588(%rbp),%r14
	cmpq $0x1,%r14
	je L_484125
L_254218:
	movq %r15,0x5C8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x588(%rbp)
	movq %r15,0x5C0(%rbp)
	jmp L_254216
.p2align 0x4
L_484125:
L_254220:
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_484126:
L_254241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254242
.p2align 0x4
.long 0x3FF9
L_254242:
	addq $0xFFFFFFFFFFFFF870,%rbp
	jmp L_254217
.p2align 0x4
L_484127:
L_254243:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_254220
.p2align 0x4
.long 0x4012
L_254478:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_254479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x3F69
L_253357:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253358
L_253419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253420
.p2align 0x4
.long 0x3F75
L_253420:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253358:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10790)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F7E
L_253466:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253467
L_253471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253472
.p2align 0x4
.long 0x3F7F
L_253472:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253467:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_252703
L_253468:
	movq (globalObjptr+0xF10)(%rip),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_253469
.p2align 0x4
.long 0x3EF9
L_252611:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252612
L_252719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252720
.p2align 0x4
.long 0x3F0B
L_252720:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252612:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252613:
	addl 0x0(%r15),%ecx
	movl %ecx,0x54(%rbp)
	jo L_252474
L_252614:
	cmpq $0x1,%r14
	je L_484131
L_252615:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252613
.p2align 0x4
L_484131:
L_252616:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252617
L_252717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252718
.p2align 0x4
.long 0x3F0A
L_252718:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252617:
	movq 0x98(%rbp),%r15
	movl 0x54(%rbp),%ecx
	jmp L_252618
.p2align 0x4
.long 0x3EF6
L_252628:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_252629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3F19
L_252821:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x3F31
L_252962:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x728(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252963
L_253047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_253048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253048
.p2align 0x4
.long 0x3F3D
L_253048:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_252963:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x738(%rbp)
	addq $0x18,%r12
	movq 0x728(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x730(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252964:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_252965:
	cmpq $0x1,%r14
	je L_484135
L_252966:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252964
.p2align 0x4
L_484135:
L_252967:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252968
L_253045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_253046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253046
.p2align 0x4
.long 0x3F3E
L_253046:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_252968:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484136
L_252969:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x738(%rbp),%r14
	movq %r14,0x0(%r15)
L_252970:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x728(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x730(%rbp)
	addq $0x18,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10760)(%rip),%r15
	movq %r15,0x740(%rbp)
	addq $0x740,%rbp
	leaq (L_252971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484136:
L_253044:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252970
.p2align 0x4
.long 0x3F36
L_253016:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movl 0x740(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253017
L_253021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_253022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253022
.p2align 0x4
.long 0x3F37
L_253022:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_253017:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x708(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x718(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_484140
L_253020:
	movq 0x730(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_253019:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x728(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_253009
.p2align 0x4
L_484140:
	movq %r14,%r15
	jmp L_253019
.p2align 0x4
.long 0x3F4C
L_253155:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253156
L_253171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253172
.p2align 0x4
.long 0x3F4F
L_253172:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253156:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x548(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10778)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_253157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3FFF
L_254298:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254299
L_254314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_254315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254315
.p2align 0x4
.long 0x4002
L_254315:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_254299:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x530(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x540(%rbp)
	addq $0x18,%r12
	movq 0x520(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254300:
	addl 0x0(%r15),%ecx
	movl %ecx,0x520(%rbp)
	jo L_252474
L_254301:
	cmpq $0x1,%r14
	je L_484143
L_254302:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254300
.p2align 0x4
L_484143:
L_254303:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254304
L_254312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_254313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254313
.p2align 0x4
.long 0x4001
L_254313:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_254304:
	movl 0x520(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484145
L_254305:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x540(%rbp),%r14
	movq %r14,0x0(%r15)
L_254306:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_254307:
	movl %r13d,0x0(%r15)
	movq %r14,0x548(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x560(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x548,%rbp
	leaq (L_254308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484145:
L_254311:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254306
.p2align 0x4
.long 0x3FAB
L_253761:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253762
L_253891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253892
.p2align 0x4
.long 0x3FBC
L_253892:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253762:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253763:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_252474
L_253764:
	cmpq $0x1,%r14
	je L_484149
L_253765:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253763
.p2align 0x4
L_484149:
L_253766:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253767
L_253889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253890
.p2align 0x4
.long 0x3FBB
L_253890:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253767:
	movq 0x78(%rbp),%r15
	movl 0x40(%rbp),%ecx
	jmp L_253768
.p2align 0x4
.long 0x3FA8
L_253778:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_253779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3FC5
L_253934:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x560(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253935
L_253983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253984
.p2align 0x4
.long 0x3FCE
L_253984:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253935:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x548(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253936:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_252474
L_253937:
	cmpq $0x1,%r14
	je L_484153
L_253938:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253936
.p2align 0x4
L_484153:
L_253939:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253940
L_253981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_253982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253982
.p2align 0x4
.long 0x3FCF
L_253982:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_253940:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484154
L_253941:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
L_253942:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x548(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x560(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF4A8)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_253943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484154:
L_253980:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253942
.p2align 0x4
.long 0x3FD6
L_254016:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x598(%rbp)
	movl 0x5A8(%rbp),%r15d
	movl %r15d,0x54C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254017
L_254034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_254035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254035
.p2align 0x4
.long 0x3FDB
L_254035:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_254017:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x54C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x588(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x590(%rbp)
	addq $0x590,%rbp
	leaq (L_254018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3FE7
L_254093:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254094
L_254181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254182
.p2align 0x4
.long 0x3FF4
L_254182:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254094:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5D8(%rbp)
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x5C8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254095:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_252474
L_254096:
	cmpq $0x1,%r14
	je L_484159
L_254097:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254095
.p2align 0x4
L_484159:
L_254098:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254099
L_254179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254180
.p2align 0x4
.long 0x3FF3
L_254180:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254099:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484160
L_254100:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5D8(%rbp),%r14
	movq %r14,0x0(%r15)
L_254101:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x5C0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484160:
L_254178:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254101
.p2align 0x4
.long 0x3FE4
L_254221:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254222
L_254239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254240
.p2align 0x4
.long 0x3FF7
L_254240:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254222:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x107E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4013
L_254479:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_254480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3F6A
L_253359:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253360
L_253417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253418
.p2align 0x4
.long 0x3F73
L_253418:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253360:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253361:
	addl 0x0(%r15),%ecx
	movl %ecx,0x78(%rbp)
	jo L_252474
L_253362:
	cmpq $0x1,%r14
	je L_484165
L_253363:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253361
.p2align 0x4
L_484165:
L_253364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253365
L_253415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253416
.p2align 0x4
.long 0x3F74
L_253416:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253365:
	movl 0x78(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484166
L_253366:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_253367:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10798)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484166:
L_253414:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253367
.p2align 0x4
.long 0x3EFA
L_252629:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x510(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252630
L_252711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252712
.p2align 0x4
.long 0x3F08
L_252712:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252630:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_252631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3F1A
L_252822:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F32
L_252971:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x710(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252972
L_253042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_253043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253043
.p2align 0x4
.long 0x3F3D
L_253043:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_252972:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x738(%rbp)
	addq $0x18,%r12
	movq 0x710(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x730(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252973:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_252974:
	cmpq $0x1,%r14
	je L_484171
L_252975:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252973
.p2align 0x4
L_484171:
L_252976:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252977
L_253040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_253041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253041
.p2align 0x4
.long 0x3F3C
L_253041:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_252977:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484172
L_252978:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x738(%rbp),%r14
	movq %r14,0x0(%r15)
L_252979:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x710(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x738(%rbp)
	addq $0x738,%rbp
	leaq (L_252980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484172:
L_253039:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252979
.p2align 0x4
.long 0x3F4C
L_253157:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253158
L_253169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253170
.p2align 0x4
.long 0x3F4F
L_253170:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253158:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x548(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x538(%rbp),%r13
	cmpq $0x1,%r13
	je L_484176
L_253159:
	movq 0x0(%r13),%r14
L_253160:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x538(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	addq $0x560,%rbp
	leaq (L_253161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_484176:
L_253168:
	movq $0x1,%r14
	jmp L_253160
.p2align 0x4
.long 0x4000
L_254308:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_252703
L_254309:
	movq 0x510(%rbp),%r15
	jmp L_254280
.p2align 0x4
.long 0x3FAC
L_253779:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x550(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253780
L_253883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253884
.p2align 0x4
.long 0x3FB9
L_253884:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253780:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3FC6
L_253943:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253944
L_253978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253979
.p2align 0x4
.long 0x3FCE
L_253979:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253944:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253945:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_252474
L_253946:
	cmpq $0x1,%r14
	je L_484180
L_253947:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253945
.p2align 0x4
L_484180:
L_253948:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253949
L_253976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_253977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253977
.p2align 0x4
.long 0x3FCD
L_253977:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_253949:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484181
L_253950:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
L_253951:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x558(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x530(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_253952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_484181:
L_253975:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253951
.p2align 0x4
.long 0x3FD7
L_254018:
	addq $0xFFFFFFFFFFFFFA70,%rbp
	movl 0x590(%rbp),%r15d
	movl %r15d,0x54C(%rbp)
	movq 0x598(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254019
L_254032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_254033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254033
.p2align 0x4
.long 0x3FDA
L_254033:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_254019:
	movl 0x54C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484187
L_254020:
	decl %ecx
	jo L_252474
L_254021:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r15)
L_254022:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_254023:
	movl %r13d,0x0(%r15)
	movq 0x580(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq %r14,0x580(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x580,%rbp
	leaq (L_254024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484187:
L_254031:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254022
.p2align 0x4
.long 0x3FE6
L_254102:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x3FE4
L_254223:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254224
L_254237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254238
.p2align 0x4
.long 0x3FF7
L_254238:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254224:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x588(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x550(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x5B8(%rbp),%r13
	cmpq $0x1,%r13
	je L_484189
L_254225:
	movq 0x0(%r13),%r14
L_254226:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x588(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x790(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x5C8(%rbp)
	addq $0x790,%rbp
	leaq (L_254227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_484189:
L_254236:
	movq $0x1,%r14
	jmp L_254226
.p2align 0x4
.long 0x4013
L_254480:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254481
L_254509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_254510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254510
.p2align 0x4
.long 0x4016
L_254510:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_254481:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x530(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x568(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254482:
	addl 0x0(%r15),%ecx
	movl %ecx,0x52C(%rbp)
	jo L_252474
L_254483:
	cmpq $0x1,%r14
	je L_484191
L_254484:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254482
.p2align 0x4
L_484191:
L_254485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254486
L_254507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_254508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254508
.p2align 0x4
.long 0x4017
L_254508:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_254486:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484192
L_254487:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x568(%rbp),%r14
	movq %r14,0x0(%r15)
L_254488:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x530(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x508(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_254489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_484192:
L_254506:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254488
.p2align 0x4
.long 0x3F6B
L_253368:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253369
L_253412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253413
.p2align 0x4
.long 0x3F73
L_253413:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253369:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253370:
	addl 0x0(%r15),%ecx
	movl %ecx,0x70(%rbp)
	jo L_252474
L_253371:
	cmpq $0x1,%r14
	je L_484196
L_253372:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253370
.p2align 0x4
L_484196:
L_253373:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253374
L_253410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253411
.p2align 0x4
.long 0x3F72
L_253411:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253374:
	movl 0x70(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484197
L_253375:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_253376:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484197:
L_253409:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253376
.p2align 0x4
.long 0x3EFA
L_252631:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252632
L_252709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252710
.p2align 0x4
.long 0x3F08
L_252710:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252632:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252633:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_252474
L_252634:
	cmpq $0x1,%r14
	je L_484201
L_252635:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252633
.p2align 0x4
L_484201:
L_252636:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252637
L_252707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252708
.p2align 0x4
.long 0x3F07
L_252708:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252637:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484203
L_252638:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_252639:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_252640:
	movl %r13d,0x0(%r15)
	movq %r14,0x508(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_252641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484203:
L_252706:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252639
.p2align 0x4
.long 0x3F1B
L_252823:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movl $0x1,0x6E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x3F33
L_252980:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq 0x738(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x748(%rbp)
	addq $0x740,%rbp
	leaq (L_252981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3F4D
L_253161:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movl 0x560(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253162
L_253166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253167
.p2align 0x4
.long 0x3F4E
L_253167:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_253162:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x538(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x548(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_484207
L_253165:
	movq 0x550(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_253164:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x520(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x0(%r15),%r13
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	jmp L_253138
.p2align 0x4
L_484207:
	movq %r14,%r15
	jmp L_253164
.p2align 0x4
.long 0x3FAC
L_253781:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253782
L_253881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253882
.p2align 0x4
.long 0x3FB9
L_253882:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253782:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253783:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_252474
L_253784:
	cmpq $0x1,%r14
	je L_484209
L_253785:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253783
.p2align 0x4
L_484209:
L_253786:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253787
L_253879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253880
.p2align 0x4
.long 0x3FB8
L_253880:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253787:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484211
L_253788:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_253789:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_253790:
	movl %r13d,0x0(%r15)
	movq %r14,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x560(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x548,%rbp
	leaq (L_253791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484211:
L_253878:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253789
.p2align 0x4
.long 0x3FC7
L_253952:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x530(%rbp)
	movl 0x580(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253953
L_253973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253974
.p2align 0x4
.long 0x3FCC
L_253974:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253953:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x184(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x548(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_253954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3FD8
L_254024:
	addq $0xFFFFFFFFFFFFFA80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254025
L_254029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_254030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254030
.p2align 0x4
.long 0x3FD9
L_254030:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_254025:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_254027
.p2align 0x4
.long 0x3FE8
L_254103:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254104
L_254176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254177
.p2align 0x4
.long 0x3FF2
L_254177:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254104:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x5D8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5E0(%rbp)
	addq $0x18,%r12
	movq 0x5C8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_254105:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_252474
L_254106:
	cmpq $0x1,%r14
	je L_484218
L_254107:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_254105
.p2align 0x4
L_484218:
L_254108:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254109
L_254174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254175
.p2align 0x4
.long 0x3FF1
L_254175:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254109:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484219
L_254110:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5E0(%rbp),%r14
	movq %r14,0x0(%r15)
L_254111:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_254112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484219:
L_254173:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254111
.p2align 0x4
.long 0x3FF8
L_254227:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movl 0x790(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254228
L_254234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254235
.p2align 0x4
.long 0x3FF9
L_254235:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254228:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x184(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x588(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x5C0(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_484224
L_254233:
	movq 0x5C8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_254230:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x580(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x0(%r15),%r13
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,0x570(%rbp)
	je L_484223
L_254231:
	movq %r15,0x580(%rbp)
	jmp L_254076
.p2align 0x4
L_484223:
L_254232:
	movq %r15,0x570(%rbp)
	jmp L_254122
.p2align 0x4
L_484224:
	movq %r14,%r15
	jmp L_254230
.p2align 0x4
.long 0x4012
L_254489:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movl 0x570(%rbp),%r15d
	movl %r15d,0x52C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254490
L_254504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_254505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254505
.p2align 0x4
.long 0x4016
L_254505:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_254490:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x52C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x530(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x558(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x560(%rbp)
	addq $0x560,%rbp
	leaq (L_254491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3F66
L_253377:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3EFB
L_252641:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252642
L_252704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_252705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252705
.p2align 0x4
.long 0x3F06
L_252705:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_252642:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_252644
.p2align 0x4
.long 0x3F1C
L_252824:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252825
L_252866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252867
.p2align 0x4
.long 0x3F24
L_252867:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252825:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252826:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_252827:
	cmpq $0x1,%r14
	je L_484229
L_252828:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252826
.p2align 0x4
L_484229:
L_252829:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252830
L_252864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252865
.p2align 0x4
.long 0x3F23
L_252865:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252830:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484230
L_252831:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
L_252832:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_484230:
L_252863:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252832
.p2align 0x4
.long 0x3F34
L_252981:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x738(%rbp)
	movl 0x748(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252982
L_253037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_253038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253038
.p2align 0x4
.long 0x3F3B
L_253038:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_252982:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x738(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x740(%rbp)
	addq $0x740,%rbp
	leaq (L_252983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3FAD
L_253791:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253792
L_253876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253877
.p2align 0x4
.long 0x3FB7
L_253877:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253792:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_253794
.p2align 0x4
.long 0x3FC8
L_253954:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movl 0x578(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	movq 0x580(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253955
L_253971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253972
.p2align 0x4
.long 0x3FCB
L_253972:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253955:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484239
L_253956:
	decl %ecx
	jo L_252474
L_253957:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
L_253958:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_253959:
	movl %r13d,0x0(%r15)
	movq %r14,0x560(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x578(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x560,%rbp
	leaq (L_253960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484239:
L_253970:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253958
.p2align 0x4
.long 0x3FE9
L_254112:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movl 0x790(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	movq 0x798(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254113
L_254171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254172
.p2align 0x4
.long 0x3FF0
L_254172:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254113:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484243
L_254114:
	decl %ecx
	jo L_252474
L_254115:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r15)
L_254116:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_254117:
	movl %r13d,0x0(%r15)
	movq %r14,0x790(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	addq $0x790,%rbp
	leaq (L_254118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484243:
L_254170:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254116
.p2align 0x4
.long 0x4014
L_254491:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movl 0x560(%rbp),%r15d
	movl %r15d,0x52C(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254492
L_254502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_254503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254503
.p2align 0x4
.long 0x4015
L_254503:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_254492:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484247
L_254493:
	decl %ecx
	jo L_252474
L_254494:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
L_254495:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_254496:
	movl %r13d,0x0(%r15)
	movq %r14,0x558(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x570(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x558,%rbp
	leaq (L_254497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484247:
L_254501:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_254495
.p2align 0x4
.long 0x3F6C
L_253378:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x500(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253379
L_253407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253408
.p2align 0x4
.long 0x3F71
L_253408:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253379:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3F1D
L_252833:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252834
L_252861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252862
.p2align 0x4
.long 0x3F22
L_252862:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252834:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252835:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_252836:
	cmpq $0x1,%r14
	je L_484250
L_252837:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252835
.p2align 0x4
L_484250:
L_252838:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252839
L_252859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252860
.p2align 0x4
.long 0x3F21
L_252860:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252839:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484251
L_252840:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
L_252841:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484251:
L_252858:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252841
.p2align 0x4
.long 0x3F34
L_252983:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x738(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252984
L_253035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_253036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253036
.p2align 0x4
.long 0x3F3B
L_253036:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_252984:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x738(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x740(%rbp)
	addq $0x18,%r12
	movq 0x730(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252985:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_252474
L_252986:
	cmpq $0x1,%r14
	je L_484255
L_252987:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252985
.p2align 0x4
L_484255:
L_252988:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252989
L_253033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x750,%rbp
	leaq (L_253034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253034
.p2align 0x4
.long 0x3F3A
L_253034:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
L_252989:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484256
L_252990:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x740(%rbp),%r14
	movq %r14,0x0(%r15)
L_252991:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x710(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x728(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x730(%rbp)
	addq $0x730,%rbp
	leaq (L_252992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484256:
L_253032:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252991
.p2align 0x4
.long 0x3FC9
L_253960:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253961
L_253968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253969
.p2align 0x4
.long 0x3FCA
L_253969:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_253961:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_253963
.p2align 0x4
.long 0x3FEA
L_254118:
	addq $0xFFFFFFFFFFFFF870,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_254119
L_254168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_254169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_254169
.p2align 0x4
.long 0x3FEF
L_254169:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_254119:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_254121
.p2align 0x4
.long 0x4006
L_254497:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_254499
.p2align 0x4
.long 0x3F6C
L_253380:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253381
L_253405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253406
.p2align 0x4
.long 0x3F71
L_253406:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253381:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253382:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_252474
L_253383:
	cmpq $0x1,%r14
	je L_484265
L_253384:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253382
.p2align 0x4
L_484265:
L_253385:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253386
L_253403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253404
.p2align 0x4
.long 0x3F70
L_253404:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253386:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484266
L_253387:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
L_253388:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484266:
L_253402:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253388
.p2align 0x4
.long 0x3F1E
L_252842:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movl 0x6E0(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movq 0x6E8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252843
L_252856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252857
.p2align 0x4
.long 0x3F20
L_252857:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252843:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484272
L_252844:
	decl %ecx
	jo L_252474
L_252845:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
L_252846:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_252847:
	movl %r13d,0x0(%r15)
	movq %r14,0x6E0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x700(%rbp)
	addq $0x6E0,%rbp
	leaq (L_252848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484272:
L_252855:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252846
.p2align 0x4
.long 0x3F35
L_252992:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movl 0x730(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movq 0x738(%rbp),%r15
	movq %r15,0x710(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252993
L_253030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x730,%rbp
	leaq (L_253031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253031
.p2align 0x4
.long 0x3F39
L_253031:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
L_252993:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484276
L_252994:
	decl %ecx
	jo L_252474
L_252995:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x710(%rbp),%r14
	movq %r14,0x8(%r15)
L_252996:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_252997:
	movl %r13d,0x0(%r15)
	movq %r14,0x730(%rbp)
	movq 0x6F0(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x718(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x748(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x750(%rbp)
	addq $0x730,%rbp
	leaq (L_252998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484276:
L_253029:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252996
.p2align 0x4
.long 0x3F6D
L_253389:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movl 0x4F8(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253390
L_253400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_253401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253401
.p2align 0x4
.long 0x3F6F
L_253401:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_253390:
	movl 0x70(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484280
L_253391:
	decl %ecx
	jo L_252474
L_253392:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
L_253393:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_252474
L_253394:
	movl %r13d,0x0(%r15)
	movq %r14,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F8,%rbp
	leaq (L_253395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484280:
L_253399:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253393
.p2align 0x4
.long 0x3F15
L_252848:
	addq $0xFFFFFFFFFFFFF920,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252849
L_252853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_252854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252854
.p2align 0x4
.long 0x3F1F
L_252854:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_252849:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_252851
.p2align 0x4
.long 0x3F2F
L_252998:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_253000
.p2align 0x4
.long 0x3F6E
L_253395:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_252703
	jmp L_253397
