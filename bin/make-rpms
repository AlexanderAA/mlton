#!/bin/sh

# 
# make-rpms srcdir topdir
#
# This script makes binary and source RPMs in topdir using the sources in
# srcdir.
#
# Note that the build (rpm -ba) uses whatever mlton is in your PATH,
# and assumes that that mlton's basis is capable of compiling this version,
# since the make call in mlton.spec sets STUBS=no to bypass the stubs.

name=`basename $0`

die () {
	echo >&2 $1
	exit 1
}

usage () {
	die "usage: $name srcdir topdir"
}

while [ "$#" -gt 0 ]; do
	case "$1" in
	*)
		case "$#" in
		2)
			srcdir="$1"
			shift
			topdir="$1"
			shift
			;;
		*)
			usage
			;;
		esac
	esac
done
if [ "$topdir" = 'unset' ]; then
	usage
fi

version=`date +%Y%m%d`
release="1"
package="mlton-$version-$release"

tar.read () {
	tar -p -xf - "$@"
}

tar.write () {
	tar -p -cf - "$@"
}

echo 'Cleaning up'
src="$topdir/SOURCES/mlton-$version"
mkdir -p $topdir
cd $topdir
mkdir -p BUILD RPMS/i386 SOURCES SPECS SRPMS
cd $topdir/SOURCES
rm -rf mlton-$version
echo 'Getting sources'
mkdir mlton-$version
cd mlton-$version
( cd $srcdir && tar.write . ) | tar.read
make clean
find . -type d | grep CVS | xargs rm -rf
make VERSION=$version version
cd doc
sed "/^Version:/s;.*;Version: $version;" <mlton.spec >z
sed "/^Release:/s;.*;Release: $release;" <z >$topdir/SPECS/mlton.spec
rm -f z
( cd examples; make get )

manvers=`date '+%B %d, %Y'`
cd $src/man
for f in mlprof.1 mlton.1; do
	sed "s/\(.*\)VERSION\(.*\)/\1$manvers\2/" <$f >z
	mv z $f
done

echo 'Creating source tgz'
cd $topdir/SOURCES
tar.write mlton-$version | gzip >mlton-$version.tgz
rm -rf mlton-$version

echo 'Building rpms'
time rpm -ba --quiet --clean $topdir/SPECS/mlton.spec ||
		die 'rpm build failed'

echo 'Success'
