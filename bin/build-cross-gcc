#!/usr/bin/env bash

# This script builds and installs a gcc cross compiler.

# It has been used to build cross compilers from Linux to Cygwin and
# from Linux to SunOS.  It is unlikely that this script will work
# out-of-the-box.  It is only intended as a template.  You should read
# through it and understand what it does, and make changes as
# necessary.  Feel free to add another targetType if you modify this
# script for another target.

set -e

die () {
	echo >&2 "$1"
	exit 1
}

root=`pwd`
name=`basename $0`

usage () {
	die "usage: $name {cygwin|sun}"
}

case "$#" in
1)
	case "$1" in
	cygwin|sun)
		targetType="$1"
	;;
	*)
		usage
	;;
	esac
;;
*)
	usage
esac

# You may want to change the installation prefix, which is where the
# script will install the cross-compiler tools.
prefix='/usr'

# You must have have the sources to binutils and gcc, and place the
# tarfiles in the current directory.  You can find ftp sites to
# download binutils and gcc-core at gnu.org.  You may need to change
# the version numbers below to match what you download.
binutils='binutils-2.12'
gccVers='2.95.3'
gccTar="gcc-core-$gccVers.tar"

# You may want to set the target.
case "$targetType" in
cygwin)
	target='i386-pc-cygwin'
	# For Cygwin, we also need the cygwin and w32api packages,
	# which contain necessary header files and libraries.  I got
	# them by installing cygwin in a Windows machine (using #
	# Cygwin's setup.exe program) and then getting the bzip'ed tar
	# files out of their Cygwin packages dir.  I had problems with
	# cygwin-1.3.18-1, since its libcygwin.a contained a file,
	# pseudo-reloc.o, with some strangeness that binutils didn't
	# correctly handle.
	cygwin='cygwin-1.3.17-1'
	w32api='w32api-2.1-1'
;;
sun)
	target='sparc-sun-solaris'
	# For sun, we assume that you have already copied the includes
	# and libraries from a SunOS machine to the host machine.
	if ! [ -d "$prefix/$target/include" -a -d "$prefix/$target/lib" ]; then
		die "Must create $prefix/$target/{include,lib}."
	fi
	# The GCC tools expect limits.h to be in sys-include, not include.
	( cd $prefix/$target && 
		mkdir -p sys-include &&
		mv include/limits.h sys-include )
;;
esac

exists () {
	if [ ! -r "$1" ]; then
		die "$1 does not exist"
	fi
}

echo 'Checking that needed files exist.'
exists $binutils.tar
exists $gccTar
case "$targetType" in
cygwin)
	exists $cygwin.tar
	exists $w32api.tar
	echo 'Copying include files and libraries needed by cross compiler.'
	cd $root
	mkdir -p cygwin
	cd cygwin
	tar x <../$cygwin.tar
	tar x <../$w32api.tar
	mkdir -p $prefix/$target || 
		die "Cannot create $prefix/$target."
	(cd usr && tar c include lib) | (cd $prefix/$target/ && tar x)
;;
*)
;;
esac

echo 'Building binutils.'
cd $root
if [ ! -d $binutils ]; then
	tar x <$binutils.tar
fi
mkdir -p build-binutils
cd build-binutils
../$binutils/configure --prefix=$prefix --target=$target \
	>$root/configure-binutils-log 2>&1 ||
	die "Configure of binutils failed."
make all install >$root/build-binutils-log 2>&1 ||
	die "Build of binutils failed."

echo 'Building gcc.'
cd $root
tar x <$gccTar
mkdir -p build-gcc
cd build-gcc
../gcc-$gccVers/configure \
	--enable-languages=c \
	--prefix=$prefix \
	--target=$target \
	>$root/configure-gcc-log 2>&1 || 
	die "Configure of gcc failed."
make all install >$root/build-gcc-log 2>&1 || 
	die "Build of gcc failed."

echo 'Success.'
