#!/usr/bin/env bash

# This script adds a new crosscompiler target for MLton.
#
# It takes three arguments.
#
# 1. <crossHost>, will be used via the -b flag passed to the GCC
# cross-compiler tools.  You must already have installed the GCC
# cross-compiler tools.  This script does not do that, although you
# may find the script build-cross-gcc helpful.  <crossHost> here
# should be the same as target in build-cross-gcc.  Examples are
# i386-pc-cygwin and sparc-sun-solaris.
#
# 2. {cygwin|sun}, specifies the kind of system.  There are only two
# possibilities.
#
# 3. <machine> specifies a remote machine of the cross type.  After
# cross compiling the runtime, this script will ssh to that machine to
# get the values of the constants that the MLton basis library needs.
# Of course, you must be able to ssh to this machine.
#
# You also may need to set $libDir, which determines where the
# cross-compiler target will be installed.

set -e

die () {
	echo >&2 "$1"
	exit 1
}

usage () {
	die "usage: $name <crossHost> {cygwin|sun} <machine>"
}

case "$#" in
3)
	crossHost="$1"
	crossType="$2"
	machine="$3"
	;;
*)
	usage
	;;
esac

name=`basename $0`
original=`pwd`
dir=`dirname $0`
src=`cd $dir/.. && pwd`

# libDir is the mlton lib directory where you would like the
# cross-compiler information to be installed.  If you have installed
# from the rpms, this will usually be /usr/lib/mlton.  You must have
# write permission there.

lib="$src/build/lib"

# You shouldn't need to change anything below this line.

case "$crossType" in
cygwin|sun)
;;
*)
	die "invalid crossType: $crossType"
;;
esac

PATH=$src/build/bin:$PATH

mkdir -p "$lib/$crossHost/include" ||
	die "Cannot write to $lib."

echo 'Making runtime.' 
(cd $src && 
	make HOST=$crossHost HOSTTYPE=$crossType LIB=$lib hostmap runtime \
		>runtime-log 2>&1 &&
	rm -f runtime-log) ||
	die "Unable to make runtime.  See $src/runtime-log."

exe='print-constants'
echo 'Building print-constants executable.'
(
	mlton -build-constants true >$exe.c
	mlton -output $original/$exe -host $crossHost $exe.c
	rm -f $exe.c
) || die "Unable to build $exe executable."

echo "Running print-constants on $machine."
tar cf - $exe |
	ssh $machine "tar xf - && ./$exe && rm -f $exe" \
	>"$lib/$crossHost/constants"

rm -f $original/$exe
